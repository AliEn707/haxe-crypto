// Generated by Haxe
(function (console, $global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	opt = opt.split("u").join("");
	this.r = new RegExp(r,opt);
};
EReg.__name__ = ["EReg"];
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,replace: function(s,by) {
		return s.replace(this.r,by);
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	if(pos < 0) {
		pos = s.length + pos;
		if(pos < 0) {
			pos = 0;
		}
	}
	return s.substr(pos,len);
};
HxOverrides.indexOf = function(a,obj,i) {
	var len = a.length;
	if(i < 0) {
		i += len;
		if(i < 0) {
			i = 0;
		}
	}
	while(i < len) {
		if(a[i] === obj) {
			return i;
		}
		++i;
	}
	return -1;
};
HxOverrides.remove = function(a,obj) {
	var i = HxOverrides.indexOf(a,obj,0);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
var List = function() {
	this.length = 0;
};
List.__name__ = ["List"];
List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,__class__: List
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
_$List_ListNode.__name__ = ["_List","ListNode"];
_$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: _$List_ListNode
};
Math.__name__ = ["Math"];
var Reflect = function() { };
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
var Std = function() { };
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = ["StringTools"];
StringTools.htmlEscape = function(s,quotes) {
	s = s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
	if(quotes) {
		return s.split("\"").join("&quot;").split("'").join("&#039;");
	} else {
		return s;
	}
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var Type = function() { };
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
var com_hurlant_crypto_hash_IHMAC = function() { };
com_hurlant_crypto_hash_IHMAC.__name__ = ["com","hurlant","crypto","hash","IHMAC"];
com_hurlant_crypto_hash_IHMAC.prototype = {
	getHashSize: null
	,compute: null
	,dispose: null
	,toString: null
	,__class__: com_hurlant_crypto_hash_IHMAC
};
var com_hurlant_crypto_hash_HMAC = function(hash,bits) {
	if(bits == null) {
		bits = 0;
	}
	this.hash = hash;
	this.bits = bits;
};
com_hurlant_crypto_hash_HMAC.__name__ = ["com","hurlant","crypto","hash","HMAC"];
com_hurlant_crypto_hash_HMAC.__interfaces__ = [com_hurlant_crypto_hash_IHMAC];
com_hurlant_crypto_hash_HMAC.prototype = {
	hash: null
	,bits: null
	,getHashSize: function() {
		if(this.bits != 0) {
			return this.bits / 8 | 0;
		} else {
			return this.hash.getHashSize();
		}
	}
	,compute: function(key,data) {
		var hashKey;
		if(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(key) > this.hash.getInputSize()) {
			hashKey = this.hash.hash(key);
		} else {
			hashKey = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(hashKey,key);
		}
		while(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(hashKey) < this.hash.getInputSize()) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(hashKey,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(hashKey),0);
		var innerKey = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var outerKey = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var _g1 = 0;
		var _g = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(hashKey);
		while(_g1 < _g) {
			var i = _g1++;
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(innerKey,i,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(hashKey,i) ^ 54);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(outerKey,i,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(hashKey,i) ^ 92);
		}
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(innerKey,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(hashKey));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(innerKey,data);
		var innerHash = this.hash.hash(innerKey);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(outerKey,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(hashKey));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(outerKey,innerHash);
		var outerHash = this.hash.hash(outerKey);
		if(this.bits > 0 && this.bits < 8 * com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(outerHash)) {
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(outerHash,this.bits / 8 | 0);
		}
		return outerHash;
	}
	,dispose: function() {
		this.hash = null;
		this.bits = 0;
	}
	,toString: function() {
		return "hmac-" + (this.bits > 0?this.bits + "-":"") + Std.string(this.hash);
	}
	,__class__: com_hurlant_crypto_hash_HMAC
};
var com_hurlant_crypto_hash_IHash = function() { };
com_hurlant_crypto_hash_IHash.__name__ = ["com","hurlant","crypto","hash","IHash"];
com_hurlant_crypto_hash_IHash.prototype = {
	getInputSize: null
	,getHashSize: null
	,hash: null
	,toString: null
	,getPadSize: null
	,__class__: com_hurlant_crypto_hash_IHash
};
var com_hurlant_crypto_hash_MD2 = function() {
	this.pad_size = 48;
};
com_hurlant_crypto_hash_MD2.__name__ = ["com","hurlant","crypto","hash","MD2"];
com_hurlant_crypto_hash_MD2.__interfaces__ = [com_hurlant_crypto_hash_IHash];
com_hurlant_crypto_hash_MD2.prototype = {
	pad_size: null
	,getInputSize: function() {
		return 16;
	}
	,getPadSize: function() {
		return this.pad_size;
	}
	,getHashSize: function() {
		return 16;
	}
	,hash: function(src) {
		var savedLength = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src);
		var i = 16 - com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src) % 16;
		if(i == 0) {
			i = 16;
		}
		while(true) {
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(src,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src),i);
			if(!(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src) % 16 != 0)) {
				break;
			}
		}
		var len = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src);
		var checksum = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var L = 0;
		i = 0;
		while(i < len) {
			var _g = 0;
			while(_g < 16) {
				var j = _g++;
				com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(checksum,j,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(checksum,j) ^ com_hurlant_crypto_hash_MD2.S[com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(src,i + j) ^ L]);
				L = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(checksum,j);
			}
			i += 16;
		}
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(src,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,checksum);
		len += 16;
		var X = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		i = 0;
		while(i < len) {
			var _g1 = 0;
			while(_g1 < 16) {
				var j1 = _g1++;
				com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(X,32 + j1,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(X,16 + j1,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(src,i + j1)) ^ com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(X,j1));
			}
			var t = 0;
			var _g2 = 0;
			while(_g2 < 18) {
				var j2 = _g2++;
				var _g11 = 0;
				while(_g11 < 48) {
					var k = _g11++;
					t = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(X,k) ^ com_hurlant_crypto_hash_MD2.S[t];
					com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(X,k,t);
				}
				t = t + j2 & 255;
			}
			i += 16;
		}
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(X,16);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(src,savedLength);
		return X;
	}
	,toString: function() {
		return "md2";
	}
	,__class__: com_hurlant_crypto_hash_MD2
};
var com_hurlant_crypto_hash_MD5 = function() {
	this.pad_size = 48;
};
com_hurlant_crypto_hash_MD5.__name__ = ["com","hurlant","crypto","hash","MD5"];
com_hurlant_crypto_hash_MD5.__interfaces__ = [com_hurlant_crypto_hash_IHash];
com_hurlant_crypto_hash_MD5.prototype = {
	pad_size: null
	,getInputSize: function() {
		return 64;
	}
	,getHashSize: function() {
		return 16;
	}
	,getPadSize: function() {
		return this.pad_size;
	}
	,hash: function(src) {
		var len = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src) * 8;
		var savedEndian = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_endian(src);
		while(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src) % 4 != 0) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(src,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src),0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(src,0);
		var a = [];
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_endian(src,com_hurlant_util_Endian.LITTLE_ENDIAN);
		var i = 0;
		while(i < com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src)) {
			a.push(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUnsignedInt(src));
			i += 4;
		}
		var h = this.core_md5(a,len);
		var out = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_endian(out,com_hurlant_util_Endian.LITTLE_ENDIAN);
		var _g = 0;
		while(_g < 4) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeUnsignedInt(out,h[_g++]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(src,len / 8 | 0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_endian(src,savedEndian);
		return out;
	}
	,core_md5: function(x,len) {
		x[len >> 5] |= 128 << len % 32;
		x[(len + 64 >>> 9 << 4) + 14] = len;
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var i = 0;
		while(i < x.length) {
			var _g = 0;
			while(_g < 16) {
				++_g;
				x[i] = x[i] | 0;
			}
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			a = this.ff(a,b,c,d,x[i],7,-680876936);
			d = this.ff(d,a,b,c,x[i + 1],12,-389564586);
			c = this.ff(c,d,a,b,x[i + 2],17,606105819);
			b = this.ff(b,c,d,a,x[i + 3],22,-1044525330);
			a = this.ff(a,b,c,d,x[i + 4],7,-176418897);
			d = this.ff(d,a,b,c,x[i + 5],12,1200080426);
			c = this.ff(c,d,a,b,x[i + 6],17,-1473231341);
			b = this.ff(b,c,d,a,x[i + 7],22,-45705983);
			a = this.ff(a,b,c,d,x[i + 8],7,1770035416);
			d = this.ff(d,a,b,c,x[i + 9],12,-1958414417);
			c = this.ff(c,d,a,b,x[i + 10],17,-42063);
			b = this.ff(b,c,d,a,x[i + 11],22,-1990404162);
			a = this.ff(a,b,c,d,x[i + 12],7,1804603682);
			d = this.ff(d,a,b,c,x[i + 13],12,-40341101);
			c = this.ff(c,d,a,b,x[i + 14],17,-1502002290);
			b = this.ff(b,c,d,a,x[i + 15],22,1236535329);
			a = this.gg(a,b,c,d,x[i + 1],5,-165796510);
			d = this.gg(d,a,b,c,x[i + 6],9,-1069501632);
			c = this.gg(c,d,a,b,x[i + 11],14,643717713);
			b = this.gg(b,c,d,a,x[i],20,-373897302);
			a = this.gg(a,b,c,d,x[i + 5],5,-701558691);
			d = this.gg(d,a,b,c,x[i + 10],9,38016083);
			c = this.gg(c,d,a,b,x[i + 15],14,-660478335);
			b = this.gg(b,c,d,a,x[i + 4],20,-405537848);
			a = this.gg(a,b,c,d,x[i + 9],5,568446438);
			d = this.gg(d,a,b,c,x[i + 14],9,-1019803690);
			c = this.gg(c,d,a,b,x[i + 3],14,-187363961);
			b = this.gg(b,c,d,a,x[i + 8],20,1163531501);
			a = this.gg(a,b,c,d,x[i + 13],5,-1444681467);
			d = this.gg(d,a,b,c,x[i + 2],9,-51403784);
			c = this.gg(c,d,a,b,x[i + 7],14,1735328473);
			b = this.gg(b,c,d,a,x[i + 12],20,-1926607734);
			a = this.hh(a,b,c,d,x[i + 5],4,-378558);
			d = this.hh(d,a,b,c,x[i + 8],11,-2022574463);
			c = this.hh(c,d,a,b,x[i + 11],16,1839030562);
			b = this.hh(b,c,d,a,x[i + 14],23,-35309556);
			a = this.hh(a,b,c,d,x[i + 1],4,-1530992060);
			d = this.hh(d,a,b,c,x[i + 4],11,1272893353);
			c = this.hh(c,d,a,b,x[i + 7],16,-155497632);
			b = this.hh(b,c,d,a,x[i + 10],23,-1094730640);
			a = this.hh(a,b,c,d,x[i + 13],4,681279174);
			d = this.hh(d,a,b,c,x[i],11,-358537222);
			c = this.hh(c,d,a,b,x[i + 3],16,-722521979);
			b = this.hh(b,c,d,a,x[i + 6],23,76029189);
			a = this.hh(a,b,c,d,x[i + 9],4,-640364487);
			d = this.hh(d,a,b,c,x[i + 12],11,-421815835);
			c = this.hh(c,d,a,b,x[i + 15],16,530742520);
			b = this.hh(b,c,d,a,x[i + 2],23,-995338651);
			a = this.ii(a,b,c,d,x[i],6,-198630844);
			d = this.ii(d,a,b,c,x[i + 7],10,1126891415);
			c = this.ii(c,d,a,b,x[i + 14],15,-1416354905);
			b = this.ii(b,c,d,a,x[i + 5],21,-57434055);
			a = this.ii(a,b,c,d,x[i + 12],6,1700485571);
			d = this.ii(d,a,b,c,x[i + 3],10,-1894986606);
			c = this.ii(c,d,a,b,x[i + 10],15,-1051523);
			b = this.ii(b,c,d,a,x[i + 1],21,-2054922799);
			a = this.ii(a,b,c,d,x[i + 8],6,1873313359);
			d = this.ii(d,a,b,c,x[i + 15],10,-30611744);
			c = this.ii(c,d,a,b,x[i + 6],15,-1560198380);
			b = this.ii(b,c,d,a,x[i + 13],21,1309151649);
			a = this.ii(a,b,c,d,x[i + 4],6,-145523070);
			d = this.ii(d,a,b,c,x[i + 11],10,-1120210379);
			c = this.ii(c,d,a,b,x[i + 2],15,718787259);
			b = this.ii(b,c,d,a,x[i + 9],21,-343485551);
			a += olda;
			b += oldb;
			c += oldc;
			d += oldd;
			i += 16;
		}
		return [a,b,c,d];
	}
	,rol: function(num,cnt) {
		return num << cnt | num >>> 32 - cnt;
	}
	,cmn: function(q,a,b,x,s,t) {
		return this.rol(a + q + x + t,s) + b;
	}
	,ff: function(a,b,c,d,x,s,t) {
		return this.cmn(b & c | ~b & d,a,b,x,s,t);
	}
	,gg: function(a,b,c,d,x,s,t) {
		return this.cmn(b & d | c & ~d,a,b,x,s,t);
	}
	,hh: function(a,b,c,d,x,s,t) {
		return this.cmn(b ^ c ^ d,a,b,x,s,t);
	}
	,ii: function(a,b,c,d,x,s,t) {
		return this.cmn(c ^ (b | ~d),a,b,x,s,t);
	}
	,toString: function() {
		return "md5";
	}
	,__class__: com_hurlant_crypto_hash_MD5
};
var com_hurlant_crypto_hash_SHABase = function() {
	this.pad_size = 40;
};
com_hurlant_crypto_hash_SHABase.__name__ = ["com","hurlant","crypto","hash","SHABase"];
com_hurlant_crypto_hash_SHABase.__interfaces__ = [com_hurlant_crypto_hash_IHash];
com_hurlant_crypto_hash_SHABase.prototype = {
	pad_size: null
	,getInputSize: function() {
		return 64;
	}
	,getHashSize: function() {
		return 0;
	}
	,getPadSize: function() {
		return this.pad_size;
	}
	,hash: function(src) {
		var savedLength = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src);
		var savedEndian = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_endian(src);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_endian(src,com_hurlant_util_Endian.BIG_ENDIAN);
		var len = savedLength * 8;
		while(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src) % 4 != 0) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(src,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src),0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(src,0);
		var a = [];
		var i = 0;
		while(i < com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src)) {
			a.push(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUnsignedInt(src));
			i += 4;
		}
		var h = this.core(a,len);
		var out = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var words = this.getHashSize() / 4 | 0;
		var _g1 = 0;
		while(_g1 < words) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeUnsignedInt(out,h[_g1++]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(src,savedLength);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_endian(src,savedEndian);
		return out;
	}
	,core: function(x,len) {
		return null;
	}
	,toString: function() {
		return "sha";
	}
	,__class__: com_hurlant_crypto_hash_SHABase
};
var com_hurlant_crypto_hash_SHA1 = function() {
	com_hurlant_crypto_hash_SHABase.call(this);
};
com_hurlant_crypto_hash_SHA1.__name__ = ["com","hurlant","crypto","hash","SHA1"];
com_hurlant_crypto_hash_SHA1.__interfaces__ = [com_hurlant_crypto_hash_IHash];
com_hurlant_crypto_hash_SHA1.__super__ = com_hurlant_crypto_hash_SHABase;
com_hurlant_crypto_hash_SHA1.prototype = $extend(com_hurlant_crypto_hash_SHABase.prototype,{
	getHashSize: function() {
		return 20;
	}
	,core: function(x,len) {
		x[len >> 5] |= 128 << 24 - len % 32;
		x[(len + 64 >> 9 << 4) + 15] = len;
		var w = [];
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var e = -1009589776;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			var olde = e;
			var _g = 0;
			while(_g < 80) {
				var j = _g++;
				if(j < 16) {
					w[j] = x[i + j];
				} else {
					w[j] = this.rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16],1);
				}
				var t = this.rol(a,5) + this.ft(j,b,c,d) + e + w[j] + this.kt(j);
				e = d;
				d = c;
				c = this.rol(b,30);
				b = a;
				a = t;
			}
			a += olda;
			b += oldb;
			c += oldc;
			d += oldd;
			e += olde;
			i += 16;
		}
		return [a,b,c,d,e];
	}
	,rol: function(num,cnt) {
		return num << cnt | num >>> 32 - cnt;
	}
	,ft: function(t,b,c,d) {
		if(t < 20) {
			return b & c | ~b & d;
		}
		if(t < 40) {
			return b ^ c ^ d;
		}
		if(t < 60) {
			return b & c | b & d | c & d;
		}
		return b ^ c ^ d;
	}
	,kt: function(t) {
		if(t < 20) {
			return 1518500249;
		} else if(t < 40) {
			return 1859775393;
		} else if(t < 60) {
			return -1894007588;
		} else {
			return -899497514;
		}
	}
	,toString: function() {
		return "sha1";
	}
	,__class__: com_hurlant_crypto_hash_SHA1
});
var com_hurlant_crypto_hash_SHA256 = function() {
	this.h = [1779033703,-1150833019,1013904242,-1521486534,1359893119,-1694144372,528734635,1541459225];
	com_hurlant_crypto_hash_SHABase.call(this);
};
com_hurlant_crypto_hash_SHA256.__name__ = ["com","hurlant","crypto","hash","SHA256"];
com_hurlant_crypto_hash_SHA256.__interfaces__ = [com_hurlant_crypto_hash_IHash];
com_hurlant_crypto_hash_SHA256.__super__ = com_hurlant_crypto_hash_SHABase;
com_hurlant_crypto_hash_SHA256.prototype = $extend(com_hurlant_crypto_hash_SHABase.prototype,{
	h: null
	,getHashSize: function() {
		return 32;
	}
	,core: function(x,len) {
		x[len >> 5] |= 128 << 24 - len % 32;
		x[(len + 64 >> 9 << 4) + 15] = len;
		var w = [];
		var a = this.h[0];
		var b = this.h[1];
		var c = this.h[2];
		var d = this.h[3];
		var e = this.h[4];
		var f = this.h[5];
		var g = this.h[6];
		var h = this.h[7];
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			var olde = e;
			var oldf = f;
			var oldg = g;
			var oldh = h;
			var _g = 0;
			while(_g < 64) {
				var j = _g++;
				if(j < 16) {
					w[j] = x[i + j];
				} else {
					w[j] = w[j - 16] + (this.rrol(w[j - 15],7) ^ this.rrol(w[j - 15],18) ^ w[j - 15] >>> 3) + w[j - 7] + (this.rrol(w[j - 2],17) ^ this.rrol(w[j - 2],19) ^ w[j - 2] >>> 10);
				}
				var t2 = (this.rrol(a,2) ^ this.rrol(a,13) ^ this.rrol(a,22)) + (a & b ^ a & c ^ b & c);
				var t1 = h + (this.rrol(e,6) ^ this.rrol(e,11) ^ this.rrol(e,25)) + (e & f ^ g & ~e) + com_hurlant_crypto_hash_SHA256.k[j] + w[j];
				h = g;
				g = f;
				f = e;
				e = d + t1;
				d = c;
				c = b;
				b = a;
				a = t1 + t2;
			}
			a += olda;
			b += oldb;
			c += oldc;
			d += oldd;
			e += olde;
			f += oldf;
			g += oldg;
			h += oldh;
			i += 16;
		}
		return [a,b,c,d,e,f,g,h];
	}
	,rrol: function(num,cnt) {
		return num << 32 - cnt | num >>> cnt;
	}
	,toString: function() {
		return "sha256";
	}
	,__class__: com_hurlant_crypto_hash_SHA256
});
var com_hurlant_crypto_hash_SHA224 = function() {
	com_hurlant_crypto_hash_SHA256.call(this);
	this.h = [-1056596264,914150663,812702999,-150054599,-4191439,1750603025,1694076839,-1090891868];
};
com_hurlant_crypto_hash_SHA224.__name__ = ["com","hurlant","crypto","hash","SHA224"];
com_hurlant_crypto_hash_SHA224.__super__ = com_hurlant_crypto_hash_SHA256;
com_hurlant_crypto_hash_SHA224.prototype = $extend(com_hurlant_crypto_hash_SHA256.prototype,{
	getHashSize: function() {
		return 28;
	}
	,toString: function() {
		return "sha224";
	}
	,__class__: com_hurlant_crypto_hash_SHA224
});
var com_hurlant_crypto_symmetric_ICipher = function() { };
com_hurlant_crypto_symmetric_ICipher.__name__ = ["com","hurlant","crypto","symmetric","ICipher"];
com_hurlant_crypto_symmetric_ICipher.prototype = {
	getBlockSize: null
	,encrypt: null
	,decrypt: null
	,dispose: null
	,toString: null
	,__class__: com_hurlant_crypto_symmetric_ICipher
};
var com_hurlant_crypto_symmetric_IStreamCipher = function() { };
com_hurlant_crypto_symmetric_IStreamCipher.__name__ = ["com","hurlant","crypto","symmetric","IStreamCipher"];
com_hurlant_crypto_symmetric_IStreamCipher.__interfaces__ = [com_hurlant_crypto_symmetric_ICipher];
var com_hurlant_crypto_prng_IPRNG = function() { };
com_hurlant_crypto_prng_IPRNG.__name__ = ["com","hurlant","crypto","prng","IPRNG"];
com_hurlant_crypto_prng_IPRNG.prototype = {
	getPoolSize: null
	,init: null
	,next: null
	,dispose: null
	,toString: null
	,__class__: com_hurlant_crypto_prng_IPRNG
};
var com_hurlant_crypto_prng_ARC4 = function(key) {
	this.j = 0;
	this.i = 0;
	this.S = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	if(key != null) {
		this.init(key);
	}
};
com_hurlant_crypto_prng_ARC4.__name__ = ["com","hurlant","crypto","prng","ARC4"];
com_hurlant_crypto_prng_ARC4.__interfaces__ = [com_hurlant_crypto_symmetric_IStreamCipher,com_hurlant_crypto_prng_IPRNG];
com_hurlant_crypto_prng_ARC4.prototype = {
	i: null
	,j: null
	,S: null
	,getPoolSize: function() {
		return 256;
	}
	,init: function(key) {
		var j;
		var t;
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.S,i,i);
		}
		j = 0;
		var _g1 = 0;
		while(_g1 < 256) {
			var i1 = _g1++;
			j = j + com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.S,i1) + com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(key,i1 % com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(key)) & 255;
			t = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.S,i1);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.S,i1,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.S,j));
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.S,j,t);
		}
		this.i = 0;
		this.j = 0;
	}
	,next: function() {
		var t;
		this.i = this.i + 1 & 255;
		this.j = this.j + com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.S,this.i) & 255;
		t = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.S,this.i);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.S,this.i,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.S,this.j));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.S,this.j,t);
		return com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.S,t + com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.S,this.i) & 255);
	}
	,getBlockSize: function() {
		return 1;
	}
	,encrypt: function(block) {
		var i = 0;
		while(i < com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(block)) {
			var _g = i++;
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(block,_g,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(block,_g) ^ this.next());
		}
	}
	,decrypt: function(block) {
		this.encrypt(block);
	}
	,dispose: function() {
		if(this.S != null) {
			var _g1 = 0;
			var _g = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(this.S);
			while(_g1 < _g) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.S,_g1++,Std.random(256));
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(this.S,0);
			this.S = null;
		}
		this.i = 0;
		this.j = 0;
		com_hurlant_util_Memory.gc();
	}
	,toString: function() {
		return "rc4";
	}
	,__class__: com_hurlant_crypto_prng_ARC4
};
var com_hurlant_crypto_prng_Random = function(prng) {
	this.seeded = false;
	this.ready = false;
	if(prng == null) {
		prng = com_hurlant_crypto_prng_ARC4;
	}
	var tmp;
	try {
		tmp = js_Boot.__cast(Type.createInstance(prng,[]) , com_hurlant_crypto_prng_IPRNG);
	} catch( e ) {
		haxe_CallStack.lastException = e;
		tmp = null;
	}
	this.state = tmp;
	this.psize = this.state.getPoolSize();
	this.pool = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	this.pptr = 0;
	while(this.pptr < this.psize) {
		var t = Std.random(65536);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.pool,this.pptr++,t >>> 8);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.pool,this.pptr++,t & 255);
	}
	this.pptr = 0;
	this.seed();
};
com_hurlant_crypto_prng_Random.__name__ = ["com","hurlant","crypto","prng","Random"];
com_hurlant_crypto_prng_Random.prototype = {
	state: null
	,ready: null
	,pool: null
	,psize: null
	,pptr: null
	,seeded: null
	,seed: function(x) {
		if(x == null) {
			x = 0;
		}
		if(x == 0) {
			x = new Date().getTime() | 0;
		}
		var _g = this.pptr++;
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.pool,_g,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.pool,_g) ^ x & 255);
		var _g1 = this.pptr++;
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.pool,_g1,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.pool,_g1) ^ x >> 8 & 255);
		var _g2 = this.pptr++;
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.pool,_g2,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.pool,_g2) ^ x >> 16 & 255);
		var _g3 = this.pptr++;
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.pool,_g3,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.pool,_g3) ^ x >> 24 & 255);
		this.pptr %= this.psize;
		this.seeded = true;
	}
	,autoSeed: function() {
		var data = com_hurlant_util_System.getSecureRandomBytes(512);
		while(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_bytesAvailable(data) >= 4) this.seed(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUnsignedInt(data));
	}
	,nextBytes: function(buffer,length) {
		while(length-- > 0) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeByte(buffer,this.nextByte());
	}
	,nextByte: function() {
		if(!this.ready) {
			if(!this.seeded) {
				this.autoSeed();
			}
			this.state.init(this.pool);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(this.pool,0);
			this.pptr = 0;
			this.ready = true;
		}
		return this.state.next();
	}
	,dispose: function() {
		var _g1 = 0;
		var _g = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(this.pool);
		while(_g1 < _g) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.pool,_g1++,Std.random(256));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(this.pool,0);
		this.pool = null;
		this.state.dispose();
		this.state = null;
		this.psize = 0;
		this.pptr = 0;
		com_hurlant_util_Memory.gc();
	}
	,toString: function() {
		return "random-" + Std.string(this.state);
	}
	,__class__: com_hurlant_crypto_prng_Random
};
var com_hurlant_crypto_prng_TLSPRF = function(secret,label,seed) {
	var l = Math.ceil(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(secret) / 2);
	var s1 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	var s2 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(s1,secret,0,l);
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(s2,secret,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(secret) - l,l);
	var s = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeUTFBytes(s,label);
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(s,seed);
	this.seed = s;
	this.s1 = s1;
	this.s2 = s2;
	this.hmac_md5 = new com_hurlant_crypto_hash_HMAC(new com_hurlant_crypto_hash_MD5());
	this.hmac_sha1 = new com_hurlant_crypto_hash_HMAC(new com_hurlant_crypto_hash_SHA1());
	this.a1 = this.hmac_md5.compute(s1,this.seed);
	this.a2 = this.hmac_sha1.compute(s2,this.seed);
	this.p1 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	this.p2 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	this.d1 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	this.d2 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(this.d1,16);
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(this.d1,this.seed);
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(this.d2,20);
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(this.d2,this.seed);
};
com_hurlant_crypto_prng_TLSPRF.__name__ = ["com","hurlant","crypto","prng","TLSPRF"];
com_hurlant_crypto_prng_TLSPRF.prototype = {
	seed: null
	,s1: null
	,s2: null
	,a1: null
	,a2: null
	,p1: null
	,p2: null
	,d1: null
	,d2: null
	,hmac_md5: null
	,hmac_sha1: null
	,nextBytes: function(buffer,length) {
		while(length-- > 0) buffer.writeByte(this.nextByte());
	}
	,nextByte: function() {
		if(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_bytesAvailable(this.p1) == 0) {
			this.more_md5();
		}
		if(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_bytesAvailable(this.p2) == 0) {
			this.more_sha1();
		}
		return com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUnsignedByte(this.p1) ^ com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUnsignedByte(this.p2);
	}
	,dispose: function() {
		this.seed = this.dba(this.seed);
		this.s1 = this.dba(this.s1);
		this.s2 = this.dba(this.s2);
		this.a1 = this.dba(this.a1);
		this.a2 = this.dba(this.a2);
		this.p1 = this.dba(this.p1);
		this.p2 = this.dba(this.p2);
		this.d1 = this.dba(this.d1);
		this.d2 = this.dba(this.d2);
		this.hmac_md5.dispose();
		this.hmac_md5 = null;
		this.hmac_sha1.dispose();
		this.hmac_sha1 = null;
		com_hurlant_util_Memory.gc();
	}
	,toString: function() {
		return "tls-prf";
	}
	,dba: function(ba) {
		var _g1 = 0;
		var _g = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(ba);
		while(_g1 < _g) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(ba,_g1++,0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(ba,0);
		return null;
	}
	,more_md5: function() {
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(this.d1,0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(this.d1,this.a1);
		var p = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_position(this.p1);
		var more = this.hmac_md5.compute(this.s1,this.d1);
		this.a1 = this.hmac_md5.compute(this.s1,this.a1);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(this.p1,more);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(this.p1,p);
	}
	,more_sha1: function() {
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(this.d2,0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(this.d2,this.a2);
		var p = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_position(this.p2);
		var more = this.hmac_sha1.compute(this.s2,this.d2);
		this.a2 = this.hmac_sha1.compute(this.s2,this.a2);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(this.p2,more);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(this.p2,p);
	}
	,__class__: com_hurlant_crypto_prng_TLSPRF
};
var com_hurlant_crypto_symmetric_ISymmetricKey = function() { };
com_hurlant_crypto_symmetric_ISymmetricKey.__name__ = ["com","hurlant","crypto","symmetric","ISymmetricKey"];
com_hurlant_crypto_symmetric_ISymmetricKey.prototype = {
	getBlockSize: null
	,encrypt: null
	,decrypt: null
	,dispose: null
	,toString: null
	,__class__: com_hurlant_crypto_symmetric_ISymmetricKey
};
var com_hurlant_crypto_symmetric_AESKey = function(key) {
	com_hurlant_crypto_symmetric_AESKey.initOnce();
	this.tmp = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	this.state = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	this.keyLength = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(key);
	this.key = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(this.key,key);
	this.expandKey();
};
com_hurlant_crypto_symmetric_AESKey.__name__ = ["com","hurlant","crypto","symmetric","AESKey"];
com_hurlant_crypto_symmetric_AESKey.__interfaces__ = [com_hurlant_crypto_symmetric_ISymmetricKey];
com_hurlant_crypto_symmetric_AESKey.initOnce = function() {
	if(com_hurlant_crypto_symmetric_AESKey.Sbox == null) {
		return;
	}
	com_hurlant_crypto_symmetric_AESKey.Sbox = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	com_hurlant_crypto_symmetric_AESKey.InvSbox = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	com_hurlant_crypto_symmetric_AESKey.Xtime2 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	com_hurlant_crypto_symmetric_AESKey.Xtime9 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	com_hurlant_crypto_symmetric_AESKey.XtimeB = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	com_hurlant_crypto_symmetric_AESKey.XtimeD = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	com_hurlant_crypto_symmetric_AESKey.XtimeE = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(com_hurlant_crypto_symmetric_AESKey.Sbox,i,com_hurlant_crypto_symmetric_AESKey._Sbox[i]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(com_hurlant_crypto_symmetric_AESKey.InvSbox,i,com_hurlant_crypto_symmetric_AESKey._InvSbox[i]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox,i,com_hurlant_crypto_symmetric_AESKey._Xtime2Sbox[i]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox,i,com_hurlant_crypto_symmetric_AESKey._Xtime3Sbox[i]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(com_hurlant_crypto_symmetric_AESKey.Xtime2,i,com_hurlant_crypto_symmetric_AESKey._Xtime2[i]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(com_hurlant_crypto_symmetric_AESKey.Xtime9,i,com_hurlant_crypto_symmetric_AESKey._Xtime9[i]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(com_hurlant_crypto_symmetric_AESKey.XtimeB,i,com_hurlant_crypto_symmetric_AESKey._XtimeB[i]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(com_hurlant_crypto_symmetric_AESKey.XtimeD,i,com_hurlant_crypto_symmetric_AESKey._XtimeD[i]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(com_hurlant_crypto_symmetric_AESKey.XtimeE,i,com_hurlant_crypto_symmetric_AESKey._XtimeE[i]);
	}
	com_hurlant_crypto_symmetric_AESKey.Rcon = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	var _g1 = 0;
	var _g2 = com_hurlant_crypto_symmetric_AESKey._Rcon.length;
	while(_g1 < _g2) {
		var i1 = _g1++;
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(com_hurlant_crypto_symmetric_AESKey.Rcon,i1,com_hurlant_crypto_symmetric_AESKey._Rcon[i1]);
	}
};
com_hurlant_crypto_symmetric_AESKey.prototype = {
	key: null
	,keyLength: null
	,Nr: null
	,state: null
	,tmp: null
	,expandKey: function() {
		var tmp0;
		var tmp1;
		var tmp2;
		var tmp3;
		var tmp4;
		var Nk = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(this.key) / 4 | 0;
		this.Nr = Nk + 6;
		var _g1 = Nk;
		var _g = 4 * (this.Nr + 1);
		while(_g1 < _g) {
			var idx = _g1++;
			tmp0 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.key,4 * idx - 4);
			tmp1 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.key,4 * idx - 3);
			tmp2 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.key,4 * idx - 2);
			tmp3 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.key,4 * idx - 1);
			if(idx % Nk == 0) {
				tmp4 = tmp3;
				tmp3 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(com_hurlant_crypto_symmetric_AESKey.Sbox,tmp0);
				tmp0 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(com_hurlant_crypto_symmetric_AESKey.Sbox,tmp1) ^ com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(com_hurlant_crypto_symmetric_AESKey.Rcon,idx / Nk | 0);
				tmp1 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(com_hurlant_crypto_symmetric_AESKey.Sbox,tmp2);
				tmp2 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(com_hurlant_crypto_symmetric_AESKey.Sbox,tmp4);
			} else if(Nk > 6 && idx % Nk == 4) {
				tmp0 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(com_hurlant_crypto_symmetric_AESKey.Sbox,tmp0);
				tmp1 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(com_hurlant_crypto_symmetric_AESKey.Sbox,tmp1);
				tmp2 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(com_hurlant_crypto_symmetric_AESKey.Sbox,tmp2);
				tmp3 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(com_hurlant_crypto_symmetric_AESKey.Sbox,tmp3);
			}
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.key,4 * idx,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.key,4 * idx - 4 * Nk) ^ tmp0);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.key,4 * idx + 1,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.key,4 * idx - 4 * Nk + 1) ^ tmp1);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.key,4 * idx + 2,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.key,4 * idx - 4 * Nk + 2) ^ tmp2);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.key,4 * idx + 3,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.key,4 * idx - 4 * Nk + 3) ^ tmp3);
		}
	}
	,getBlockSize: function() {
		return 16;
	}
	,encrypt: function(block,index) {
		if(index == null) {
			index = 0;
		}
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(this.state,0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(this.state,block,index,16);
		this.addRoundKey(this.key,0);
		var _g1 = 1;
		var _g = this.Nr + 1;
		while(_g1 < _g) {
			var round = _g1++;
			if(round < this.Nr) {
				this.mixSubColumns();
			} else {
				this.shiftRows();
			}
			this.addRoundKey(this.key,round * 4 * 4);
		}
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(block,index);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(block,this.state);
	}
	,decrypt: function(block,index) {
		if(index == null) {
			index = 0;
		}
		var round;
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(this.state,0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(this.state,block,index,16);
		this.addRoundKey(this.key,this.Nr * 4 * 4);
		this.invShiftRows();
		round = this.Nr;
		while(round-- > 0) {
			this.addRoundKey(this.key,round * 4 * 4);
			if(round != 0) {
				this.invMixSubColumns();
			}
		}
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(block,index);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(block,this.state);
	}
	,dispose: function() {
		var r = new com_hurlant_crypto_prng_Random();
		var _g1 = 0;
		var _g = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(this.key);
		while(_g1 < _g) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.key,_g1++,r.nextByte());
		this.Nr = r.nextByte();
		var _g11 = 0;
		var _g2 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(this.state);
		while(_g11 < _g2) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,_g11++,r.nextByte());
		var _g12 = 0;
		var _g3 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(this.tmp);
		while(_g12 < _g3) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,_g12++,r.nextByte());
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(this.key,0);
		this.keyLength = 0;
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(this.state,0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(this.tmp,0);
		this.key = null;
		this.state = null;
		this.tmp = null;
		this.Nr = 0;
		com_hurlant_util_Memory.gc();
	}
	,shiftRows: function() {
		var tmp;
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,0,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,0))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,4,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,4))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,8,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,8))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,12,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,12))));
		tmp = Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,1)));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,1,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,5))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,5,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,9))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,9,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,13))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,13,tmp);
		tmp = Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,2)));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,2,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,10))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,10,tmp);
		tmp = Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,6)));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,6,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,14))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,14,tmp);
		tmp = Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,15)));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,15,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,11))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,11,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,7))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,7,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,3))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,3,tmp);
	}
	,invShiftRows: function() {
		var tmp;
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,0,Reflect.field(com_hurlant_crypto_symmetric_AESKey.InvSbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,0))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,4,Reflect.field(com_hurlant_crypto_symmetric_AESKey.InvSbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,4))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,8,Reflect.field(com_hurlant_crypto_symmetric_AESKey.InvSbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,8))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,12,Reflect.field(com_hurlant_crypto_symmetric_AESKey.InvSbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,12))));
		tmp = Reflect.field(com_hurlant_crypto_symmetric_AESKey.InvSbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,13)));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,13,Reflect.field(com_hurlant_crypto_symmetric_AESKey.InvSbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,9))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,9,Reflect.field(com_hurlant_crypto_symmetric_AESKey.InvSbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,5))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,5,Reflect.field(com_hurlant_crypto_symmetric_AESKey.InvSbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,1))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,1,tmp);
		tmp = Reflect.field(com_hurlant_crypto_symmetric_AESKey.InvSbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,2)));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,2,Reflect.field(com_hurlant_crypto_symmetric_AESKey.InvSbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,10))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,10,tmp);
		tmp = Reflect.field(com_hurlant_crypto_symmetric_AESKey.InvSbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,6)));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,6,Reflect.field(com_hurlant_crypto_symmetric_AESKey.InvSbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,14))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,14,tmp);
		tmp = Reflect.field(com_hurlant_crypto_symmetric_AESKey.InvSbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,3)));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,3,Reflect.field(com_hurlant_crypto_symmetric_AESKey.InvSbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,7))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,7,Reflect.field(com_hurlant_crypto_symmetric_AESKey.InvSbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,11))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,11,Reflect.field(com_hurlant_crypto_symmetric_AESKey.InvSbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,15))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,15,tmp);
	}
	,mixSubColumns: function() {
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(this.tmp,0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,0,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,0))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,5))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,10))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,15))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,1,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,0))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,5))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,10))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,15))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,2,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,0))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,5))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,10))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,15))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,3,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,0))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,5))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,10))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,15))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,4,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,4))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,9))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,14))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,3))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,5,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,4))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,9))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,14))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,3))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,6,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,4))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,9))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,14))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,3))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,7,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,4))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,9))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,14))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,3))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,8,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,8))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,13))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,2))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,7))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,9,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,8))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,13))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,2))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,7))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,10,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,8))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,13))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,2))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,7))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,11,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,8))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,13))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,2))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,7))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,12,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,12))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,1))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,6))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,11))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,13,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,12))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,1))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,6))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,11))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,14,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,12))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,1))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,6))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,11))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,15,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime3Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,12))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,1))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,6))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime2Sbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,11))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(this.state,0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(this.state,this.tmp,0,16);
	}
	,invMixSubColumns: function() {
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(this.tmp,0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,0,Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeE,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,0))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeB,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,1))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeD,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,2))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime9,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,3))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,5,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime9,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,0))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeE,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,1))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeB,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,2))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeD,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,3))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,10,Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeD,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,0))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime9,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,1))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeE,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,2))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeB,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,3))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,15,Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeB,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,0))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeD,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,1))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime9,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,2))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeE,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,3))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,4,Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeE,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,4))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeB,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,5))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeD,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,6))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime9,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,7))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,9,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime9,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,4))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeE,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,5))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeB,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,6))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeD,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,7))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,14,Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeD,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,4))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime9,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,5))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeE,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,6))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeB,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,7))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,3,Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeB,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,4))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeD,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,5))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime9,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,6))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeE,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,7))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,8,Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeE,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,8))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeB,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,9))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeD,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,10))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime9,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,11))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,13,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime9,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,8))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeE,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,9))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeB,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,10))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeD,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,11))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,2,Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeD,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,8))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime9,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,9))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeE,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,10))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeB,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,11))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,7,Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeB,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,8))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeD,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,9))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime9,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,10))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeE,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,11))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,12,Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeE,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,12))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeB,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,13))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeD,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,14))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime9,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,15))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,1,Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime9,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,12))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeE,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,13))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeB,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,14))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeD,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,15))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,6,Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeD,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,12))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime9,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,13))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeE,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,14))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeB,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,15))));
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.tmp,11,Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeB,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,12))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeD,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,13))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.Xtime9,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,14))) ^ Reflect.field(com_hurlant_crypto_symmetric_AESKey.XtimeE,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,15))));
		var _g1 = 0;
		while(_g1 < 16) {
			var i = _g1++;
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,i,Reflect.field(com_hurlant_crypto_symmetric_AESKey.InvSbox,Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.tmp,i))));
		}
	}
	,addRoundKey: function(key,offset) {
		var _g = 0;
		while(_g < 16) {
			var idx = _g++;
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.state,idx,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(this.state,idx) ^ com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(key,idx + offset));
		}
	}
	,toString: function() {
		return "aes" + 8 * this.keyLength;
	}
	,__class__: com_hurlant_crypto_symmetric_AESKey
};
var com_hurlant_crypto_symmetric_BlowFishKey = function(key) {
	this.key = null;
	this.key = key;
	this.setKey(key);
};
com_hurlant_crypto_symmetric_BlowFishKey.__name__ = ["com","hurlant","crypto","symmetric","BlowFishKey"];
com_hurlant_crypto_symmetric_BlowFishKey.__interfaces__ = [com_hurlant_crypto_symmetric_ISymmetricKey];
com_hurlant_crypto_symmetric_BlowFishKey.prototype = {
	S0: null
	,S1: null
	,S2: null
	,S3: null
	,P: null
	,key: null
	,getBlockSize: function() {
		return 8;
	}
	,decrypt: function(block,index) {
		if(index == null) {
			index = 0;
		}
		this.decryptBlock(block,index,block,index);
	}
	,dispose: function() {
		var _g1 = 0;
		var _g = this.S0.length;
		while(_g1 < _g) this.S0[_g1++] = 0;
		var _g11 = 0;
		var _g2 = this.S1.length;
		while(_g11 < _g2) this.S1[_g11++] = 0;
		var _g12 = 0;
		var _g3 = this.S2.length;
		while(_g12 < _g3) this.S2[_g12++] = 0;
		var _g13 = 0;
		var _g4 = this.S3.length;
		while(_g13 < _g4) this.S3[_g13++] = 0;
		var _g14 = 0;
		var _g5 = this.P.length;
		while(_g14 < _g5) this.P[_g14++] = 0;
		this.S0 = null;
		this.S1 = null;
		this.S2 = null;
		this.S3 = null;
		this.P = null;
		var _g15 = 0;
		var _g6 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(this.key);
		while(_g15 < _g6) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.key,_g15++,0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(this.key,0);
		this.key = null;
		com_hurlant_util_Memory.gc();
	}
	,encrypt: function(block,index) {
		if(index == null) {
			index = 0;
		}
		this.encryptBlock(block,index,block,index);
	}
	,F: function(x) {
		return (this.S0[x >>> 24] + this.S1[x >>> 16 & 255] ^ this.S2[x >>> 8 & 255]) + this.S3[x & 255];
	}
	,processTable: function(xl,xr,table) {
		var size = table.length;
		var s = 0;
		while(s < size) {
			xl ^= this.P[0];
			var i = 1;
			while(i < 16) {
				xr ^= this.F(xl) ^ this.P[i];
				xl ^= this.F(xr) ^ this.P[i + 1];
				i += 2;
			}
			xr ^= this.P[17];
			table[s] = xr;
			table[s + 1] = xl;
			xr = xl;
			xl = table[s];
			s += 2;
		}
	}
	,setKey: function(key) {
		this.S0 = com_hurlant_crypto_symmetric_BlowFishKey.KS0.slice(0);
		this.S1 = com_hurlant_crypto_symmetric_BlowFishKey.KS1.slice(0);
		this.S2 = com_hurlant_crypto_symmetric_BlowFishKey.KS2.slice(0);
		this.S3 = com_hurlant_crypto_symmetric_BlowFishKey.KS3.slice(0);
		this.P = com_hurlant_crypto_symmetric_BlowFishKey.KP.slice(0);
		var keyLength = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(key);
		var keyIndex = 0;
		var _g1 = 0;
		var _g = com_hurlant_crypto_symmetric_BlowFishKey.P_SZ;
		while(_g1 < _g) {
			var i = _g1++;
			var data = 0;
			var _g2 = 0;
			while(_g2 < 4) {
				++_g2;
				data = data << 8 | com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(key,keyIndex++) & 255;
				if(keyIndex >= keyLength) {
					keyIndex = 0;
				}
			}
			this.P[i] ^= data;
		}
		this.processTable(0,0,this.P);
		this.processTable(this.P[com_hurlant_crypto_symmetric_BlowFishKey.P_SZ - 2],this.P[com_hurlant_crypto_symmetric_BlowFishKey.P_SZ - 1],this.S0);
		this.processTable(this.S0[254],this.S0[255],this.S1);
		this.processTable(this.S1[254],this.S1[255],this.S2);
		this.processTable(this.S2[254],this.S2[255],this.S3);
	}
	,encryptBlock: function(src,srcIndex,dst,dstIndex) {
		var xl = this.BytesTo32bits(src,srcIndex);
		var xr = this.BytesTo32bits(src,srcIndex + 4);
		xl ^= this.P[0];
		var i = 1;
		while(i < 16) {
			xr ^= this.F(xl) ^ this.P[i];
			xl ^= this.F(xr) ^ this.P[i + 1];
			i += 2;
		}
		xr ^= this.P[17];
		this.Bits32ToBytes(xr,dst,dstIndex);
		this.Bits32ToBytes(xl,dst,dstIndex + 4);
	}
	,decryptBlock: function(src,srcIndex,dst,dstIndex) {
		var xl = this.BytesTo32bits(src,srcIndex);
		var xr = this.BytesTo32bits(src,srcIndex + 4);
		xl ^= this.P[17];
		var i = 16;
		while(i > 0) {
			xr ^= this.F(xl) ^ this.P[i];
			xl ^= this.F(xr) ^ this.P[i - 1];
			i -= 2;
		}
		xr ^= this.P[0];
		this.Bits32ToBytes(xr,dst,dstIndex);
		this.Bits32ToBytes(xl,dst,dstIndex + 4);
	}
	,BytesTo32bits: function(b,i) {
		return (com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(b,i) & 255) << 24 | (com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(b,i + 1) & 255) << 16 | (com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(b,i + 2) & 255) << 8 | com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(b,i + 3) & 255;
	}
	,Bits32ToBytes: function(i,b,offset) {
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(b,offset + 3,i);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(b,offset + 2,i >> 8);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(b,offset + 1,i >> 16);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(b,offset,i >> 24);
	}
	,toString: function() {
		return "blowfish";
	}
	,__class__: com_hurlant_crypto_symmetric_BlowFishKey
};
var com_hurlant_crypto_symmetric_IVMode = function(key,padding) {
	this.key = key;
	this.blockSize = key.getBlockSize();
	if(padding == null) {
		padding = new com_hurlant_crypto_symmetric_PKCS5(this.blockSize);
	} else {
		padding.setBlockSize(this.blockSize);
	}
	this.padding = padding;
	this.prng = new com_hurlant_crypto_prng_Random();
	this.iv = null;
	this.lastIV = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
};
com_hurlant_crypto_symmetric_IVMode.__name__ = ["com","hurlant","crypto","symmetric","IVMode"];
com_hurlant_crypto_symmetric_IVMode.prototype = {
	key: null
	,padding: null
	,prng: null
	,iv: null
	,lastIV: null
	,blockSize: null
	,getBlockSize: function() {
		return this.key.getBlockSize();
	}
	,dispose: function() {
		if(this.iv != null) {
			var _g1 = 0;
			var _g = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(this.iv);
			while(_g1 < _g) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.iv,_g1++,this.prng.nextByte());
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(this.iv,0);
			this.iv = null;
		}
		if(this.lastIV != null) {
			var _g11 = 0;
			var _g2 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(this.iv);
			while(_g11 < _g2) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.lastIV,_g11++,this.prng.nextByte());
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(this.lastIV,0);
			this.lastIV = null;
		}
		this.key.dispose();
		this.key = null;
		this.padding = null;
		this.prng.dispose();
		this.prng = null;
		com_hurlant_util_Memory.gc();
	}
	,set_IV: function(value) {
		this.iv = value;
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(this.lastIV,0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(this.lastIV,this.iv);
		return value;
	}
	,get_IV: function() {
		return this.lastIV;
	}
	,getIV4e: function() {
		var vec = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		if(this.iv != null) {
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(vec,this.iv);
		} else {
			this.prng.nextBytes(vec,this.blockSize);
		}
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(this.lastIV,0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(this.lastIV,vec);
		return vec;
	}
	,getIV4d: function() {
		var vec = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		if(this.iv != null) {
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(vec,this.iv);
		} else {
			throw new js__$Boot_HaxeError(new com_hurlant_util_Error("an IV must be set before calling decrypt()"));
		}
		return vec;
	}
	,__class__: com_hurlant_crypto_symmetric_IVMode
};
var com_hurlant_crypto_symmetric_IMode = function() { };
com_hurlant_crypto_symmetric_IMode.__name__ = ["com","hurlant","crypto","symmetric","IMode"];
com_hurlant_crypto_symmetric_IMode.__interfaces__ = [com_hurlant_crypto_symmetric_ICipher];
var com_hurlant_crypto_symmetric_CBCMode = function(key,padding) {
	com_hurlant_crypto_symmetric_IVMode.call(this,key,padding);
};
com_hurlant_crypto_symmetric_CBCMode.__name__ = ["com","hurlant","crypto","symmetric","CBCMode"];
com_hurlant_crypto_symmetric_CBCMode.__interfaces__ = [com_hurlant_crypto_symmetric_IMode];
com_hurlant_crypto_symmetric_CBCMode.__super__ = com_hurlant_crypto_symmetric_IVMode;
com_hurlant_crypto_symmetric_CBCMode.prototype = $extend(com_hurlant_crypto_symmetric_IVMode.prototype,{
	encrypt: function(src) {
		this.padding.pad(src);
		var vector = this.getIV4e();
		var i = 0;
		while(i < com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src)) {
			var _g1 = 0;
			var _g = this.blockSize;
			while(_g1 < _g) {
				var j = _g1++;
				var _g2 = i + j;
				com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(src,_g2,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(src,_g2) ^ com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(vector,j));
			}
			this.key.encrypt(src,i);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(vector,0);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(vector,src,i,this.blockSize);
			i += this.blockSize;
		}
	}
	,decrypt: function(src) {
		var vector = this.getIV4d();
		var tmp = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var i = 0;
		while(i < com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src)) {
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(tmp,0);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(tmp,src,i,this.blockSize);
			this.key.decrypt(src,i);
			var _g1 = 0;
			var _g = this.blockSize;
			while(_g1 < _g) {
				var j = _g1++;
				var _g2 = i + j;
				com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(src,_g2,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(src,_g2) ^ com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(vector,j));
			}
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(vector,0);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(vector,tmp,0,this.blockSize);
			i += this.blockSize;
		}
		this.padding.unpad(src);
	}
	,toString: function() {
		return Std.string(this.key) + "-cbc";
	}
	,__class__: com_hurlant_crypto_symmetric_CBCMode
});
var com_hurlant_crypto_symmetric_CFB8Mode = function(key,padding) {
	com_hurlant_crypto_symmetric_IVMode.call(this,key,null);
};
com_hurlant_crypto_symmetric_CFB8Mode.__name__ = ["com","hurlant","crypto","symmetric","CFB8Mode"];
com_hurlant_crypto_symmetric_CFB8Mode.__interfaces__ = [com_hurlant_crypto_symmetric_IMode];
com_hurlant_crypto_symmetric_CFB8Mode.__super__ = com_hurlant_crypto_symmetric_IVMode;
com_hurlant_crypto_symmetric_CFB8Mode.prototype = $extend(com_hurlant_crypto_symmetric_IVMode.prototype,{
	encrypt: function(src) {
		var vector = this.getIV4e();
		var tmp = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var _g1 = 0;
		var _g = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src);
		while(_g1 < _g) {
			var i = _g1++;
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(tmp,0);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(tmp,vector);
			this.key.encrypt(vector);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(src,i,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(src,i) ^ com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(vector,0));
			var _g3 = 0;
			var _g2 = this.blockSize - 1;
			while(_g3 < _g2) {
				var j = _g3++;
				com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(vector,j,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(tmp,j + 1));
			}
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(vector,this.blockSize - 1,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(src,i));
		}
	}
	,decrypt: function(src) {
		var vector = this.getIV4d();
		var tmp = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var _g1 = 0;
		var _g = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src);
		while(_g1 < _g) {
			var i = _g1++;
			var c = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(src,i);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(tmp,0);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(tmp,vector);
			this.key.encrypt(vector);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(src,i,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(src,i) ^ com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(vector,0));
			var _g3 = 0;
			var _g2 = this.blockSize - 1;
			while(_g3 < _g2) {
				var j = _g3++;
				com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(vector,j,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(tmp,j + 1));
			}
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(vector,this.blockSize - 1,c);
		}
	}
	,toString: function() {
		return Std.string(this.key) + "-cfb8";
	}
	,__class__: com_hurlant_crypto_symmetric_CFB8Mode
});
var com_hurlant_crypto_symmetric_CFBMode = function(key,padding) {
	com_hurlant_crypto_symmetric_IVMode.call(this,key,null);
};
com_hurlant_crypto_symmetric_CFBMode.__name__ = ["com","hurlant","crypto","symmetric","CFBMode"];
com_hurlant_crypto_symmetric_CFBMode.__interfaces__ = [com_hurlant_crypto_symmetric_IMode];
com_hurlant_crypto_symmetric_CFBMode.__super__ = com_hurlant_crypto_symmetric_IVMode;
com_hurlant_crypto_symmetric_CFBMode.prototype = $extend(com_hurlant_crypto_symmetric_IVMode.prototype,{
	encrypt: function(src) {
		var l = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src);
		var vector = this.getIV4e();
		var i = 0;
		while(i < com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src)) {
			this.key.encrypt(vector);
			var chunk = i + this.blockSize < l?this.blockSize:l - i;
			var _g1 = 0;
			var _g = chunk;
			while(_g1 < _g) {
				var j = _g1++;
				var _g2 = i + j;
				com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(src,_g2,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(src,_g2) ^ com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(vector,j));
			}
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(vector,0);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(vector,src,i,chunk);
			i += this.blockSize;
		}
	}
	,decrypt: function(src) {
		var l = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src);
		var vector = this.getIV4d();
		var tmp = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var i = 0;
		while(i < com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src)) {
			this.key.encrypt(vector);
			var chunk = i + this.blockSize < l?this.blockSize:l - i;
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(tmp,0);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(tmp,src,i,chunk);
			var _g1 = 0;
			var _g = chunk;
			while(_g1 < _g) {
				var j = _g1++;
				var _g2 = i + j;
				com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(src,_g2,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(src,_g2) ^ com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(vector,j));
			}
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(vector,0);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(vector,tmp);
			i += this.blockSize;
		}
	}
	,toString: function() {
		return Std.string(this.key) + "-cfb";
	}
	,__class__: com_hurlant_crypto_symmetric_CFBMode
});
var com_hurlant_crypto_symmetric_CTRMode = function(key,padding) {
	com_hurlant_crypto_symmetric_IVMode.call(this,key,padding);
};
com_hurlant_crypto_symmetric_CTRMode.__name__ = ["com","hurlant","crypto","symmetric","CTRMode"];
com_hurlant_crypto_symmetric_CTRMode.__interfaces__ = [com_hurlant_crypto_symmetric_IMode];
com_hurlant_crypto_symmetric_CTRMode.__super__ = com_hurlant_crypto_symmetric_IVMode;
com_hurlant_crypto_symmetric_CTRMode.prototype = $extend(com_hurlant_crypto_symmetric_IVMode.prototype,{
	encrypt: function(src) {
		this.padding.pad(src);
		this.core(src,this.getIV4e());
	}
	,decrypt: function(src) {
		this.core(src,this.getIV4d());
		this.padding.unpad(src);
	}
	,core: function(src,iv) {
		var X = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var Xenc = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(X,iv);
		var i = 0;
		while(i < com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src)) {
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(Xenc,0);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(Xenc,X);
			this.key.encrypt(Xenc);
			var _g1 = 0;
			var _g = this.blockSize;
			while(_g1 < _g) {
				var j = _g1++;
				var _g2 = i + j;
				com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(src,_g2,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(src,_g2) ^ com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(Xenc,j));
			}
			var j1 = this.blockSize - 1;
			while(j1 >= 0) {
				var tmp = j1;
				com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(X,tmp,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(X,tmp) + 1);
				if(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(X,j1) != 0) {
					break;
				}
				--j1;
			}
			i += this.blockSize;
		}
	}
	,toString: function() {
		return Std.string(this.key) + "-ctr";
	}
	,__class__: com_hurlant_crypto_symmetric_CTRMode
});
var com_hurlant_crypto_symmetric_DESKey = function(key) {
	this.key = key;
	this.encKey = this.generateWorkingKey(true,key,0);
	this.decKey = this.generateWorkingKey(false,key,0);
};
com_hurlant_crypto_symmetric_DESKey.__name__ = ["com","hurlant","crypto","symmetric","DESKey"];
com_hurlant_crypto_symmetric_DESKey.__interfaces__ = [com_hurlant_crypto_symmetric_ISymmetricKey];
com_hurlant_crypto_symmetric_DESKey.prototype = {
	key: null
	,encKey: null
	,decKey: null
	,getBlockSize: function() {
		return 8;
	}
	,decrypt: function(block,index) {
		if(index == null) {
			index = 0;
		}
		this.desFunc(this.decKey,block,index,block,index);
	}
	,dispose: function() {
		var _g1 = 0;
		var _g = this.encKey.length;
		while(_g1 < _g) this.encKey[_g1++] = 0;
		var _g11 = 0;
		var _g2 = this.decKey.length;
		while(_g11 < _g2) this.decKey[_g11++] = 0;
		this.encKey = null;
		this.decKey = null;
		var _g12 = 0;
		var _g3 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(this.key);
		while(_g12 < _g3) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(this.key,_g12++,0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(this.key,0);
		this.key = null;
		com_hurlant_util_Memory.gc();
	}
	,encrypt: function(block,index) {
		if(index == null) {
			index = 0;
		}
		this.desFunc(this.encKey,block,index,block,index);
	}
	,generateWorkingKey: function(encrypting,key,off) {
		var newKey = [];
		var pc1m = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var pcr = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var l;
		var _g = 0;
		while(_g < 56) {
			var j = _g++;
			l = com_hurlant_crypto_symmetric_DESKey.pc1[j];
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(pc1m,j,(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(key,off + (l >>> 3)) & com_hurlant_crypto_symmetric_DESKey.bytebit[l & 7]) != 0?1:0);
		}
		var _g1 = 0;
		while(_g1 < 16) {
			var i = _g1++;
			var m;
			var n;
			if(encrypting) {
				m = i << 1;
			} else {
				m = 15 - i << 1;
			}
			n = m + 1;
			newKey[m] = newKey[n] = 0;
			var _g11 = 0;
			while(_g11 < 28) {
				var j1 = _g11++;
				l = j1 + com_hurlant_crypto_symmetric_DESKey.totrot[i];
				if(l < 28) {
					com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(pcr,j1,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(pc1m,l));
				} else {
					com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(pcr,j1,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(pc1m,l - 28));
				}
			}
			var _g12 = 28;
			while(_g12 < 56) {
				var j2 = _g12++;
				l = j2 + com_hurlant_crypto_symmetric_DESKey.totrot[i];
				if(l < 56) {
					com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(pcr,j2,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(pc1m,l));
				} else {
					com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(pcr,j2,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(pc1m,l - 28));
				}
			}
			var _g13 = 0;
			while(_g13 < 24) {
				var j3 = _g13++;
				if(Reflect.field(pcr,Std.string(com_hurlant_crypto_symmetric_DESKey.pc2[j3]))) {
					newKey[m] |= com_hurlant_crypto_symmetric_DESKey.bigbyte[j3];
				}
				if(Reflect.field(pcr,Std.string(com_hurlant_crypto_symmetric_DESKey.pc2[j3 + 24]))) {
					newKey[n] |= com_hurlant_crypto_symmetric_DESKey.bigbyte[j3];
				}
			}
		}
		var i1 = 0;
		while(i1 != 32) {
			var i11;
			var i2;
			i11 = newKey[i1];
			i2 = newKey[i1 + 1];
			newKey[i1] = (i11 & 16515072) << 6 | (i11 & 4032) << 10 | (i2 & 16515072) >>> 10 | (i2 & 4032) >>> 6;
			newKey[i1 + 1] = (i11 & 258048) << 12 | (i11 & 63) << 16 | (i2 & 258048) >>> 4 | i2 & 63;
			i1 += 2;
		}
		return newKey;
	}
	,desFunc: function(wKey,inp,inOff,out,outOff) {
		var work;
		var right;
		var left = (com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(inp,inOff) & 255) << 24;
		left |= (com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(inp,inOff + 1) & 255) << 16;
		left |= (com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(inp,inOff + 2) & 255) << 8;
		left |= com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(inp,inOff + 3) & 255;
		right = (com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(inp,inOff + 4) & 255) << 24;
		right |= (com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(inp,inOff + 5) & 255) << 16;
		right |= (com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(inp,inOff + 6) & 255) << 8;
		right |= com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(inp,inOff + 7) & 255;
		work = (left >>> 4 ^ right) & 252645135;
		right ^= work;
		left ^= work << 4;
		work = (left >>> 16 ^ right) & 65535;
		right ^= work;
		left ^= work << 16;
		work = (right >>> 2 ^ left) & 858993459;
		left ^= work;
		right ^= work << 2;
		work = (right >>> 8 ^ left) & 16711935;
		left ^= work;
		right ^= work << 8;
		right = (right << 1 | right >>> 31 & 1) & -1;
		work = (left ^ right) & -1431655766;
		left ^= work;
		right ^= work;
		left = (left << 1 | left >>> 31 & 1) & -1;
		var _g = 0;
		while(_g < 8) {
			var round = _g++;
			var fval;
			work = right << 28 | right >>> 4;
			work ^= wKey[round * 4];
			fval = com_hurlant_crypto_symmetric_DESKey.SP7[work & 63];
			fval |= com_hurlant_crypto_symmetric_DESKey.SP5[work >>> 8 & 63];
			fval |= com_hurlant_crypto_symmetric_DESKey.SP3[work >>> 16 & 63];
			fval |= com_hurlant_crypto_symmetric_DESKey.SP1[work >>> 24 & 63];
			work = right ^ wKey[round * 4 + 1];
			fval |= com_hurlant_crypto_symmetric_DESKey.SP8[work & 63];
			fval |= com_hurlant_crypto_symmetric_DESKey.SP6[work >>> 8 & 63];
			fval |= com_hurlant_crypto_symmetric_DESKey.SP4[work >>> 16 & 63];
			fval |= com_hurlant_crypto_symmetric_DESKey.SP2[work >>> 24 & 63];
			left ^= fval;
			work = left << 28 | left >>> 4;
			work ^= wKey[round * 4 + 2];
			fval = com_hurlant_crypto_symmetric_DESKey.SP7[work & 63];
			fval |= com_hurlant_crypto_symmetric_DESKey.SP5[work >>> 8 & 63];
			fval |= com_hurlant_crypto_symmetric_DESKey.SP3[work >>> 16 & 63];
			fval |= com_hurlant_crypto_symmetric_DESKey.SP1[work >>> 24 & 63];
			work = left ^ wKey[round * 4 + 3];
			fval |= com_hurlant_crypto_symmetric_DESKey.SP8[work & 63];
			fval |= com_hurlant_crypto_symmetric_DESKey.SP6[work >>> 8 & 63];
			fval |= com_hurlant_crypto_symmetric_DESKey.SP4[work >>> 16 & 63];
			fval |= com_hurlant_crypto_symmetric_DESKey.SP2[work >>> 24 & 63];
			right ^= fval;
		}
		right = right << 31 | right >>> 1;
		work = (left ^ right) & -1431655766;
		left ^= work;
		right ^= work;
		left = left << 31 | left >>> 1;
		work = (left >>> 8 ^ right) & 16711935;
		right ^= work;
		left ^= work << 8;
		work = (left >>> 2 ^ right) & 858993459;
		right ^= work;
		left ^= work << 2;
		work = (right >>> 16 ^ left) & 65535;
		left ^= work;
		right ^= work << 16;
		work = (right >>> 4 ^ left) & 252645135;
		left ^= work;
		right ^= work << 4;
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outOff,right >>> 24 & 255);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outOff + 1,right >>> 16 & 255);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outOff + 2,right >>> 8 & 255);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outOff + 3,right & 255);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outOff + 4,left >>> 24 & 255);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outOff + 5,left >>> 16 & 255);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outOff + 6,left >>> 8 & 255);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outOff + 7,left & 255);
	}
	,toString: function() {
		return "des";
	}
	,__class__: com_hurlant_crypto_symmetric_DESKey
};
var com_hurlant_crypto_symmetric_ECBMode = function(key,padding) {
	this.key = key;
	if(padding == null) {
		padding = new com_hurlant_crypto_symmetric_PKCS5(key.getBlockSize());
	} else {
		padding.setBlockSize(key.getBlockSize());
	}
	this.padding = padding;
};
com_hurlant_crypto_symmetric_ECBMode.__name__ = ["com","hurlant","crypto","symmetric","ECBMode"];
com_hurlant_crypto_symmetric_ECBMode.__interfaces__ = [com_hurlant_crypto_symmetric_ICipher,com_hurlant_crypto_symmetric_IMode];
com_hurlant_crypto_symmetric_ECBMode.prototype = {
	key: null
	,padding: null
	,getBlockSize: function() {
		return this.key.getBlockSize();
	}
	,encrypt: function(src) {
		this.padding.pad(src);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(src,0);
		var blockSize = this.key.getBlockSize();
		var tmp = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var dst = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var i = 0;
		while(i < com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src)) {
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(tmp,0);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readBytes(src,tmp,0,blockSize);
			this.key.encrypt(tmp);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(dst,tmp);
			i += blockSize;
		}
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(src,0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,dst);
	}
	,decrypt: function(src) {
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(src,0);
		var blockSize = this.key.getBlockSize();
		if(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src) % blockSize != 0) {
			throw new js__$Boot_HaxeError(new com_hurlant_util_Error("ECB mode cipher length must be a multiple of blocksize " + blockSize));
		}
		var tmp = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var dst = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var i = 0;
		while(i < com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src)) {
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(tmp,0);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readBytes(src,tmp,0,blockSize);
			this.key.decrypt(tmp);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(dst,tmp);
			i += blockSize;
		}
		this.padding.unpad(dst);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(src,0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,dst);
	}
	,dispose: function() {
		this.key.dispose();
		this.key = null;
		this.padding = null;
		com_hurlant_util_Memory.gc();
	}
	,toString: function() {
		return Std.string(this.key) + "-ecb";
	}
	,__class__: com_hurlant_crypto_symmetric_ECBMode
};
var com_hurlant_crypto_symmetric_IPad = function() { };
com_hurlant_crypto_symmetric_IPad.__name__ = ["com","hurlant","crypto","symmetric","IPad"];
com_hurlant_crypto_symmetric_IPad.prototype = {
	pad: null
	,unpad: null
	,setBlockSize: null
	,__class__: com_hurlant_crypto_symmetric_IPad
};
var com_hurlant_crypto_symmetric_NullPad = function() {
};
com_hurlant_crypto_symmetric_NullPad.__name__ = ["com","hurlant","crypto","symmetric","NullPad"];
com_hurlant_crypto_symmetric_NullPad.__interfaces__ = [com_hurlant_crypto_symmetric_IPad];
com_hurlant_crypto_symmetric_NullPad.prototype = {
	unpad: function(a) {
		return;
	}
	,pad: function(a) {
		return;
	}
	,setBlockSize: function(bs) {
		return;
	}
	,__class__: com_hurlant_crypto_symmetric_NullPad
};
var com_hurlant_crypto_symmetric_OFBMode = function(key,padding) {
	com_hurlant_crypto_symmetric_IVMode.call(this,key,null);
};
com_hurlant_crypto_symmetric_OFBMode.__name__ = ["com","hurlant","crypto","symmetric","OFBMode"];
com_hurlant_crypto_symmetric_OFBMode.__interfaces__ = [com_hurlant_crypto_symmetric_IMode];
com_hurlant_crypto_symmetric_OFBMode.__super__ = com_hurlant_crypto_symmetric_IVMode;
com_hurlant_crypto_symmetric_OFBMode.prototype = $extend(com_hurlant_crypto_symmetric_IVMode.prototype,{
	encrypt: function(src) {
		this.core(src,this.getIV4e());
	}
	,decrypt: function(src) {
		this.core(src,this.getIV4d());
	}
	,core: function(src,iv) {
		var l = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src);
		var tmp = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var i = 0;
		while(i < com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(src)) {
			this.key.encrypt(iv);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(tmp,0);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(tmp,iv);
			var _g1 = 0;
			var _g = i + this.blockSize < l?this.blockSize:l - i;
			while(_g1 < _g) {
				var j = _g1++;
				var _g2 = i + j;
				com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(src,_g2,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(src,_g2) ^ com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(iv,j));
			}
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(iv,0);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(iv,tmp);
			i += this.blockSize;
		}
	}
	,toString: function() {
		return Std.string(this.key) + "-ofb";
	}
	,__class__: com_hurlant_crypto_symmetric_OFBMode
});
var com_hurlant_crypto_symmetric_PKCS5 = function(blockSize) {
	if(blockSize == null) {
		blockSize = 0;
	}
	this.blockSize = blockSize;
};
com_hurlant_crypto_symmetric_PKCS5.__name__ = ["com","hurlant","crypto","symmetric","PKCS5"];
com_hurlant_crypto_symmetric_PKCS5.__interfaces__ = [com_hurlant_crypto_symmetric_IPad];
com_hurlant_crypto_symmetric_PKCS5.prototype = {
	blockSize: null
	,pad: function(a) {
		var c = this.blockSize - com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(a) % this.blockSize;
		var _g1 = 0;
		while(_g1 < c) {
			++_g1;
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(a,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(a),c);
		}
	}
	,unpad: function(a) {
		var c = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(a) % this.blockSize;
		if(c != 0) {
			throw new js__$Boot_HaxeError(new com_hurlant_util_Error("PKCS#5::unpad: ByteArray.length isn't a multiple of the blockSize"));
		}
		c = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(a,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(a) - 1);
		var i = c;
		while(i > 0) {
			var v = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(a,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(a) - 1);
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(a,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(a) - 1);
			if(c != v) {
				throw new js__$Boot_HaxeError(new com_hurlant_util_Error("PKCS#5:unpad: Invalid padding value. expected [" + c + "], found [" + v + "]"));
			}
			--i;
		}
	}
	,setBlockSize: function(bs) {
		this.blockSize = bs;
	}
	,__class__: com_hurlant_crypto_symmetric_PKCS5
};
var com_hurlant_crypto_symmetric_TripleDESKey = function(key) {
	com_hurlant_crypto_symmetric_DESKey.call(this,key);
	this.encKey2 = this.generateWorkingKey(false,key,8);
	this.decKey2 = this.generateWorkingKey(true,key,8);
	if(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(key) > 16) {
		this.encKey3 = this.generateWorkingKey(true,key,16);
		this.decKey3 = this.generateWorkingKey(false,key,16);
	} else {
		this.encKey3 = this.encKey;
		this.decKey3 = this.decKey;
	}
};
com_hurlant_crypto_symmetric_TripleDESKey.__name__ = ["com","hurlant","crypto","symmetric","TripleDESKey"];
com_hurlant_crypto_symmetric_TripleDESKey.__super__ = com_hurlant_crypto_symmetric_DESKey;
com_hurlant_crypto_symmetric_TripleDESKey.prototype = $extend(com_hurlant_crypto_symmetric_DESKey.prototype,{
	encKey2: null
	,encKey3: null
	,decKey2: null
	,decKey3: null
	,dispose: function() {
		com_hurlant_crypto_symmetric_DESKey.prototype.dispose.call(this);
		if(this.encKey2 != null) {
			var _g1 = 0;
			var _g = this.encKey2.length;
			while(_g1 < _g) this.encKey2[_g1++] = 0;
			this.encKey2 = null;
		}
		if(this.encKey3 != null) {
			var _g11 = 0;
			var _g2 = this.encKey3.length;
			while(_g11 < _g2) this.encKey3[_g11++] = 0;
			this.encKey3 = null;
		}
		if(this.decKey2 != null) {
			var _g12 = 0;
			var _g3 = this.decKey2.length;
			while(_g12 < _g3) this.decKey2[_g12++] = 0;
			this.decKey2 = null;
		}
		if(this.decKey3 != null) {
			var _g13 = 0;
			var _g4 = this.decKey3.length;
			while(_g13 < _g4) this.decKey3[_g13++] = 0;
			this.decKey3 = null;
		}
		com_hurlant_util_Memory.gc();
	}
	,encrypt: function(block,index) {
		if(index == null) {
			index = 0;
		}
		this.desFunc(this.encKey,block,index,block,index);
		this.desFunc(this.encKey2,block,index,block,index);
		this.desFunc(this.encKey3,block,index,block,index);
	}
	,decrypt: function(block,index) {
		if(index == null) {
			index = 0;
		}
		this.desFunc(this.decKey3,block,index,block,index);
		this.desFunc(this.decKey2,block,index,block,index);
		this.desFunc(this.decKey,block,index,block,index);
	}
	,toString: function() {
		return "3des";
	}
	,__class__: com_hurlant_crypto_symmetric_TripleDESKey
});
var com_hurlant_crypto_symmetric_XTeaKey = function(a) {
	this.NUM_ROUNDS = 64;
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(a,0);
	this.k = [com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUnsignedInt(a),com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUnsignedInt(a),com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUnsignedInt(a),com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUnsignedInt(a)];
};
com_hurlant_crypto_symmetric_XTeaKey.__name__ = ["com","hurlant","crypto","symmetric","XTeaKey"];
com_hurlant_crypto_symmetric_XTeaKey.__interfaces__ = [com_hurlant_crypto_symmetric_ISymmetricKey];
com_hurlant_crypto_symmetric_XTeaKey.parseKey = function(K) {
	var a = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeUnsignedInt(a,com_hurlant_util_Std2.parseInt(HxOverrides.substr(K,0,8),16));
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeUnsignedInt(a,com_hurlant_util_Std2.parseInt(HxOverrides.substr(K,8,8),16));
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeUnsignedInt(a,com_hurlant_util_Std2.parseInt(HxOverrides.substr(K,16,8),16));
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeUnsignedInt(a,com_hurlant_util_Std2.parseInt(HxOverrides.substr(K,24,8),16));
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(a,0);
	return new com_hurlant_crypto_symmetric_XTeaKey(a);
};
com_hurlant_crypto_symmetric_XTeaKey.prototype = {
	NUM_ROUNDS: null
	,k: null
	,getBlockSize: function() {
		return 8;
	}
	,encrypt: function(block,index) {
		if(index == null) {
			index = 0;
		}
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(block,index);
		var v0 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUnsignedInt(block);
		var v1 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUnsignedInt(block);
		var sum = 0;
		var _g1 = 0;
		var _g = this.NUM_ROUNDS;
		while(_g1 < _g) {
			++_g1;
			v0 += (v1 << 4 ^ v1 >> 5) + v1 ^ sum + this.k[sum & 3];
			sum += -1640531527;
			v1 += (v0 << 4 ^ v0 >> 5) + v0 ^ sum + this.k[sum >> 11 & 3];
		}
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(block,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_position(block) - 8);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeUnsignedInt(block,v0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeUnsignedInt(block,v1);
	}
	,decrypt: function(block,index) {
		if(index == null) {
			index = 0;
		}
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(block,index);
		var v0 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUnsignedInt(block);
		var v1 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUnsignedInt(block);
		var sum = -1640531527 * this.NUM_ROUNDS;
		var _g1 = 0;
		var _g = this.NUM_ROUNDS;
		while(_g1 < _g) {
			++_g1;
			v1 -= (v0 << 4 ^ v0 >> 5) + v0 ^ sum + this.k[sum >> 11 & 3];
			sum -= -1640531527;
			v0 -= (v1 << 4 ^ v1 >> 5) + v1 ^ sum + this.k[sum & 3];
		}
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(block,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_position(block) - 8);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeUnsignedInt(block,v0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeUnsignedInt(block,v1);
	}
	,dispose: function() {
		var r = new com_hurlant_crypto_prng_Random();
		var _g1 = 0;
		var _g = this.k.length;
		while(_g1 < _g) this.k[_g1++] = r.nextByte();
		this.k = null;
		com_hurlant_util_Memory.gc();
	}
	,toString: function() {
		return "xtea";
	}
	,__class__: com_hurlant_crypto_symmetric_XTeaKey
};
var com_hurlant_math_IReduction = function() { };
com_hurlant_math_IReduction.__name__ = ["com","hurlant","math","IReduction"];
com_hurlant_math_IReduction.prototype = {
	convert: null
	,revert: null
	,reduce: null
	,mulTo: null
	,sqrTo: null
	,__class__: com_hurlant_math_IReduction
};
var com_hurlant_math_BarrettReduction = function(m) {
	this.r2 = new com_hurlant_math_BigInteger();
	this.q3 = new com_hurlant_math_BigInteger();
	com_hurlant_math_BigInteger.ONE.dlShiftTo(2 * m.t,this.r2);
	this.mu = this.r2.divide(m);
	this.m = m;
};
com_hurlant_math_BarrettReduction.__name__ = ["com","hurlant","math","BarrettReduction"];
com_hurlant_math_BarrettReduction.__interfaces__ = [com_hurlant_math_IReduction];
com_hurlant_math_BarrettReduction.prototype = {
	m: null
	,r2: null
	,q3: null
	,mu: null
	,revert: function(x) {
		return x;
	}
	,mulTo: function(x,y,r) {
		x.multiplyTo(y,r);
		this.reduce(r);
	}
	,sqrTo: function(x,r) {
		x.squareTo(r);
		this.reduce(r);
	}
	,convert: function(x) {
		if(x.s < 0 || x.t > 2 * this.m.t) {
			return x.mod(this.m);
		} else if(x.compareTo(this.m) < 0) {
			return x;
		} else {
			var r = new com_hurlant_math_BigInteger();
			x.copyTo(r);
			this.reduce(r);
			return r;
		}
	}
	,reduce: function(lx) {
		var x;
		try {
			x = js_Boot.__cast(lx , com_hurlant_math_BigInteger);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			x = null;
		}
		x.drShiftTo(this.m.t - 1,this.r2);
		if(x.t > this.m.t + 1) {
			x.t = this.m.t + 1;
			x.clamp();
		}
		this.mu.multiplyUpperTo(this.r2,this.m.t + 1,this.q3);
		this.m.multiplyLowerTo(this.q3,this.m.t + 1,this.r2);
		while(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t + 1);
		x.subTo(this.r2,x);
		while(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
	}
	,__class__: com_hurlant_math_BarrettReduction
};
var com_hurlant_util_Hex = function() {
};
com_hurlant_util_Hex.__name__ = ["com","hurlant","util","Hex"];
com_hurlant_util_Hex.toArray = function(hex) {
	hex = new EReg("^0x|\\s|:","gm").replace(hex,"");
	var a = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	if((hex.length & 1) == 1) {
		hex = "0" + hex;
	}
	var i = 0;
	while(i < hex.length) {
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(a,i / 2 | 0,com_hurlant_util_Std2.parseInt(HxOverrides.substr(hex,i,2),16));
		i += 2;
	}
	return a;
};
com_hurlant_util_Hex.fromArray = function(array,colons) {
	if(colons == null) {
		colons = false;
	}
	var s = "";
	var _g1 = 0;
	var _g = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(array);
	while(_g1 < _g) {
		var i = _g1++;
		s += HxOverrides.substr("0" + Std.string(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(array,i)),-2,2);
		if(colons) {
			if(i < com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(array) - 1) {
				s += ":";
			}
		}
	}
	return s;
};
com_hurlant_util_Hex.toString = function(hex,charSet) {
	if(charSet == null) {
		charSet = "utf-8";
	}
	var a = com_hurlant_util_Hex.toArray(hex);
	return com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readMultiByte(a,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(a),charSet);
};
com_hurlant_util_Hex.toRawString = function(hex) {
	return com_hurlant_util_Hex.toString(hex,"iso-8859-1");
};
com_hurlant_util_Hex.fromString = function(str,colons,charSet) {
	if(charSet == null) {
		charSet = "utf-8";
	}
	if(colons == null) {
		colons = false;
	}
	var a = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeMultiByte(a,str,charSet);
	return com_hurlant_util_Hex.fromArray(a,colons);
};
com_hurlant_util_Hex.fromRawString = function(str,colons) {
	if(colons == null) {
		colons = false;
	}
	return com_hurlant_util_Hex.fromString(str,colons,"iso-8859-1");
};
com_hurlant_util_Hex.prototype = {
	__class__: com_hurlant_util_Hex
};
var com_hurlant_util__$ByteArray_ByteArray_$Impl_$ = {};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.__name__ = ["com","hurlant","util","_ByteArray","ByteArray_Impl_"];
com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new = function() {
	return new com_hurlant_util_ByteArrayData();
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readBytes = function(this1,output,offset,length) {
	this1.readBytes(output,offset,length);
	return;
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readMultiByte = function(this1,length,encoding) {
	return this1.readMultiByte(length,encoding);
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeMultiByte = function(this1,str,encoding) {
	this1.writeMultiByte(str,encoding);
	return;
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUnsignedInt = function(this1) {
	return this1.readUnsignedInt();
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUnsignedByte = function(this1) {
	return this1.readUnsignedByte();
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeUTF = function(this1,str) {
	this1.writeUTF(str);
	return;
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeUTFBytes = function(this1,str) {
	this1.writeUTFBytes(str);
	return;
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeByte = function(this1,value) {
	this1.writeByte(value);
	return;
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes = function(this1,input,offset,length) {
	if(length == null) {
		length = -1;
	}
	if(offset == null) {
		offset = -1;
	}
	this1.writeBytes(input,offset,length);
	return;
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUTFBytes = function(this1,length) {
	return this1.readUTFBytes(length);
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeUnsignedByte = function(this1,value) {
	this1.writeUnsignedByte(value);
	return;
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeUnsignedInt = function(this1,value) {
	this1.writeUnsignedInt(value);
	return;
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_endian = function(this1) {
	return this1.endian;
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_position = function(this1) {
	return this1.get_position();
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length = function(this1) {
	return this1.get_length();
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_bytesAvailable = function(this1) {
	return this1.get_length() - this1.get_position();
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_endian = function(this1,value) {
	return this1.endian = value;
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position = function(this1,value) {
	return this1.set_position(value);
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length = function(this1,value) {
	return this1.set_length(value);
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get = function(this1,index) {
	return this1.get(index);
};
com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set = function(this1,index,value) {
	return this1.set(index,value);
};
var com_hurlant_util_IDataInput = function() { };
com_hurlant_util_IDataInput.__name__ = ["com","hurlant","util","IDataInput"];
var com_hurlant_util_IDataOutput = function() { };
com_hurlant_util_IDataOutput.__name__ = ["com","hurlant","util","IDataOutput"];
com_hurlant_util_IDataOutput.prototype = {
	writeByte: null
	,__class__: com_hurlant_util_IDataOutput
};
var com_hurlant_util_ByteArrayData = function() {
	this._position = 0;
	this._length = 0;
	this._data = new haxe_io_Bytes(new ArrayBuffer(16));
	this.endian = com_hurlant_util_Endian.BIG_ENDIAN;
};
com_hurlant_util_ByteArrayData.__name__ = ["com","hurlant","util","ByteArrayData"];
com_hurlant_util_ByteArrayData.__interfaces__ = [com_hurlant_util_IDataInput,com_hurlant_util_IDataOutput];
com_hurlant_util_ByteArrayData.prototype = {
	endian: null
	,_data: null
	,_length: null
	,_position: null
	,ensureLength: function(elength) {
		if(this._data.length < elength) {
			var newlength = Math.max(this._data.length * 2,elength) | 0;
			var oldData = this._data;
			this._data = new haxe_io_Bytes(new ArrayBuffer(newlength));
			this._data.blit(0,oldData,0,oldData.length);
		}
		this._length = elength;
	}
	,readBytes: function(output,offset,length) {
		throw new js__$Boot_HaxeError(new com_hurlant_util_Error("Not implemented"));
	}
	,readUTFBytes: function(length) {
		throw new js__$Boot_HaxeError(new com_hurlant_util_Error("Not implemented"));
	}
	,readMultiByte: function(length,encoding) {
		throw new js__$Boot_HaxeError(new com_hurlant_util_Error("Not implemented"));
	}
	,readUnsignedByte: function() {
		return this.get(this.getUpdatePos(1)) & 255;
	}
	,readUnsignedInt: function() {
		return this.bswap32Endian(this._data.getInt32(this.getUpdatePos(4)));
	}
	,set: function(index,value) {
		this.ensureLength(index + 1);
		this._data.b[index] = value & 255;
		return value;
	}
	,get: function(index) {
		this.ensureLength(index + 1);
		return this._data.b[index];
	}
	,writeUTF: function(str) {
		throw new js__$Boot_HaxeError(new com_hurlant_util_Error("Not implemented"));
	}
	,writeUTFBytes: function(str) {
		throw new js__$Boot_HaxeError(new com_hurlant_util_Error("Not implemented"));
	}
	,writeMultiByte: function(str,encoding) {
		var _g1 = 0;
		var _g = str.length;
		while(_g1 < _g) this.writeByte(HxOverrides.cca(str,_g1++));
	}
	,writeByte: function(value) {
		this.writeUnsignedByte(value);
	}
	,writeBytes: function(input,offset,length) {
		if(length == null) {
			length = -1;
		}
		if(offset == null) {
			offset = -1;
		}
		throw new js__$Boot_HaxeError(new com_hurlant_util_Error("Not implemented"));
	}
	,writeUnsignedByte: function(value) {
		this._data.b[this.getUpdatePos(1)] = value & 255;
	}
	,writeUnsignedInt: function(value) {
		this._data.setInt32(this.getUpdatePos(1),this.bswap32Endian(value));
	}
	,get_position: function() {
		return this._position;
	}
	,get_length: function() {
		return this._length;
	}
	,set_position: function(value) {
		return this._position = value;
	}
	,set_length: function(value) {
		this.ensureLength(value);
		return this._length = value;
	}
	,getUpdatePos: function(count) {
		this.ensureLength(this._position + count);
		var out = this._position;
		this._position += count;
		return out;
	}
	,bswap32Endian: function(value) {
		if(this.endian == com_hurlant_util_Endian.BIG_ENDIAN) {
			return this.bswap32(value);
		} else {
			return value;
		}
	}
	,bswap32: function(a) {
		return a << 24 | (a & 65280) << 8 | (a & 16711680) >> 8 | a >> 24;
	}
	,bswap16Endian: function(value) {
		if(this.endian == com_hurlant_util_Endian.BIG_ENDIAN) {
			return this.bswap16(value);
		} else {
			return value;
		}
	}
	,bswap16: function(value) {
		return (value & 255) << 8 | value >> 8 & 255;
	}
	,__class__: com_hurlant_util_ByteArrayData
};
var com_hurlant_util_Std2 = function() { };
com_hurlant_util_Std2.__name__ = ["com","hurlant","util","Std2"];
com_hurlant_util_Std2.getDigit = function(charCode) {
	if(charCode >= com_hurlant_util_Std2._C0 && charCode <= com_hurlant_util_Std2._C9) {
		return charCode - com_hurlant_util_Std2._C0;
	}
	if(charCode >= com_hurlant_util_Std2._Cla && charCode <= com_hurlant_util_Std2._Clz) {
		return charCode - com_hurlant_util_Std2._Cla + 10;
	}
	if(charCode >= com_hurlant_util_Std2._UA && charCode <= com_hurlant_util_Std2._UZ) {
		return charCode - com_hurlant_util_Std2._UA + 10;
	}
	return -1;
};
com_hurlant_util_Std2.parseInt = function(value,radix) {
	if(radix == null) {
		radix = 10;
	}
	if(HxOverrides.substr(value,0,1) == "-") {
		return -com_hurlant_util_Std2.parseInt(HxOverrides.substr(value,1,null),radix);
	}
	var out = 0;
	var _g1 = 0;
	var _g = value.length;
	while(_g1 < _g) {
		var n = _g1++;
		value.charAt(n);
		var digit = com_hurlant_util_Std2.getDigit(HxOverrides.cca(value,n));
		if(digit < 0 || digit >= radix) {
			throw new js__$Boot_HaxeError(new com_hurlant_util_Error("Invalid digit " + digit));
		}
		out *= radix;
		out += digit;
	}
	return out;
};
com_hurlant_util_Std2.min3 = function(a,b,c) {
	return Math.min(Math.min(a,b),c);
};
var com_hurlant_util_Error = function(msg) {
	this.msg = msg;
};
com_hurlant_util_Error.__name__ = ["com","hurlant","util","Error"];
com_hurlant_util_Error.prototype = {
	msg: null
	,toString: function() {
		return this.msg;
	}
	,__class__: com_hurlant_util_Error
};
var js_Boot = function() { };
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg = i != null?i.fileName + ":" + i.lineNumber + ": ":"";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		d.innerHTML += js_Boot.__unhtml(msg) + "<br/>";
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "function":
		return "<function>";
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Int:
		return (o|0) === o;
	case Float:
		return typeof(o) == "number";
	case Bool:
		return typeof(o) == "boolean";
	case String:
		return typeof(o) == "string";
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Dynamic:
		return true;
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class && o.__name__ != null) {
			return true;
		}
		if(cl == Enum && o.__ename__ != null) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var com_hurlant_math_BigInteger = function(value,radix,unsigned) {
	if(unsigned == null) {
		unsigned = false;
	}
	if(radix == null) {
		radix = 0;
	}
	this.a = [];
	if(typeof(value) == "string") {
		if(radix != 0 && radix != 16) {
			var tmp;
			try {
				tmp = js_Boot.__cast(value , String);
			} catch( e ) {
				haxe_CallStack.lastException = e;
				tmp = null;
			}
			this.fromRadix(tmp,radix);
		} else {
			value = com_hurlant_util_Hex.toArray(value);
			radix = 0;
		}
	}
	if(js_Boot.__instanceof(value,com_hurlant_util_ByteArrayData)) {
		var array;
		try {
			array = js_Boot.__cast(value , com_hurlant_util_ByteArrayData);
		} catch( e1 ) {
			haxe_CallStack.lastException = e1;
			array = null;
		}
		var length = radix;
		if(length == 0) {
			length = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(array) - com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_position(array);
		}
		this.fromArray(array,length,unsigned);
	}
};
com_hurlant_math_BigInteger.__name__ = ["com","hurlant","math","BigInteger"];
com_hurlant_math_BigInteger.nbv = function(value) {
	var bn = new com_hurlant_math_BigInteger();
	bn.fromInt(value);
	return bn;
};
com_hurlant_math_BigInteger.getLN2 = function() {
	return 0.6931471805599453;
};
com_hurlant_math_BigInteger.prototype = {
	t: null
	,s: null
	,a: null
	,get: function(index) {
		return this.a[index];
	}
	,set: function(index,value) {
		return this.a[index] = value;
	}
	,dispose: function() {
		var r = new com_hurlant_crypto_prng_Random();
		var _g1 = 0;
		var _g = this.a.length;
		while(_g1 < _g) this.a[_g1++] = r.nextByte();
		this.a = null;
		this.t = 0;
		this.s = 0;
		com_hurlant_util_Memory.gc();
	}
	,toString: function(radix) {
		if(radix == null) {
			radix = 16;
		}
		if(this.s < 0) {
			return "-" + Std.string(this.negate());
		}
		var k;
		switch(radix) {
		case 2:
			k = 1;
			break;
		case 4:
			k = 2;
			break;
		case 8:
			k = 3;
			break;
		case 16:
			k = 4;
			break;
		case 32:
			k = 5;
			break;
		default:
			return this.toRadix(radix | 0);
		}
		var km = (1 << k) - 1;
		var d = 0;
		var m = false;
		var r = "";
		var i = this.t;
		var p = 30 - i * 30 % k;
		if(i-- > 0) {
			var tmp;
			if(p < 30) {
				d = this.a[i] >> p;
				tmp = d > 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				m = true;
				if(d == null) {
					r = "null";
				} else {
					r = "" + d;
				}
			}
			while(i >= 0) {
				if(p < k) {
					d = (this.a[i] & (1 << p) - 1) << k - p;
					var tmp1 = this.a[--i];
					p += 30 - k;
					d |= tmp1 >> p;
				} else {
					var tmp2 = this.a[i];
					p -= k;
					d = tmp2 >> p & km;
					if(p <= 0) {
						p += 30;
						--i;
					}
				}
				if(d > 0) {
					m = true;
				}
				if(m) {
					r += d == null?"null":"" + d;
				}
			}
		}
		if(m) {
			return r;
		} else {
			return "0";
		}
	}
	,toArray: function(array) {
		var d = 0;
		var i = this.t;
		var p = 30 - i * 30 % 8;
		var m = false;
		var c = 0;
		if(i-- > 0) {
			var tmp;
			if(p < 30) {
				d = this.a[i] >> p;
				tmp = d > 0;
			} else {
				tmp = false;
			}
			if(tmp) {
				m = true;
				com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeByte(array,d);
				c = 1;
			}
			while(i >= 0) {
				if(p < 8) {
					d = (this.a[i] & (1 << p) - 1) << 8 - p;
					var tmp1 = this.a[--i];
					p += 22;
					d |= tmp1 >> p;
				} else {
					var tmp2 = this.a[i];
					p -= 8;
					d = tmp2 >> p & 255;
					if(p <= 0) {
						p += 30;
						--i;
					}
				}
				if(d > 0) {
					m = true;
				}
				if(m) {
					com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeByte(array,d);
					++c;
				}
			}
		}
		return c;
	}
	,valueOf: function() {
		if(this.s == -1) {
			return -this.negate().valueOf();
		}
		var coef = 1;
		var value = 0;
		var _g1 = 0;
		var _g = this.t;
		while(_g1 < _g) {
			value += this.a[_g1++] * coef;
			coef *= com_hurlant_math_BigInteger.DV;
		}
		return value;
	}
	,negate: function() {
		var r = this.nbi();
		com_hurlant_math_BigInteger.ZERO.subTo(this,r);
		return r;
	}
	,abs: function() {
		if(this.s < 0) {
			return this.negate();
		} else {
			return this;
		}
	}
	,compareTo: function(v) {
		var r = this.s - v.s;
		if(r != 0) {
			return r;
		}
		var i = this.t;
		r = i - v.t;
		if(r != 0) {
			if(this.s < 0) {
				return r * -1;
			} else {
				return r;
			}
		}
		while(--i >= 0) {
			r = this.a[i] - v.a[i];
			if(r != 0) {
				return r;
			}
		}
		return 0;
	}
	,nbits: function(x) {
		var r = 1;
		var t = x >>> 16;
		if(t != 0) {
			x = t;
			r = 17;
		}
		t = x >> 8;
		if(t != 0) {
			x = t;
			r += 8;
		}
		t = x >> 4;
		if(t != 0) {
			x = t;
			r += 4;
		}
		t = x >> 2;
		if(t != 0) {
			x = t;
			r += 2;
		}
		t = x >> 1;
		if(t != 0) {
			x = t;
			++r;
		}
		return r;
	}
	,bitLength: function() {
		if(this.t <= 0) {
			return 0;
		}
		return 30 * (this.t - 1) + this.nbits(this.a[this.t - 1] ^ this.s & com_hurlant_math_BigInteger.DM);
	}
	,mod: function(v) {
		var r = this.nbi();
		this.abs().divRemTo(v,null,r);
		if(this.s < 0 && r.compareTo(com_hurlant_math_BigInteger.ZERO) > 0) {
			v.subTo(r,r);
		}
		return r;
	}
	,modPowInt: function(e,m) {
		return this.exp(e,e < 256 || m.isEven()?new com_hurlant_math_ClassicReduction(m):new com_hurlant_math_MontgomeryReduction(m));
	}
	,copyTo: function(r) {
		var i = this.t - 1;
		while(i >= 0) {
			r.a[i] = this.a[i];
			--i;
		}
		r.t = this.t;
		r.s = this.s;
	}
	,fromInt: function(value) {
		this.t = 1;
		this.s = value < 0?-1:0;
		if(value > 0) {
			this.a[0] = value;
		} else if(value < -1) {
			this.a[0] = value + com_hurlant_math_BigInteger.DV;
		} else {
			this.t = 0;
		}
	}
	,fromArray: function(value,length,unsigned) {
		if(unsigned == null) {
			unsigned = false;
		}
		var p = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_position(value);
		var i = p + length;
		var sh = 0;
		this.t = 0;
		this.s = 0;
		while(--i >= p) {
			var x = i < com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(value)?com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(value,i):0;
			if(sh == 0) {
				this.a[this.t++] = x;
			} else if(sh + 8 > 30) {
				this.a[this.t - 1] |= (x & (1 << 30 - sh) - 1) << sh;
				this.a[this.t++] = x >> 30 - sh;
			} else {
				this.a[this.t - 1] |= x << sh;
			}
			sh += 8;
			if(sh >= 30) {
				sh -= 30;
			}
		}
		if(!unsigned && (com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(value,0) & 128) == 128) {
			this.s = -1;
			if(sh > 0) {
				this.a[this.t - 1] |= (1 << 30 - sh) - 1 << sh;
			}
		}
		this.clamp();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(value,Math.min(p + length,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(value)) | 0);
	}
	,clamp: function() {
		var c = this.s & com_hurlant_math_BigInteger.DM;
		while(this.t > 0 && this.a[this.t - 1] == c) --this.t;
	}
	,dlShiftTo: function(n,r) {
		var i = this.t - 1;
		while(i >= 0) {
			r.a[i + n] = this.a[i];
			--i;
		}
		i = n - 1;
		while(i >= 0) {
			r.a[i] = 0;
			--i;
		}
		r.t = this.t + n;
		r.s = this.s;
	}
	,drShiftTo: function(n,r) {
		var _g1 = n;
		var _g = this.t;
		while(_g1 < _g) {
			var i = _g1++;
			r.a[i - n] = this.a[i];
		}
		r.t = Math.max(this.t - n,0) | 0;
		r.s = this.s;
	}
	,lShiftTo: function(n,r) {
		var bs = n % 30;
		var cbs = 30 - bs;
		var bm = (1 << cbs) - 1;
		var ds = n / 30 | 0;
		var c = this.s << bs & com_hurlant_math_BigInteger.DM;
		var i = this.t - 1;
		while(i >= 0) {
			r.a[i + ds + 1] = this.a[i] >> cbs | c;
			c = (this.a[i] & bm) << bs;
			--i;
		}
		i = ds - 1;
		while(i >= 0) {
			r.a[i] = 0;
			--i;
		}
		r.a[ds] = c;
		r.t = this.t + ds + 1;
		r.s = this.s;
		r.clamp();
	}
	,rShiftTo: function(n,r) {
		r.s = this.s;
		var ds = n / 30 | 0;
		if(ds >= this.t) {
			r.t = 0;
			return;
		}
		var bs = n % 30;
		var cbs = 30 - bs;
		var bm = (1 << bs) - 1;
		r.a[0] = this.a[ds] >> bs;
		var _g1 = ds + 1;
		var _g = this.t;
		while(_g1 < _g) {
			var i = _g1++;
			r.a[i - ds - 1] |= (this.a[i] & bm) << cbs;
			r.a[i - ds] = this.a[i] >> bs;
		}
		if(bs > 0) {
			r.a[this.t - ds - 1] |= (this.s & bm) << cbs;
		}
		r.t = this.t - ds;
		r.clamp();
	}
	,subTo: function(v,r) {
		var i = 0;
		var c = 0;
		var m = Math.min(v.t,this.t) | 0;
		while(i < m) {
			c += this.a[i] - v.a[i];
			r.a[i++] = c & com_hurlant_math_BigInteger.DM;
			c >>= 30;
		}
		if(v.t < this.t) {
			c -= v.s;
			while(i < this.t) {
				c += this.a[i];
				r.a[i++] = c & com_hurlant_math_BigInteger.DM;
				c >>= 30;
			}
			c += this.s;
		} else {
			c += this.s;
			while(i < v.t) {
				c -= v.a[i];
				r.a[i++] = c & com_hurlant_math_BigInteger.DM;
				c >>= 30;
			}
			c -= v.s;
		}
		r.s = c < 0?-1:0;
		if(c < -1) {
			r.a[i++] = com_hurlant_math_BigInteger.DV + c;
		} else if(c > 0) {
			r.a[i++] = c;
		}
		r.t = i;
		r.clamp();
	}
	,am: function(i,x,w,j,c,n) {
		var xl = x & 32767;
		var xh = x >> 15;
		while(--n >= 0) {
			var l = this.a[i] & 32767;
			var h = this.a[i++] >> 15;
			var m = xh * l + h * xl;
			l = xl * l + ((m & 32767) << 15) + w.a[j] + (c & 1073741823);
			c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);
			w.a[j++] = l & 1073741823;
		}
		return c;
	}
	,multiplyTo: function(v,r) {
		var x = this.abs();
		var y = v.abs();
		var i = x.t;
		r.t = i + y.t;
		while(--i >= 0) r.a[i] = 0;
		var _g1 = 0;
		var _g = y.t;
		while(_g1 < _g) {
			var i1 = _g1++;
			r.a[i1 + x.t] = x.am(0,y.a[i1],r,i1,0,x.t);
		}
		r.s = 0;
		r.clamp();
		if(this.s != v.s) {
			com_hurlant_math_BigInteger.ZERO.subTo(r,r);
		}
	}
	,squareTo: function(r) {
		var x = this.abs();
		var i = r.t = 2 * x.t;
		while(--i >= 0) r.a[i] = 0;
		var _g1 = 0;
		var _g = x.t - 1;
		while(_g1 < _g) {
			var i1 = _g1++;
			var c = x.am(i1,x.a[i1],r,2 * i1,0,1);
			if((r.a[i1 + x.t] += x.am(i1 + 1,2 * x.a[i1],r,2 * i1 + 1,c,x.t - i1 - 1)) >= com_hurlant_math_BigInteger.DV) {
				r.a[i1 + x.t] -= com_hurlant_math_BigInteger.DV;
				r.a[i1 + x.t + 1] = 1;
			}
		}
		if(r.t > 0) {
			r.a[r.t - 1] += x.am(i,x.a[i],r,2 * i,0,1);
		}
		r.s = 0;
		r.clamp();
	}
	,divRemTo: function(m,q,r) {
		var pm = m.abs();
		if(pm.t <= 0) {
			return;
		}
		var pt = this.abs();
		if(pt.t < pm.t) {
			if(q != null) {
				q.fromInt(0);
			}
			if(r != null) {
				this.copyTo(r);
			}
			return;
		}
		if(r == null) {
			r = this.nbi();
		}
		var y = this.nbi();
		var ts = this.s;
		var ms = m.s;
		var nsh = 30 - this.nbits(pm.a[pm.t - 1]);
		if(nsh > 0) {
			pm.lShiftTo(nsh,y);
			pt.lShiftTo(nsh,r);
		} else {
			pm.copyTo(y);
			pt.copyTo(r);
		}
		var ys = y.t;
		var y0 = y.a[ys - 1];
		if(y0 == 0) {
			return;
		}
		var yt = y0 * (1 << com_hurlant_math_BigInteger.F1) + (ys > 1?y.a[ys - 2] >> com_hurlant_math_BigInteger.F2:0);
		var d1 = com_hurlant_math_BigInteger.FV / yt;
		var d2 = (1 << com_hurlant_math_BigInteger.F1) / yt;
		var e = 1 << com_hurlant_math_BigInteger.F2;
		var i = r.t;
		var j = i - ys;
		var t = q == null?this.nbi():q;
		y.dlShiftTo(j,t);
		if(r.compareTo(t) >= 0) {
			r.a[r.t++] = 1;
			r.subTo(t,r);
		}
		com_hurlant_math_BigInteger.ONE.dlShiftTo(ys,t);
		t.subTo(y,y);
		while(y.t < ys) throw new js__$Boot_HaxeError(new com_hurlant_util_Error("Not implemented y.(y.t++, 0);"));
		while(--j >= 0) {
			var qd = r.a[--i] == y0?com_hurlant_math_BigInteger.DM:r.a[i] * d1 + (r.a[i - 1] + e) * d2 | 0;
			if((r.a[i] += y.am(0,qd,r,j,0,ys)) < qd) {
				y.dlShiftTo(j,t);
				r.subTo(t,r);
				while(r.a[i] < --qd) r.subTo(t,r);
			}
		}
		if(q != null) {
			r.drShiftTo(ys,q);
			if(ts != ms) {
				com_hurlant_math_BigInteger.ZERO.subTo(q,q);
			}
		}
		r.t = ys;
		r.clamp();
		if(nsh > 0) {
			r.rShiftTo(nsh,r);
		}
		if(ts < 0) {
			com_hurlant_math_BigInteger.ZERO.subTo(r,r);
		}
	}
	,invDigit: function() {
		if(this.t < 1) {
			return 0;
		}
		var x = this.a[0];
		if((x & 1) == 0) {
			return 0;
		}
		var y = x & 3;
		y = y * (2 - (x & 15) * y) & 15;
		y = y * (2 - (x & 255) * y) & 255;
		y = y * (2 - ((x & 65535) * y & 65535)) & 65535;
		y = y * (2 - x * (y % com_hurlant_math_BigInteger.DV)) % com_hurlant_math_BigInteger.DV;
		if(y > 0) {
			return com_hurlant_math_BigInteger.DV - y;
		} else {
			return -y;
		}
	}
	,isEven: function() {
		return (this.t > 0?this.a[0] & 1:this.s) == 0;
	}
	,exp: function(e,z) {
		if(e > -1 || e < 1) {
			return com_hurlant_math_BigInteger.ONE;
		}
		var r = this.nbi();
		var r2 = this.nbi();
		var g = z.convert(this);
		var i = this.nbits(e) - 1;
		g.copyTo(r);
		while(--i >= 0) {
			z.sqrTo(r,r2);
			if((e & 1 << i) > 0) {
				z.mulTo(r2,g,r);
			} else {
				var t = r;
				r = r2;
				r2 = t;
			}
		}
		return z.revert(r);
	}
	,intAt: function(str,index) {
		var i = com_hurlant_util_Std2.parseInt(str.charAt(index),36);
		return (isNaN(i)?-1:i) | 0;
	}
	,nbi: function() {
		return new com_hurlant_math_BigInteger();
	}
	,clone: function() {
		var r = new com_hurlant_math_BigInteger();
		this.copyTo(r);
		return r;
	}
	,intValue: function() {
		if(this.s < 0) {
			if(this.t == 1) {
				return this.a[0] - com_hurlant_math_BigInteger.DV;
			} else if(this.t == 0) {
				return -1;
			}
		} else if(this.t == 1) {
			return this.a[0];
		} else if(this.t == 0) {
			return 0;
		}
		return (this.a[1] & 3) << 30 | this.a[0];
	}
	,byteValue: function() {
		if(this.t == 0) {
			return this.s;
		} else {
			return this.a[0] << 24 >> 24;
		}
	}
	,shortValue: function() {
		if(this.t == 0) {
			return this.s;
		} else {
			return this.a[0] << 16 >> 16;
		}
	}
	,chunkSize: function(r) {
		return Math.floor(com_hurlant_math_BigInteger.getLN2() * 30 / Math.log(r));
	}
	,sigNum: function() {
		if(this.s < 0) {
			return -1;
		} else if(this.t <= 0 || this.t == 1 && this.a[0] <= 0) {
			return 0;
		} else {
			return 1;
		}
	}
	,toRadix: function(b) {
		if(b == null) {
			b = 10;
		}
		if(this.sigNum() == 0 || b < 2 || b > 32) {
			return "0";
		}
		var a = Math.pow(b,this.chunkSize(b));
		var d = com_hurlant_math_BigInteger.nbv(a | 0);
		var y = this.nbi();
		var z = this.nbi();
		var r = "";
		this.divRemTo(d,y,z);
		while(y.sigNum() > 0) {
			r = HxOverrides.substr(Std.string(a + z.intValue()),1,null) + r;
			y.divRemTo(d,y,z);
		}
		return Std.string(z.intValue()) + r;
	}
	,fromRadix: function(s,b) {
		if(b == null) {
			b = 10;
		}
		this.fromInt(0);
		var cs = this.chunkSize(b);
		var d = Math.pow(b,cs);
		var mi = false;
		var j = 0;
		var w = 0;
		var _g1 = 0;
		var _g = s.length;
		while(_g1 < _g) {
			var i = _g1++;
			var x = this.intAt(s,i);
			if(x < 0) {
				if(s.charAt(i) == "-" && this.sigNum() == 0) {
					mi = true;
				}
				continue;
			}
			w = b * w + x;
			if(++j >= cs) {
				this.dMultiply(d | 0);
				this.dAddOffset(w,0);
				j = 0;
				w = 0;
			}
		}
		if(j > 0) {
			this.dMultiply(Math.pow(b,j) | 0);
			this.dAddOffset(w,0);
		}
		if(mi) {
			com_hurlant_math_BigInteger.ZERO.subTo(this,this);
		}
	}
	,toByteArray: function() {
		var i = this.t;
		var r = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(r,0,this.s);
		var p = 30 - i * 30 % 8;
		var d;
		var k = 0;
		if(i-- > 0) {
			var tmp;
			if(p < 30) {
				d = this.a[i] >> p;
				tmp = d != (this.s & com_hurlant_math_BigInteger.DM) >> p;
			} else {
				tmp = false;
			}
			if(tmp) {
				k = 1;
				com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(r,0,d | this.s << 30 - p);
			}
			while(i >= 0) {
				if(p < 8) {
					d = (this.a[i] & (1 << p) - 1) << 8 - p;
					var tmp1 = this.a[--i];
					p += 22;
					d |= tmp1 >> p;
				} else {
					var tmp2 = this.a[i];
					p -= 8;
					d = tmp2 >> p & 255;
					if(p <= 0) {
						p += 30;
						--i;
					}
				}
				if((d & 128) != 0) {
					d |= -256;
				}
				if(k == 0 && (this.s & 128) != (d & 128)) {
					++k;
				}
				if(k > 0 || d != this.s) {
					com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(r,k++,d);
				}
			}
		}
		return r;
	}
	,equals: function(a) {
		return this.compareTo(a) == 0;
	}
	,min: function(a) {
		if(this.compareTo(a) < 0) {
			return this;
		} else {
			return a;
		}
	}
	,max: function(a) {
		if(this.compareTo(a) > 0) {
			return this;
		} else {
			return a;
		}
	}
	,bitwiseTo: function(a,op,r) {
		var f;
		var m = Math.min(a.t,this.t) | 0;
		var _g1 = 0;
		while(_g1 < m) {
			var i = _g1++;
			r.a[i] = op(this.a[i],a.a[i]);
		}
		if(a.t < this.t) {
			f = a.s & com_hurlant_math_BigInteger.DM;
			var _g11 = m;
			var _g = this.t;
			while(_g11 < _g) {
				var i1 = _g11++;
				r.a[i1] = op(this.a[i1],f);
			}
			r.t = this.t;
		} else {
			f = this.s & com_hurlant_math_BigInteger.DM;
			var _g12 = m;
			var _g2 = a.t;
			while(_g12 < _g2) {
				var i2 = _g12++;
				r.a[i2] = op(f,a.a[i2]);
			}
			r.t = a.t;
		}
		r.s = op(this.s,a.s);
		r.clamp();
	}
	,op_and: function(x,y) {
		return x & y;
	}
	,and: function(a) {
		var r = new com_hurlant_math_BigInteger();
		this.bitwiseTo(a,$bind(this,this.op_and),r);
		return r;
	}
	,op_or: function(x,y) {
		return x | y;
	}
	,or: function(a) {
		var r = new com_hurlant_math_BigInteger();
		this.bitwiseTo(a,$bind(this,this.op_or),r);
		return r;
	}
	,op_xor: function(x,y) {
		return x ^ y;
	}
	,xor: function(a) {
		var r = new com_hurlant_math_BigInteger();
		this.bitwiseTo(a,$bind(this,this.op_xor),r);
		return r;
	}
	,op_andnot: function(x,y) {
		return x & ~y;
	}
	,andNot: function(a) {
		var r = new com_hurlant_math_BigInteger();
		this.bitwiseTo(a,$bind(this,this.op_andnot),r);
		return r;
	}
	,not: function() {
		var r = new com_hurlant_math_BigInteger();
		var _g1 = 0;
		var _g = this.t;
		while(_g1 < _g) {
			var i = _g1++;
			r.set(i,com_hurlant_math_BigInteger.DM & ~this.a[i]);
		}
		r.t = this.t;
		r.s = ~this.s;
		return r;
	}
	,shiftLeft: function(n) {
		var r = new com_hurlant_math_BigInteger();
		if(n < 0) {
			this.rShiftTo(-n,r);
		} else {
			this.lShiftTo(n,r);
		}
		return r;
	}
	,shiftRight: function(n) {
		var r = new com_hurlant_math_BigInteger();
		if(n < 0) {
			this.lShiftTo(-n,r);
		} else {
			this.rShiftTo(n,r);
		}
		return r;
	}
	,lbit: function(x) {
		if(x == 0) {
			return -1;
		}
		var r = 0;
		if((x & 65535) == 0) {
			x >>= 16;
			r = 16;
		}
		if((x & 255) == 0) {
			x >>= 8;
			r += 8;
		}
		if((x & 15) == 0) {
			x >>= 4;
			r += 4;
		}
		if((x & 3) == 0) {
			x >>= 2;
			r += 2;
		}
		if((x & 1) == 0) {
			++r;
		}
		return r;
	}
	,getLowestSetBit: function() {
		var _g1 = 0;
		var _g = this.t;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.a[i] != 0) {
				return i * 30 + this.lbit(this.a[i]);
			}
		}
		if(this.s < 0) {
			return this.t * 30;
		}
		return -1;
	}
	,cbit: function(x) {
		var r = 0;
		while(x != 0) {
			x &= x - 1;
			++r;
		}
		return r;
	}
	,bitCount: function() {
		var r = 0;
		var x = this.s & com_hurlant_math_BigInteger.DM;
		var _g1 = 0;
		var _g = this.t;
		while(_g1 < _g) r += this.cbit(this.a[_g1++] ^ x);
		return r;
	}
	,testBit: function(n) {
		var j = Math.floor(n / 30);
		if(j >= this.t) {
			return this.s != 0;
		}
		return (this.a[j] & 1 << n % 30) != 0;
	}
	,changeBit: function(n,op) {
		var r = com_hurlant_math_BigInteger.ONE.shiftLeft(n);
		this.bitwiseTo(r,op,r);
		return r;
	}
	,setBit: function(n) {
		return this.changeBit(n,$bind(this,this.op_or));
	}
	,clearBit: function(n) {
		return this.changeBit(n,$bind(this,this.op_andnot));
	}
	,flipBit: function(n) {
		return this.changeBit(n,$bind(this,this.op_xor));
	}
	,addTo: function(a,r) {
		var i = 0;
		var c = 0;
		var m = Math.min(a.t,this.t) | 0;
		while(i < m) {
			c += this.a[i] + a.a[i];
			r.a[i++] = c & com_hurlant_math_BigInteger.DM;
			c >>= 30;
		}
		if(a.t < this.t) {
			c += a.s;
			while(i < this.t) {
				c += this.a[i];
				r.a[i++] = c & com_hurlant_math_BigInteger.DM;
				c >>= 30;
			}
			c += this.s;
		} else {
			c += this.s;
			while(i < a.t) {
				c += a.a[i];
				r.a[i++] = c & com_hurlant_math_BigInteger.DM;
				c >>= 30;
			}
			c += a.s;
		}
		r.s = c < 0?-1:0;
		if(c > 0) {
			r.a[i++] = c;
		} else if(c < -1) {
			r.a[i++] = com_hurlant_math_BigInteger.DV + c;
		}
		r.t = i;
		r.clamp();
	}
	,add: function(a) {
		var r = new com_hurlant_math_BigInteger();
		this.addTo(a,r);
		return r;
	}
	,subtract: function(a) {
		var r = new com_hurlant_math_BigInteger();
		this.subTo(a,r);
		return r;
	}
	,multiply: function(a) {
		var r = new com_hurlant_math_BigInteger();
		this.multiplyTo(a,r);
		return r;
	}
	,divide: function(a) {
		var r = new com_hurlant_math_BigInteger();
		this.divRemTo(a,r,null);
		return r;
	}
	,remainder: function(a) {
		var r = new com_hurlant_math_BigInteger();
		this.divRemTo(a,null,r);
		return r;
	}
	,divideAndRemainder: function(a) {
		var q = new com_hurlant_math_BigInteger();
		var r = new com_hurlant_math_BigInteger();
		this.divRemTo(a,q,r);
		return [q,r];
	}
	,dMultiply: function(n) {
		this.a[this.t] = this.am(0,n - 1,this,0,0,this.t);
		++this.t;
		this.clamp();
	}
	,dAddOffset: function(n,w) {
		while(this.t <= w) this.a[this.t++] = 0;
		this.a[w] += n;
		while(this.a[w] >= com_hurlant_math_BigInteger.DV) {
			this.a[w] -= com_hurlant_math_BigInteger.DV;
			if(++w >= this.t) {
				this.a[this.t++] = 0;
			}
			++this.a[w];
		}
	}
	,pow: function(e) {
		return this.exp(e,new com_hurlant_math_NullReduction());
	}
	,multiplyLowerTo: function(a,n,r) {
		var i = Math.min(this.t + a.t,n) | 0;
		r.s = 0;
		r.t = i;
		while(i > 0) r.a[--i] = 0;
		var j = r.t - this.t;
		while(i < j) {
			r.a[i + this.t] = this.am(0,a.a[i],r,i,0,this.t);
			++i;
		}
		j = Math.min(a.t,n) | 0;
		while(i < j) {
			this.am(0,a.a[i],r,i,0,n - i);
			++i;
		}
		r.clamp();
	}
	,multiplyUpperTo: function(a,n,r) {
		--n;
		var i = r.t = this.t + a.t - n;
		r.s = 0;
		while(--i >= 0) r.a[i] = 0;
		var _g1 = Math.max(n - this.t,0) | 0;
		var _g = a.t;
		while(_g1 < _g) {
			var i1 = _g1++;
			r.a[this.t + i1 - n] = this.am(n - i1,a.a[i1],r,0,0,this.t + i1 - n);
		}
		r.clamp();
		r.drShiftTo(1,r);
	}
	,modPow: function(e,m) {
		var i = e.bitLength();
		var k;
		var r = com_hurlant_math_BigInteger.nbv(1);
		var z;
		if(i <= 0) {
			return r;
		} else if(i < 18) {
			k = 1;
		} else if(i < 48) {
			k = 3;
		} else if(i < 144) {
			k = 4;
		} else if(i < 768) {
			k = 5;
		} else {
			k = 6;
		}
		if(i < 8) {
			z = new com_hurlant_math_ClassicReduction(m);
		} else if(m.isEven()) {
			z = new com_hurlant_math_BarrettReduction(m);
		} else {
			z = new com_hurlant_math_MontgomeryReduction(m);
		}
		var g = [];
		var n = 3;
		var k1 = k - 1;
		var km = (1 << k) - 1;
		g[1] = z.convert(this);
		if(k > 1) {
			var g2 = new com_hurlant_math_BigInteger();
			z.sqrTo(g[1],g2);
			while(n <= km) {
				g[n] = new com_hurlant_math_BigInteger();
				z.mulTo(g2,g[n - 2],g[n]);
				n += 2;
			}
		}
		var j = e.t - 1;
		var w;
		var is1 = true;
		var r2 = new com_hurlant_math_BigInteger();
		var t;
		i = this.nbits(e.a[j]) - 1;
		while(j >= 0) {
			if(i >= k1) {
				w = e.a[j] >> i - k1 & km;
			} else {
				w = (e.a[j] & (1 << i + 1) - 1) << k1 - i;
				if(j > 0) {
					w |= e.a[j - 1] >> 30 + i - k1;
				}
			}
			n = k;
			while((w & 1) == 0) {
				w >>= 1;
				--n;
			}
			i -= n;
			if(i < 0) {
				i += 30;
				--j;
			}
			if(is1) {
				g[w].copyTo(r);
				is1 = false;
			} else {
				while(n > 1) {
					z.sqrTo(r,r2);
					z.sqrTo(r2,r);
					n -= 2;
				}
				if(n > 0) {
					z.sqrTo(r,r2);
				} else {
					t = r;
					r = r2;
					r2 = t;
				}
				z.mulTo(r2,g[w],r);
			}
			while(j >= 0 && (e.a[j] & 1 << i) == 0) {
				z.sqrTo(r,r2);
				t = r;
				r = r2;
				r2 = t;
				if(--i < 0) {
					i = 29;
					--j;
				}
			}
		}
		return z.revert(r);
	}
	,gcd: function(a) {
		var x = this.s < 0?this.negate():this.clone();
		var y = a.s < 0?a.negate():a.clone();
		if(x.compareTo(y) < 0) {
			var t = x;
			x = y;
			y = t;
		}
		var i = x.getLowestSetBit();
		var g = y.getLowestSetBit();
		if(g < 0) {
			return x;
		}
		if(i < g) {
			g = i;
		}
		if(g > 0) {
			x.rShiftTo(g,x);
			y.rShiftTo(g,y);
		}
		while(x.sigNum() > 0) {
			i = x.getLowestSetBit();
			if(i > 0) {
				x.rShiftTo(i,x);
			}
			i = y.getLowestSetBit();
			if(i > 0) {
				y.rShiftTo(i,y);
			}
			if(x.compareTo(y) >= 0) {
				x.subTo(y,x);
				x.rShiftTo(1,x);
			} else {
				y.subTo(x,y);
				y.rShiftTo(1,y);
			}
		}
		if(g > 0) {
			y.lShiftTo(g,y);
		}
		return y;
	}
	,modInt: function(n) {
		if(n <= 0) {
			return 0;
		}
		var d = com_hurlant_math_BigInteger.DV % n;
		var r = this.s < 0?n - 1:0;
		if(this.t > 0) {
			if(d == 0) {
				r = this.a[0] % n;
			} else {
				var i = this.t - 1;
				while(i >= 0) {
					r = (d * r + this.a[i]) % n;
					--i;
				}
			}
		}
		return r;
	}
	,modInverse: function(m) {
		var ac = m.isEven();
		if(this.isEven() && ac || m.sigNum() == 0) {
			return com_hurlant_math_BigInteger.ZERO;
		}
		var u = m.clone();
		var v = this.clone();
		var a = com_hurlant_math_BigInteger.nbv(1);
		var b = com_hurlant_math_BigInteger.nbv(0);
		var c = com_hurlant_math_BigInteger.nbv(0);
		var d = com_hurlant_math_BigInteger.nbv(1);
		while(u.sigNum() != 0) {
			while(u.isEven()) {
				u.rShiftTo(1,u);
				if(ac) {
					if(!a.isEven() || !b.isEven()) {
						a.addTo(this,a);
						b.subTo(m,b);
					}
					a.rShiftTo(1,a);
				} else if(!b.isEven()) {
					b.subTo(m,b);
				}
				b.rShiftTo(1,b);
			}
			while(v.isEven()) {
				v.rShiftTo(1,v);
				if(ac) {
					if(!c.isEven() || !d.isEven()) {
						c.addTo(this,c);
						d.subTo(m,d);
					}
					c.rShiftTo(1,c);
				} else if(!d.isEven()) {
					d.subTo(m,d);
				}
				d.rShiftTo(1,d);
			}
			if(u.compareTo(v) >= 0) {
				u.subTo(v,u);
				if(ac) {
					a.subTo(c,a);
				}
				b.subTo(d,b);
			} else {
				v.subTo(u,v);
				if(ac) {
					c.subTo(a,c);
				}
				d.subTo(b,d);
			}
		}
		if(v.compareTo(com_hurlant_math_BigInteger.ONE) != 0) {
			return com_hurlant_math_BigInteger.ZERO;
		}
		if(d.compareTo(m) >= 0) {
			return d.subtract(m);
		}
		if(d.sigNum() < 0) {
			d.addTo(m,d);
		} else {
			return d;
		}
		if(d.sigNum() < 0) {
			return d.add(m);
		} else {
			return d;
		}
	}
	,isProbablePrime: function(t) {
		var i;
		var x = this.abs();
		if(x.t == 1 && x.a[0] <= com_hurlant_math_BigInteger.lowprimes[com_hurlant_math_BigInteger.lowprimes.length - 1]) {
			var _g1 = 0;
			var _g = com_hurlant_math_BigInteger.lowprimes.length;
			while(_g1 < _g) {
				var i1 = _g1++;
				if(x.get(0) == com_hurlant_math_BigInteger.lowprimes[i1]) {
					return true;
				}
			}
			return false;
		}
		if(x.isEven()) {
			return false;
		}
		i = 1;
		while(i < com_hurlant_math_BigInteger.lowprimes.length) {
			var m = com_hurlant_math_BigInteger.lowprimes[i];
			var j = i + 1;
			while(j < com_hurlant_math_BigInteger.lowprimes.length && m < com_hurlant_math_BigInteger.lplim) m *= com_hurlant_math_BigInteger.lowprimes[j++];
			m = x.modInt(m);
			while(i < j) if(m % com_hurlant_math_BigInteger.lowprimes[i++] == 0) {
				return false;
			}
		}
		return x.millerRabin(t);
	}
	,millerRabin: function(t) {
		var n1 = this.subtract(com_hurlant_math_BigInteger.ONE);
		var k = n1.getLowestSetBit();
		if(k <= 0) {
			return false;
		}
		var r = n1.shiftRight(k);
		t = t + 1 >> 1;
		if(t > com_hurlant_math_BigInteger.lowprimes.length) {
			t = com_hurlant_math_BigInteger.lowprimes.length;
		}
		var a = new com_hurlant_math_BigInteger();
		var _g1 = 0;
		var _g = t;
		while(_g1 < _g) {
			a.fromInt(com_hurlant_math_BigInteger.lowprimes[_g1++]);
			var y = a.modPow(r,this);
			if(y.compareTo(com_hurlant_math_BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {
				var j = 1;
				while(j++ < k && y.compareTo(n1) != 0) {
					y = y.modPowInt(2,this);
					if(y.compareTo(com_hurlant_math_BigInteger.ONE) == 0) {
						return false;
					}
				}
				if(y.compareTo(n1) != 0) {
					return false;
				}
			}
		}
		return true;
	}
	,primify: function(bits,t) {
		if(!this.testBit(bits - 1)) {
			this.bitwiseTo(com_hurlant_math_BigInteger.ONE.shiftLeft(bits - 1),$bind(this,this.op_or),this);
		}
		if(this.isEven()) {
			this.dAddOffset(1,0);
		}
		while(!this.isProbablePrime(t)) {
			this.dAddOffset(2,0);
			while(this.bitLength() > bits) this.subTo(com_hurlant_math_BigInteger.ONE.shiftLeft(bits - 1),this);
		}
	}
	,__class__: com_hurlant_math_BigInteger
};
var com_hurlant_math_ClassicReduction = function(m) {
	this.m = m;
};
com_hurlant_math_ClassicReduction.__name__ = ["com","hurlant","math","ClassicReduction"];
com_hurlant_math_ClassicReduction.__interfaces__ = [com_hurlant_math_IReduction];
com_hurlant_math_ClassicReduction.prototype = {
	m: null
	,convert: function(x) {
		if(x.s < 0 || x.compareTo(this.m) >= 0) {
			return x.mod(this.m);
		}
		return x;
	}
	,revert: function(x) {
		return x;
	}
	,reduce: function(x) {
		x.divRemTo(this.m,null,x);
	}
	,mulTo: function(x,y,r) {
		x.multiplyTo(y,r);
		this.reduce(r);
	}
	,sqrTo: function(x,r) {
		x.squareTo(r);
		this.reduce(r);
	}
	,__class__: com_hurlant_math_ClassicReduction
};
var com_hurlant_math_MontgomeryReduction = function(m) {
	this.m = m;
	this.mp = m.invDigit();
	this.mpl = this.mp & 32767;
	this.mph = this.mp >> 15;
	this.um = 32767;
	this.mt2 = 2 * m.t;
};
com_hurlant_math_MontgomeryReduction.__name__ = ["com","hurlant","math","MontgomeryReduction"];
com_hurlant_math_MontgomeryReduction.__interfaces__ = [com_hurlant_math_IReduction];
com_hurlant_math_MontgomeryReduction.prototype = {
	m: null
	,mp: null
	,mpl: null
	,mph: null
	,um: null
	,mt2: null
	,convert: function(x) {
		var r = new com_hurlant_math_BigInteger();
		x.abs().dlShiftTo(this.m.t,r);
		r.divRemTo(this.m,null,r);
		if(x.s < 0 && r.compareTo(com_hurlant_math_BigInteger.ZERO) > 0) {
			this.m.subTo(r,r);
		}
		return r;
	}
	,revert: function(x) {
		var r = new com_hurlant_math_BigInteger();
		x.copyTo(r);
		this.reduce(r);
		return r;
	}
	,reduce: function(x) {
		while(x.t <= this.mt2) x.a[x.t++] = 0;
		var _g1 = 0;
		var _g = this.m.t;
		while(_g1 < _g) {
			var i = _g1++;
			var j = x.a[i] & 32767;
			var u0 = j * this.mpl + ((j * this.mph + (x.a[i] >> 15) * this.mpl & this.um) << 15) & com_hurlant_math_BigInteger.DM;
			j = i + this.m.t;
			x.a[j] += this.m.am(0,u0,x,i,0,this.m.t);
			while(x.a[j] >= com_hurlant_math_BigInteger.DV) {
				x.a[j] -= com_hurlant_math_BigInteger.DV;
				x.a[++j]++;
			}
		}
		x.clamp();
		x.drShiftTo(this.m.t,x);
		if(x.compareTo(this.m) >= 0) {
			x.subTo(this.m,x);
		}
	}
	,sqrTo: function(x,r) {
		x.squareTo(r);
		this.reduce(r);
	}
	,mulTo: function(x,y,r) {
		x.multiplyTo(y,r);
		this.reduce(r);
	}
	,__class__: com_hurlant_math_MontgomeryReduction
};
var com_hurlant_math_NullReduction = function() {
};
com_hurlant_math_NullReduction.__name__ = ["com","hurlant","math","NullReduction"];
com_hurlant_math_NullReduction.__interfaces__ = [com_hurlant_math_IReduction];
com_hurlant_math_NullReduction.prototype = {
	revert: function(x) {
		return x;
	}
	,mulTo: function(x,y,r) {
		x.multiplyTo(y,r);
	}
	,sqrTo: function(x,r) {
		x.squareTo(r);
	}
	,convert: function(x) {
		return x;
	}
	,reduce: function(x) {
	}
	,__class__: com_hurlant_math_NullReduction
};
var haxe_unit_TestCase = function() {
};
haxe_unit_TestCase.__name__ = ["haxe","unit","TestCase"];
haxe_unit_TestCase.prototype = {
	currentTest: null
	,setup: function() {
	}
	,tearDown: function() {
	}
	,print: function(v) {
		haxe_unit_TestRunner.print(v);
	}
	,assertTrue: function(b,c) {
		this.currentTest.done = true;
		if(b != true) {
			this.currentTest.success = false;
			this.currentTest.error = "expected true but was false";
			this.currentTest.posInfos = c;
			throw new js__$Boot_HaxeError(this.currentTest);
		}
	}
	,assertFalse: function(b,c) {
		this.currentTest.done = true;
		if(b == true) {
			this.currentTest.success = false;
			this.currentTest.error = "expected false but was true";
			this.currentTest.posInfos = c;
			throw new js__$Boot_HaxeError(this.currentTest);
		}
	}
	,assertEquals: function(expected,actual,c) {
		this.currentTest.done = true;
		if(actual != expected) {
			this.currentTest.success = false;
			this.currentTest.error = "expected '" + Std.string(expected) + "' but was '" + Std.string(actual) + "'";
			this.currentTest.posInfos = c;
			throw new js__$Boot_HaxeError(this.currentTest);
		}
	}
	,__class__: haxe_unit_TestCase
};
var com_hurlant_tests_BaseTestCase = function() {
	haxe_unit_TestCase.call(this);
};
com_hurlant_tests_BaseTestCase.__name__ = ["com","hurlant","tests","BaseTestCase"];
com_hurlant_tests_BaseTestCase.__super__ = haxe_unit_TestCase;
com_hurlant_tests_BaseTestCase.prototype = $extend(haxe_unit_TestCase.prototype,{
	assert: function(a,b) {
		if(b == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,fail: function(msg) {
		throw new js__$Boot_HaxeError(new com_hurlant_util_Error("Not implemented!"));
	}
	,__class__: com_hurlant_tests_BaseTestCase
});
var com_hurlant_tests_HaxeCryptoTests = function() { };
com_hurlant_tests_HaxeCryptoTests.__name__ = ["com","hurlant","tests","HaxeCryptoTests"];
com_hurlant_tests_HaxeCryptoTests.main = function() {
	var tr = new haxe_unit_TestRunner();
	tr.add(new com_hurlant_tests_crypto_hash_HMACTest());
	tr.add(new com_hurlant_tests_crypto_hash_MD2Test());
	tr.add(new com_hurlant_tests_crypto_hash_MD5Test());
	tr.add(new com_hurlant_tests_crypto_hash_SHA1Test());
	tr.add(new com_hurlant_tests_crypto_hash_SHA224Test());
	tr.add(new com_hurlant_tests_crypto_hash_SHA256Test());
	tr.add(new com_hurlant_tests_crypto_prng_ARC4Test());
	tr.add(new com_hurlant_tests_crypto_prng_TLSPRFTest());
	tr.add(new com_hurlant_tests_crypto_symmetric_BlowFishKeyTest());
	tr.add(new com_hurlant_tests_crypto_symmetric_CBCModeTest());
	tr.add(new com_hurlant_tests_crypto_symmetric_CFB8ModeTest());
	tr.add(new com_hurlant_tests_crypto_symmetric_CFBModeTest());
	tr.add(new com_hurlant_tests_crypto_symmetric_CTRModeTest());
	tr.add(new com_hurlant_tests_crypto_symmetric_DESKeyTest());
	tr.add(new com_hurlant_tests_crypto_symmetric_ECBModeTest());
	tr.add(new com_hurlant_tests_crypto_symmetric_OFBModeTest());
	tr.add(new com_hurlant_tests_crypto_symmetric_TripleDESKeyTest());
	tr.add(new com_hurlant_tests_crypto_symmetric_XTeaKeyTest());
	tr.add(new com_hurlant_tests_math_BigIntegerTest());
	tr.add(new com_hurlant_tests_util_ArrayUtilTest());
	tr.add(new com_hurlant_tests_util_Base64Test());
	tr.add(new com_hurlant_tests_util_HexTest());
	tr.add(new com_hurlant_tests_util_Std2Test());
	tr.run();
};
var com_hurlant_tests_crypto_hash_HMACTest = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_hash_HMACTest.__name__ = ["com","hurlant","tests","crypto","hash","HMACTest"];
com_hurlant_tests_crypto_hash_HMACTest.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_hash_HMACTest.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_hmac_sha1: function() {
		var keys = ["0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b",com_hurlant_util_Hex.fromString("Jefe"),"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","0102030405060708090a0b0c0d0e0f10111213141516171819","0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"];
		var pts = [com_hurlant_util_Hex.fromString("Hi There"),com_hurlant_util_Hex.fromString("what do ya want for nothing?"),"dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd","cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd",com_hurlant_util_Hex.fromString("Test With Truncation"),com_hurlant_util_Hex.fromString("Test Using Larger Than Block-Size Key - Hash Key First"),com_hurlant_util_Hex.fromString("Test Using Larger Than Block-Size Key and Larger Than One Block-Size Data")];
		var cts = ["b617318655057264e28bc0b6fb378c8ef146be00","effcdf6ae5eb2fa2d27416d5f184df9c259a7c79","125d7342b9ac11cd91a39af48aa17b4f63f175d3","4c9007f4026250c6bc8414f9bf50c86c2d7235da","4c1a03424b55e07fe7f27be1d58bb9324a9a5a04","aa4ae5e15272d00e95705637ce8a3b55ed402112","e8e99d0f45237d786d6bbaa7965c7808bbff1a91"];
		var hmac = new com_hurlant_crypto_hash_HMAC(new com_hurlant_crypto_hash_SHA1());
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			var a = com_hurlant_util_Hex.fromArray(hmac.compute(com_hurlant_util_Hex.toArray(keys[i]),com_hurlant_util_Hex.toArray(pts[i])));
			var b = cts[i];
			if(b == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,test_hmac96_sha1: function() {
		var a = com_hurlant_util_Hex.fromArray(new com_hurlant_crypto_hash_HMAC(new com_hurlant_crypto_hash_SHA1(),96).compute(com_hurlant_util_Hex.toArray("0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c"),com_hurlant_util_Hex.toArray(com_hurlant_util_Hex.fromString("Test With Truncation"))));
		if("4c1a03424b55e07fe7f27be1" == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,"4c1a03424b55e07fe7f27be1",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,test_hmac_md5: function() {
		var keys = [com_hurlant_util_Hex.fromString("Jefe"),"0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","0102030405060708090a0b0c0d0e0f10111213141516171819","0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"];
		var pts = [com_hurlant_util_Hex.fromString("what do ya want for nothing?"),com_hurlant_util_Hex.fromString("Hi There"),"dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd","cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd",com_hurlant_util_Hex.fromString("Test With Truncation"),com_hurlant_util_Hex.fromString("Test Using Larger Than Block-Size Key - Hash Key First"),com_hurlant_util_Hex.fromString("Test Using Larger Than Block-Size Key and Larger Than One Block-Size Data")];
		var cts = ["750c783e6ab0b503eaa86e310a5db738","9294727a3638bb1c13f48ef8158bfc9d","56be34521d144c88dbb8c733f0e8b3f6","697eaf0aca3a3aea3a75164746ffaa79","56461ef2342edc00f9bab995690efd4c","6b1ab7fe4bd7bf8f0b62e6ce61b9d0cd","6f630fad67cda0ee1fb1f562db3aa53e"];
		var hmac = new com_hurlant_crypto_hash_HMAC(new com_hurlant_crypto_hash_MD5());
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			var a = com_hurlant_util_Hex.fromArray(hmac.compute(com_hurlant_util_Hex.toArray(keys[i]),com_hurlant_util_Hex.toArray(pts[i])));
			var b = cts[i];
			if(b == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,test_hmac96_md5: function() {
		var a = com_hurlant_util_Hex.fromArray(new com_hurlant_crypto_hash_HMAC(new com_hurlant_crypto_hash_MD5(),96).compute(com_hurlant_util_Hex.toArray("0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c"),com_hurlant_util_Hex.toArray(com_hurlant_util_Hex.fromString("Test With Truncation"))));
		if("56461ef2342edc00f9bab995" == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,"56461ef2342edc00f9bab995",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,test_hmac_sha2: function() {
		var keys = ["0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b","4a656665","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","0102030405060708090a0b0c0d0e0f10111213141516171819","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"];
		var pts = ["4869205468657265","7768617420646f2079612077616e7420666f72206e6f7468696e673f","dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd","cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd","54657374205573696e67204c6172676572205468616e20426c6f636b2d53697a65204b6579202d2048617368204b6579204669727374","5468697320697320612074657374207573696e672061206c6172676572207468616e20626c6f636b2d73697a65206b657920616e642061206c6172676572207468616e20626c6f636b2d73697a6520646174612e20546865206b6579206e6565647320746f20626520686173686564206265666f7265206265696e6720757365642062792074686520484d414320616c676f726974686d2e"];
		var cts224 = ["896fb1128abbdf196832107cd49df33f47b4b1169912ba4f53684b22","a30e01098bc6dbbf45690f3a7e9e6d0f8bbea2a39e6148008fd05e44","7fb3cb3588c6c1f6ffa9694d7d6ad2649365b0c1f65d69d1ec8333ea","6c11506874013cac6a2abc1bb382627cec6a90d86efc012de7afec5a","95e9a0db962095adaebe9b2d6f0dbce2d499f112f2d2b7273fa6870e","3a854166ac5d9f023f54d517d0b39dbd946770db9c2b95c9f6f565d1"];
		var cts256 = ["b0344c61d8db38535ca8afceaf0bf12b881dc200c9833da726e9376c2e32cff7","5bdcc146bf60754e6a042426089575c75a003f089d2739839dec58b964ec3843","773ea91e36800e46854db8ebd09181a72959098b3ef8c122d9635514ced565fe","82558a389a443c0ea4cc819899f2083a85f0faa3e578f8077a2e3ff46729665b","60e431591ee0b67f0d8a26aacbf5b77f8e0bc6213728c5140546040f0ee37f54","9b09ffa71b942fcb27635fbcd5b0e944bfdc63644f0713938a7f51535c3a35e2"];
		var hmac224 = new com_hurlant_crypto_hash_HMAC(new com_hurlant_crypto_hash_SHA224());
		var hmac256 = new com_hurlant_crypto_hash_HMAC(new com_hurlant_crypto_hash_SHA256());
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			var key = com_hurlant_util_Hex.toArray(keys[i]);
			var pt = com_hurlant_util_Hex.toArray(pts[i]);
			var a = com_hurlant_util_Hex.fromArray(hmac224.compute(key,pt));
			var b = cts224[i];
			if(b == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
			var a1 = com_hurlant_util_Hex.fromArray(hmac256.compute(key,pt));
			var b1 = cts256[i];
			if(b1 == null) {
				this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,test_hmac128_sha2: function() {
		var hmac224 = new com_hurlant_crypto_hash_HMAC(new com_hurlant_crypto_hash_SHA224(),128);
		var hmac256 = new com_hurlant_crypto_hash_HMAC(new com_hurlant_crypto_hash_SHA256(),128);
		var key = com_hurlant_util_Hex.toArray("0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c");
		var pt = com_hurlant_util_Hex.toArray("546573742057697468205472756e636174696f6e");
		var a = com_hurlant_util_Hex.fromArray(hmac224.compute(key,pt));
		if("0e2aea68a90c8d37c988bcdb9fca6fa8" == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,"0e2aea68a90c8d37c988bcdb9fca6fa8",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		var a1 = com_hurlant_util_Hex.fromArray(hmac256.compute(key,pt));
		if("a3b6167473100ee06e0c796c2955552b" == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,"a3b6167473100ee06e0c796c2955552b",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,__class__: com_hurlant_tests_crypto_hash_HMACTest
});
var com_hurlant_tests_crypto_hash_MD2Test = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_hash_MD2Test.__name__ = ["com","hurlant","tests","crypto","hash","MD2Test"];
com_hurlant_tests_crypto_hash_MD2Test.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_hash_MD2Test.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_md2: function() {
		var srcs = ["",com_hurlant_util_Hex.fromString("a"),com_hurlant_util_Hex.fromString("abc"),com_hurlant_util_Hex.fromString("message digest"),com_hurlant_util_Hex.fromString("abcdefghijklmnopqrstuvwxyz"),com_hurlant_util_Hex.fromString("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"),com_hurlant_util_Hex.fromString("12345678901234567890123456789012345678901234567890123456789012345678901234567890")];
		var hashes = ["8350e5a3e24c153df2275c9f80692773","32ec01ec4a6dac72c0ab96fb34c0b5d1","da853b0d3f88d99b30283a69e6ded6bb","ab4f496bfb2a530b219ff33031fe06b0","4e8ddff3650292ab5a4108c3aa47940b","da33def2a42df13975352846c30338cd","d5976f79d83d3a0dc9806c3c66f3efd8"];
		var md2 = new com_hurlant_crypto_hash_MD2();
		var _g1 = 0;
		var _g = srcs.length;
		while(_g1 < _g) {
			var i = _g1++;
			var a = com_hurlant_util_Hex.fromArray(md2.hash(com_hurlant_util_Hex.toArray(srcs[i])));
			var b = hashes[i];
			if(b == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,__class__: com_hurlant_tests_crypto_hash_MD2Test
});
var com_hurlant_tests_crypto_hash_MD5Test = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_hash_MD5Test.__name__ = ["com","hurlant","tests","crypto","hash","MD5Test"];
com_hurlant_tests_crypto_hash_MD5Test.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_hash_MD5Test.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_md5: function() {
		var srcs = ["",com_hurlant_util_Hex.fromString("a"),com_hurlant_util_Hex.fromString("abc"),com_hurlant_util_Hex.fromString("message digest"),com_hurlant_util_Hex.fromString("abcdefghijklmnopqrstuvwxyz"),com_hurlant_util_Hex.fromString("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"),com_hurlant_util_Hex.fromString("12345678901234567890123456789012345678901234567890123456789012345678901234567890")];
		var hashes = ["d41d8cd98f00b204e9800998ecf8427e","0cc175b9c0f1b6a831c399e269772661","900150983cd24fb0d6963f7d28e17f72","f96b697d7cb7938d525a2f31aaf161d0","c3fcd3d76192e4007dfb496cca67e13b","d174ab98d277d9f5a5611c2c9f419d9f","57edf4a22be3c955ac49da2e2107b67a"];
		var md5 = new com_hurlant_crypto_hash_MD5();
		var _g1 = 0;
		var _g = srcs.length;
		while(_g1 < _g) {
			var i = _g1++;
			var a = com_hurlant_util_Hex.fromArray(md5.hash(com_hurlant_util_Hex.toArray(srcs[i])));
			var b = hashes[i];
			if(b == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,__class__: com_hurlant_tests_crypto_hash_MD5Test
});
var com_hurlant_tests_crypto_hash_SHA1Test = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_hash_SHA1Test.__name__ = ["com","hurlant","tests","crypto","hash","SHA1Test"];
com_hurlant_tests_crypto_hash_SHA1Test.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_hash_SHA1Test.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_sha1: function() {
		var srcs = ["","a8","3000","42749e","9fc3fe08","b5c1c6f1af","e47571e5022e","3e1b28839fb758","a81350cbb224cb90","c243d167923dec3ce1","50ac18c59d6a37a29bf4","98e2b611ad3b1cccf634f6","73fe9afb68e1e8712e5d4eec","9e701ed7d412a9226a2a130e66","6d3ee90413b0a7cbf69e5e6144ca","fae24d56514efcb530fd4802f5e71f","c5a22dd6eda3fe2bdc4ddb3ce6b35fd1","d98cded2adabf08fda356445c781802d95","bcc6d7087a84f00103ccb32e5f5487a751a2","36ecacb1055434190dbbc556c48bafcb0feb0d","5ff9edb69e8f6bbd498eb4537580b7fba7ad31d0","c95b441d8270822a46a798fae5defcf7b26abace36","83104c1d8a55b28f906f1b72cb53f68cbb097b44f860","755175528d55c39c56493d697b790f099a5ce741f7754b","088fc38128bbdb9fd7d65228b3184b3faac6c8715f07272f","a4a586eb9245a6c87e3adf1009ac8a49f46c07e14185016895","8e7c555270c006092c2a3189e2a526b873e2e269f0fb28245256","a5f3bfa6bb0ba3b59f6b9cbdef8a558ec565e8aa3121f405e7f2f0","589054f0d2bd3c2c85b466bfd8ce18e6ec3e0b87d944cd093ba36469","a0abb12083b5bbc78128601bf1cbdbc0fdf4b862b24d899953d8da0ff3","82143f4cea6fadbf998e128a8811dc75301cf1db4f079501ea568da68eeb","9f1231dd6df1ff7bc0b0d4f989d048672683ce35d956d2f57913046267e6f3","041c512b5eed791f80d3282f3a28df263bb1df95e1239a7650e5670fc2187919","17e81f6ae8c2e5579d69dafa6e070e7111461552d314b691e7a3e7a4feb3fae418","d15976b23a1d712ad28fad04d805f572026b54dd64961fda94d5355a0cc98620cf77","09fce4d434f6bd32a44e04b848ff50ec9f642a8a85b37a264dc73f130f22838443328f","f17af27d776ec82a257d8d46d2b46b639462c56984cc1be9c1222eadb8b26594a25c709d","b13ce635d6f8758143ffb114f2f601cb20b6276951416a2f94fbf4ad081779d79f4f195b22","5498793f60916ff1c918dde572cdea76da8629ba4ead6d065de3dfb48de94d234cc1c5002910","498a1e0b39fa49582ae688cd715c86fbaf8a81b8b11b4d1594c49c902d197c8ba8a621fd6e3be5","3a36ae71521f9af628b3e34dcb0d4513f84c78ee49f10416a98857150b8b15cb5c83afb4b570376e","dcc76b40ae0ea3ba253e92ac50fcde791662c5b6c948538cffc2d95e9de99cac34dfca38910db2678f","5b5ec6ec4fd3ad9c4906f65c747fd4233c11a1736b6b228b92e90cddabb0c7c2fcf9716d3fad261dff33","df48a37b29b1d6de4e94717d60cdb4293fcf170bba388bddf7a9035a15d433f20fd697c3e4c8b8c5f590ab","1f179b3b82250a65e1b0aee949e218e2f45c7a8dbfd6ba08de05c55acfc226b48c68d7f7057e5675cd96fcfc","ee3d72da3a44d971578972a8e6780ce64941267e0f7d0179b214fa97855e1790e888e09fbe3a70412176cb3b54","d4d4c7843d312b30f610b3682254c8be96d5f6684503f8fbfbcd15774fc1b084d3741afb8d24aaa8ab9c104f7258","32c094944f5936a190a0877fb9178a7bf60ceae36fd530671c5b38c5dbd5e6a6c0d615c2ac8ad04b213cc589541cf6","e5d3180c14bf27a5409fa12b104a8fd7e9639609bfde6ee82bbf9648be2546d29688a65e2e3f3da47a45ac14343c9c02","e7b6e4b69f724327e41e1188a37f4fe38b1dba19cbf5a7311d6e32f1038e97ab506ee05aebebc1eed09fc0e357109818b9","bc880cb83b8ac68ef2fedc2da95e7677ce2aa18b0e2d8b322701f67af7d5e7a0d96e9e33326ccb7747cfff0852b961bfd475","235ea9c2ba7af25400f2e98a47a291b0bccdaad63faa2475721fda5510cc7dad814bce8dabb611790a6abe56030b798b75c944","07e3e29fed63104b8410f323b975fd9fba53f636af8c4e68a53fb202ca35dd9ee07cb169ec5186292e44c27e5696a967f5e67709","65d2a1dd60a517eb27bfbf530cf6a5458f9d5f4730058bd9814379547f34241822bf67e6335a6d8b5ed06abf8841884c636a25733f","dcc86b3bd461615bab739d8daafac231c0f462e819ad29f9f14058f3ab5b75941d4241ea2f17ebb8a458831b37a9b16dead4a76a9b0e","4627d54f0568dc126b62a8c35fb46a9ac5024400f2995e51635636e1afc4373dbb848eb32df23914230560b82477e9c3572647a7f2bb92","ba531affd4381168ef24d8b275a84d9254c7f5cc55fded53aa8024b2c5c5c8aa7146fe1d1b83d62b70467e9a2e2cb67b3361830adbab28d7","8764dcbcf89dcf4282eb644e3d568bdccb4b13508bfa7bfe0ffc05efd1390be22109969262992d377691eb4f77f3d59ea8466a74abf57b2ef4","497d9df9ddb554f3d17870b1a31986c1be277bc44feff713544217a9f579623d18b5ffae306c25a45521d2759a72c0459b58957255ab592f3be4","72c3c2e065aefa8d9f7a65229e818176eef05da83f835107ba90ec2e95472e73e538f783b416c04654ba8909f26a12db6e5c4e376b7615e4a25819","7cc9894454d0055ab5069a33984e2f712bef7e3124960d33559f5f3b81906bb66fe64da13c153ca7f5cabc89667314c32c01036d12ecaf5f9a78de98","74e8404d5a453c5f4d306f2cfa338ca65501c840ddab3fb82117933483afd6913c56aaf8a0a0a6b2a342fc3d9dc7599f4a850dfa15d06c61966d74ea59","46fe5ed326c8fe376fcc92dc9e2714e2240d3253b105adfbb256ff7a19bc40975c604ad7c0071c4fd78a7cb64786e1bece548fa4833c04065fe593f6fb10","836dfa2524d621cf07c3d2908835de859e549d35030433c796b81272fd8bc0348e8ddbc7705a5ad1fdf2155b6bc48884ac0cd376925f069a37849c089c8645","7e3a4c325cb9c52b88387f93d01ae86d42098f5efa7f9457388b5e74b6d28b2438d42d8b64703324d4aa25ab6aad153ae30cd2b2af4d5e5c00a8a2d0220c6116"];
		var hashes = ["da39a3ee5e6b4b0d3255bfef95601890afd80709","99f2aa95e36f95c2acb0eaf23998f030638f3f15","f944dcd635f9801f7ac90a407fbc479964dec024","a444319e9b6cc1e8464c511ec0969c37d6bb2619","16a0ff84fcc156fd5d3ca3a744f20a232d172253","fec9deebfcdedaf66dda525e1be43597a73a1f93","8ce051181f0ed5e9d0c498f6bc4caf448d20deb5","67da53837d89e03bf652ef09c369a3415937cfd3","305e4ff9888ad855a78573cddf4c5640cce7e946","5902b77b3265f023f9bbc396ba1a93fa3509bde7","fcade5f5d156bf6f9af97bdfa9c19bccfb4ff6ab","1d20fbe00533c10e3cbd6b27088a5de0c632c4b5","7e1b7e0f7a8f3455a9c03e9580fd63ae205a2d93","706f0677146307b20bb0e8d6311e329966884d13","a7241a703aaf0d53fe142f86bf2e849251fa8dff","400f53546916d33ad01a5e6df66822dfbdc4e9e6","fac8ab93c1ae6c16f0311872b984f729dc928ccd","fba6d750c18da58f6e2aab10112b9a5ef3301b3b","29d27c2d44c205c8107f0351b05753ac708226b6","b971bfc1ebd6f359e8d74cb7ecfe7f898d0ba845","96d08c430094b9fcc164ad2fb6f72d0a24268f68","a287ea752a593d5209e287881a09c49fa3f0beb1","a06c713779cbd88519ed4a585ac0cb8a5e9d612b","bff7d52c13a3688132a1d407b1ab40f5b5ace298","c7566b91d7b6f56bdfcaa9781a7b6841aacb17e9","ffa30c0b5c550ea4b1e34f8a60ec9295a1e06ac1","29e66ed23e914351e872aa761df6e4f1a07f4b81","b28cf5e5b806a01491d41f69bd9248765c5dc292","60224fb72c46069652cd78bcd08029ef64da62f3","b72c4a86f72608f24c05f3b9088ef92fba431df7","73779ad5d6b71b9b8328ef7220ff12eb167076ac","a09671d4452d7cf50015c914a1e31973d20cc1a0","e88cdcd233d99184a6fd260b8fca1b7f7687aee0","010def22850deb1168d525e8c84c28116cb8a269","aeaa40ba1717ed5439b1e6ea901b294ba500f9ad","c6433791238795e34f080a5f1f1723f065463ca0","e21e22b89c1bb944a32932e6b2a2f20d491982c3","575323a9661f5d28387964d2ba6ab92c17d05a8a","feb44494af72f245bfe68e86c4d7986d57c11db7","cff2290b3648ba2831b98dde436a72f9ebf51eee","9b4efe9d27b965905b0c3dab67b8d7c9ebacd56c","afedb0ff156205bcd831cbdbda43db8b0588c113","8deb1e858f88293a5e5e4d521a34b2a4efa70fc4","95cbdac0f74afa69cebd0e5c7defbc6faf0cbeaf","f0307bcb92842e5ae0cd4f4f14f3df7f877fbef2","7b13bb0dbf14964bd63b133ac85e22100542ef55","c314d2b6cf439be678d2a74e890d96cfac1c02ed","4d0be361e410b47a9d67d8ce0bb6a8e01c53c078","e5353431ffae097f675cbf498869f6fbb6e1c9f2","b8720a7068a085c018ab18961de2765aa6cd9ac4","b0732181568543ba85f2b6da602b4b065d9931aa","9c22674cf3222c3ba921672694aafee4ce67b96b","d128335f4cecca9066cdae08958ce656ff0b4cfc","0b67c57ac578de88a2ae055caeaec8bb9b0085a0","c766f912a89d4ccda88e0cce6a713ef5f178b596","9aa3925a9dcb177b15ccff9b78e70cf344858779","4811fa30042fc076acf37c8e2274d025307e5943","6743018450c9730761ee2b130df9b91c1e118150","71ad4a19d37d92a5e6ef3694ddbeb5aa61ada645","a7d9dc68dacefb7d6116186048cb355cc548e11d","142e429f0522ba5abf5131fa81df82d355b96909","ef72db70dcbcab991e9637976c6faf00d22caae9","f220a7457f4588d639dc21407c942e9843f8e26b","ddd2117b6e309c233ede85f962a0c2fc215e5c69","a3054427cdb13f164a610b348702724c808a0dcc"];
		var sha1 = new com_hurlant_crypto_hash_SHA1();
		var _g1 = 0;
		var _g = srcs.length;
		while(_g1 < _g) {
			var i = _g1++;
			var a = com_hurlant_util_Hex.fromArray(sha1.hash(com_hurlant_util_Hex.toArray(srcs[i])));
			var b = hashes[i];
			if(b == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,test_longSha1: function() {
		var srcs = ["ec29561244ede706b6eb30a1c371d74450a105c3f9735f7fa9fe38cf67f304a5736a106e92e17139a6813b1c81a4f3d3fb9546ab4296fa9f722826c066869edacd73b2548035185813e22634a9da44000d95a281ff9f264ecce0a931222162d021cca28db5f3c2aa24945ab1e31cb413ae29810fd794cad5dfaf29ec43cb38d198fe4ae1da2359780221405bd6712a5305da4b1b737fce7cd21c0eb7728d08235a9011","5fc2c3f6a7e79dc94be526e5166a238899d54927ce470018fbfd668fd9dd97cbf64e2c91584d01da63be3cc9fdff8adfefc3ac728e1e335b9cdc87f069172e323d094b47fa1e652afe4d6aa147a9f46fda33cacb65f3aa12234746b9007a8c85fe982afed7815221e43dba553d8fe8a022cdac1b99eeeea359e5a9d2e72e382dffa6d19f359f4f27dc3434cd27daeeda8e38594873398678065fbb23665aba9309d946135da0e4a4afdadff14db18e85e71dd93c3bf9faf7f25c8194c4269b1ee3d9934097ab990025d9c3aaf63d5109f52335dd3959d38ae485050e4bbb6235574fc0102be8f7a306d6e8de6ba6becf80f37415b57f9898a5824e77414197422be3d36a6080","0f865f46a8f3aed2da18482aa09a8f390dc9da07d51d1bd10fe0bf5f3928d5927d08733d32075535a6d1c8ac1b2dc6ba0f2f633dc1af68e3f0fa3d85e6c60cb7b56c239dc1519a007ea536a07b518ecca02a6c31b46b76f021620ef3fc6976804018380e5ab9c558ebfc5cb1c9ed2d974722bf8ab6398f1f2b82fa5083f85c16a5767a3a07271d67743f00850ce8ec428c7f22f1cf01f99895c0c844845b06a06cecb0c6cf83eb55a1d4ebc44c2c13f6f7aa5e0e08abfd84e7864279057abc471ee4a45dbbb5774afa24e51791a0eada11093b88681fe30baa3b2e94113dc63342c51ca5d1a6096d0897b626e42cb91761058008f746f35465465540ad8c6b8b60f7e1461b3ce9e6529625984cb8c7d46f07f735be067588a0117f23e34ff57800e2bbe9a1605fde6087fb15d22c5d3ac47566b8c448b0cee40373e5ba6eaa21abee71366afbb27dbbd300477d70c371e7b8963812f5ed4fb784fb2f3bd1d3afe883cdd47ef32beaea","4893f1c763625f2c6ce53aacf28026f14b3cd8687e1a1d3b60a81e80fcd1e2b038f9145ab64a0718f948f7c3c9ac92e3d86fb669a5257da1a18c776291653688338210a3242120f101788e8acc9110db9258b1554bf3d26602516ea93606a25a7f566c0c758fb39ecd9d876bc5d8abc1c3205095382c2474cb1f8bbdb45c2c0e659cb0fc703ec607a5de6bcc7a28687db1ee1c8f34797bb2441d5706d210df8c2d7d65dbded36414d063c117b52a51f7a4eb9cac0782e008b47459ed5acac0bc1f20121087f992ad985511b33c866d18e63f585478ee5a5e654b19d81231d98683ae3f0533565aba43dce408d7e3c4c6be11d8f05165f29c9dcb2030c4ee31d3a04e7421aa92c3231a1fc07e50e95fea7389a5e65891afaba51cf55e36a9d089bf293accb356d5d06547307d6e41456d4ed146a056179971c56521c83109bf922866186e184a99a96c7bb96df8937e35970e438412a2b8d744cf2ad87cb605d4232e976f9f15169776e4e5b6b786132c966b25fc56d815c56c819af5e159aa39f8a93d38115f5580cda93bc073c30b39920e726fe861b72483a3f886269ab7a8eefe952f35d25c4eb7f443f4f3f26e43d51fb54591e6a6dad25fcdf5142033084e5624bdd51435e77dea86b8","cf494c18a4e17bf03910631471bca5ba7edea8b9a63381e3463517961749848eb03abefd4ce676dece3740860255f57c261a558aa9c7f11432f549a9e4ce31d8e17c79450ce2ccfc148ad904aedfb138219d7052088520495355dadd90f72e6f69f9c6176d3d45f113f275b7fbc2a295784d41384cd7d629b23d1459a22e45fd5097ec9bf65fa965d3555ec77367903c32141065fc24da5c56963d46a2da3c279e4035fb2fb1c0025d9dda5b9e3443d457d92401a0d3f58b48469ecb1862dc975cdbe75ca099526db8b0329b03928206f084c633c04eef5e8e377f118d30edf592504be9d2802651ec78aeb02aea167a03fc3e23e5fc907c324f283f89ab37e84687a9c74ccf055402db95c29ba2c8d79b2bd4fa96459f8e3b78e07e923b81198267492196ecb71e01c331f8df245ec5bdf8d0e05c91e63bb299f0f6324895304dda721d39410458f117c87b7dd6a0ee734b79fcbe482b2c9e9aa0cef03a39d4b0c86de3bc34b4aadabfa373fd2258f7c40c187744d237080762382f547a36adb117839ca72f8ebbc5a20a07e86f4c8bb923f5787698d278f6db0040e76e54645bb0f97083995b34b9aa445fc424455058795828dd00c32471ec402a307f5aa1b37b1a86d6dae3bcbfbe9ba41cab0beeabf489af0073d4b3837d3f14b815120bc3602d072b5aeefcdec655fe756b660eba7dcf34675acbce317746270599424b9248791a0780449c1eabbb9459cc1e588bfd74df9b1b711c85c09d8aa171b309281947e8f4b6ac438753158f4f36fa"];
		var hashes = ["970111c4e77bcc88cc20459c02b69b4aa8f58217","0423dc76a8791107d14e13f5265b343f24cc0f19","6692a71d73e00f27df976bc56df4970650d90e45","dc5859dd5163c4354d5d577b855fa98e37f04384","4c17926feb6e87f5bca7890d8a5cde744f231dab"];
		var sha1 = new com_hurlant_crypto_hash_SHA1();
		var _g1 = 0;
		var _g = srcs.length;
		while(_g1 < _g) {
			var i = _g1++;
			var a = com_hurlant_util_Hex.fromArray(sha1.hash(com_hurlant_util_Hex.toArray(srcs[i])));
			var b = hashes[i];
			if(b == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,__class__: com_hurlant_tests_crypto_hash_SHA1Test
});
var com_hurlant_tests_crypto_hash_SHA224Test = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_hash_SHA224Test.__name__ = ["com","hurlant","tests","crypto","hash","SHA224Test"];
com_hurlant_tests_crypto_hash_SHA224Test.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_hash_SHA224Test.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_sha224: function() {
		var srcs = [com_hurlant_util_Hex.fromString("abc"),com_hurlant_util_Hex.fromString("abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq")];
		var hashes = ["23097d223405d8228642a477bda255b32aadbce4bda0b3f7e36c9da7","75388b16512776cc5dba5da1fd890150b0c6455cb4f58b1952522525"];
		var sha224 = new com_hurlant_crypto_hash_SHA224();
		var _g1 = 0;
		var _g = srcs.length;
		while(_g1 < _g) {
			var i = _g1++;
			var a = com_hurlant_util_Hex.fromArray(sha224.hash(com_hurlant_util_Hex.toArray(srcs[i])));
			var b = hashes[i];
			if(b == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,test_longSha224: function() {
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var a = HxOverrides.cca("a",0);
		var _g = 0;
		while(_g < 1000000) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(src,_g++,a);
		var a1 = com_hurlant_util_Hex.fromArray(new com_hurlant_crypto_hash_SHA224().hash(src));
		if("20794655980c91d8bbb4c1ea97618a4bf03f42581948b2ee4ee7ad67" == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,"20794655980c91d8bbb4c1ea97618a4bf03f42581948b2ee4ee7ad67",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,__class__: com_hurlant_tests_crypto_hash_SHA224Test
});
var com_hurlant_tests_crypto_hash_SHA256Test = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_hash_SHA256Test.__name__ = ["com","hurlant","tests","crypto","hash","SHA256Test"];
com_hurlant_tests_crypto_hash_SHA256Test.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_hash_SHA256Test.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_sha256: function() {
		var srcs = [com_hurlant_util_Hex.fromString(""),com_hurlant_util_Hex.fromString("a"),com_hurlant_util_Hex.fromString("abc"),com_hurlant_util_Hex.fromString("message digest"),com_hurlant_util_Hex.fromString("abcdefghijklmnopqrstuvwxyz"),com_hurlant_util_Hex.fromString("abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq"),com_hurlant_util_Hex.fromString("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"),com_hurlant_util_Hex.fromString("12345678901234567890123456789012345678901234567890123456789012345678901234567890")];
		var hashes = ["E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855","CA978112CA1BBDCAFAC231B39A23DC4DA786EFF8147C4E72B9807785AFEE48BB","BA7816BF8F01CFEA414140DE5DAE2223B00361A396177A9CB410FF61F20015AD","F7846F55CF23E14EEBEAB5B4E1550CAD5B509E3348FBC4EFA3A1413D393CB650","71C480DF93D6AE2F1EFAD1447C66C9525E316218CF51FC8D9ED832F2DAF18B73","248D6A61D20638B8E5C026930C3E6039A33CE45964FF2167F6ECEDD419DB06C1","DB4BFCBD4DA0CD85A60C3C37D3FBD8805C77F15FC6B1FDFE614EE0A7C8FDB4C0","F371BC4A311F2B009EEF952DD83CA80E2B60026C8E935592D0F9C308453C813E"];
		var sha256 = new com_hurlant_crypto_hash_SHA256();
		var _g1 = 0;
		var _g = srcs.length;
		while(_g1 < _g) {
			var i = _g1++;
			var a = com_hurlant_util_Hex.fromArray(sha256.hash(com_hurlant_util_Hex.toArray(srcs[i])));
			var b = hashes[i].toLowerCase();
			if(b == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,__class__: com_hurlant_tests_crypto_hash_SHA256Test
});
var com_hurlant_tests_crypto_prng_ARC4Test = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_prng_ARC4Test.__name__ = ["com","hurlant","tests","crypto","prng","ARC4Test"];
com_hurlant_tests_crypto_prng_ARC4Test.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_prng_ARC4Test.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_vectors: function() {
		var keys = [com_hurlant_util_Hex.fromString("Key"),com_hurlant_util_Hex.fromString("Wiki"),com_hurlant_util_Hex.fromString("Secret")];
		var pts = [com_hurlant_util_Hex.fromString("Plaintext"),com_hurlant_util_Hex.fromString("pedia"),com_hurlant_util_Hex.fromString("Attack at dawn")];
		var cts = ["BBF316E8D940AF0AD3","1021BF0420","45A01F645FC35B383552544B9BF5"];
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			var key = com_hurlant_util_Hex.toArray(keys[i]);
			var pt = com_hurlant_util_Hex.toArray(pts[i]);
			var rc4 = new com_hurlant_crypto_prng_ARC4(key);
			rc4.encrypt(pt);
			var out = com_hurlant_util_Hex.fromArray(pt).toUpperCase();
			var a = cts[i];
			if(out == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,out,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
			rc4.init(key);
			rc4.decrypt(pt);
			out = com_hurlant_util_Hex.fromArray(pt);
			var a1 = pts[i];
			if(out == null) {
				this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a1,out,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,__class__: com_hurlant_tests_crypto_prng_ARC4Test
});
var com_hurlant_tests_crypto_prng_TLSPRFTest = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_prng_TLSPRFTest.__name__ = ["com","hurlant","tests","crypto","prng","TLSPRFTest"];
com_hurlant_tests_crypto_prng_TLSPRFTest.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_prng_TLSPRFTest.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_vector: function() {
		var secret = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var _g = 0;
		while(_g < 48) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(secret,_g++,171);
		var seed = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		var _g1 = 0;
		while(_g1 < 64) com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(seed,_g1++,205);
		var prf = new com_hurlant_crypto_prng_TLSPRF(secret,"PRF Testvector",seed);
		var out = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		prf.nextBytes(out,104);
		var expect = com_hurlant_util_Hex.fromArray(com_hurlant_util_Hex.toArray("D3 D4 D1 E3 49 B5 D5 15 04 46 66 D5 1D E3 2B AB" + "25 8C B5 21 B6 B0 53 46 3E 35 48 32 FD 97 67 54" + "44 3B CF 9A 29 65 19 BC 28 9A BC BC 11 87 E4 EB" + "D3 1E 60 23 53 77 6C 40 8A AF B7 4C BC 85 EF F6" + "92 55 F9 78 8F AA 18 4C BB 95 7A 98 19 D8 4A 5D" + "7E B0 06 EB 45 9D 3A E8 DE 98 10 45 4B 8B 2D 8F" + "1A FB C6 55 A8 C9 A0 13"));
		var a = com_hurlant_util_Hex.fromArray(out);
		if(expect == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,expect,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,__class__: com_hurlant_tests_crypto_prng_TLSPRFTest
});
var com_hurlant_tests_crypto_symmetric_BlowFishKeyTest = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_symmetric_BlowFishKeyTest.__name__ = ["com","hurlant","tests","crypto","symmetric","BlowFishKeyTest"];
com_hurlant_tests_crypto_symmetric_BlowFishKeyTest.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_symmetric_BlowFishKeyTest.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_ecb: function() {
		var keys = ["0000000000000000","FFFFFFFFFFFFFFFF","3000000000000000","1111111111111111","0123456789ABCDEF","1111111111111111","0000000000000000","FEDCBA9876543210","7CA110454A1A6E57","0131D9619DC1376E","07A1133E4A0B2686","3849674C2602319E","04B915BA43FEB5B6","0113B970FD34F2CE","0170F175468FB5E6","43297FAD38E373FE","07A7137045DA2A16","04689104C2FD3B2F","37D06BB516CB7546","1F08260D1AC2465E","584023641ABA6176","025816164629B007","49793EBC79B3258F","4FB05E1515AB73A7","49E95D6D4CA229BF","018310DC409B26D6","1C587F1C13924FEF","0101010101010101","1F1F1F1F0E0E0E0E","E0FEE0FEF1FEF1FE","0000000000000000","FFFFFFFFFFFFFFFF","0123456789ABCDEF","FEDCBA9876543210"];
		var pts = ["0000000000000000","FFFFFFFFFFFFFFFF","1000000000000001","1111111111111111","1111111111111111","0123456789ABCDEF","0000000000000000","0123456789ABCDEF","01A1D6D039776742","5CD54CA83DEF57DA","0248D43806F67172","51454B582DDF440A","42FD443059577FA2","059B5E0851CF143A","0756D8E0774761D2","762514B829BF486A","3BDD119049372802","26955F6835AF609A","164D5E404F275232","6B056E18759F5CCA","004BD6EF09176062","480D39006EE762F2","437540C8698F3CFA","072D43A077075292","02FE55778117F12A","1D9D5C5018F728C2","305532286D6F295A","0123456789ABCDEF","0123456789ABCDEF","0123456789ABCDEF","FFFFFFFFFFFFFFFF","0000000000000000","0000000000000000","FFFFFFFFFFFFFFFF"];
		var cts = ["4EF997456198DD78","51866FD5B85ECB8A","7D856F9A613063F2","2466DD878B963C9D","61F9C3802281B096","7D0CC630AFDA1EC7","4EF997456198DD78","0ACEAB0FC6A0A28D","59C68245EB05282B","B1B8CC0B250F09A0","1730E5778BEA1DA4","A25E7856CF2651EB","353882B109CE8F1A","48F4D0884C379918","432193B78951FC98","13F04154D69D1AE5","2EEDDA93FFD39C79","D887E0393C2DA6E3","5F99D04F5B163969","4A057A3B24D3977B","452031C1E4FADA8E","7555AE39F59B87BD","53C55F9CB49FC019","7A8E7BFA937E89A3","CF9C5D7A4986ADB5","D1ABB290658BC778","55CB3774D13EF201","FA34EC4847B268B2","A790795108EA3CAE","C39E072D9FAC631D","014933E0CDAFF6E4","F21E9A77B71C49BC","245946885754369A","6B5C5A9C5D9E0A5A"];
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			var key = com_hurlant_util_Hex.toArray(keys[i]);
			var pt = com_hurlant_util_Hex.toArray(pts[i]);
			var bf = new com_hurlant_crypto_symmetric_BlowFishKey(key);
			bf.encrypt(pt);
			var out = com_hurlant_util_Hex.fromArray(pt).toUpperCase();
			var a = cts[i];
			if(out == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,out,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
			bf.decrypt(pt);
			out = com_hurlant_util_Hex.fromArray(pt).toUpperCase();
			var a1 = pts[i];
			if(out == null) {
				this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a1,out,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,__class__: com_hurlant_tests_crypto_symmetric_BlowFishKeyTest
});
var com_hurlant_tests_crypto_symmetric_CBCModeTest = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_symmetric_CBCModeTest.__name__ = ["com","hurlant","tests","crypto","symmetric","CBCModeTest"];
com_hurlant_tests_crypto_symmetric_CBCModeTest.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_symmetric_CBCModeTest.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_aes128: function() {
		var key = com_hurlant_util_Hex.toArray("2b7e151628aed2a6abf7158809cf4f3c");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172a" + "ae2d8a571e03ac9c9eb76fac45af8e51" + "30c81c46a35ce411e5fbc1191a0a52ef" + "f69f2445df4f9b17ad2b417be66c3710");
		var ct = com_hurlant_util_Hex.toArray("7649abac8119b246cee98e9b12e9197d" + "5086cb9b507219ee95db113a917678b2" + "73bed6b8e3c1743b7116e69e22229516" + "3ff1caa1681fac09120eca307586e1a7");
		var cbc = new com_hurlant_crypto_symmetric_CBCMode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		cbc.set_IV(com_hurlant_util_Hex.toArray("000102030405060708090a0b0c0d0e0f"));
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		cbc.encrypt(src);
		var a = com_hurlant_util_Hex.fromArray(src);
		var b = com_hurlant_util_Hex.fromArray(ct);
		if(b == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		cbc.decrypt(src);
		var a1 = com_hurlant_util_Hex.fromArray(src);
		var b1 = com_hurlant_util_Hex.fromArray(pt);
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,test_aes192: function() {
		var key = com_hurlant_util_Hex.toArray("8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172a" + "ae2d8a571e03ac9c9eb76fac45af8e51" + "30c81c46a35ce411e5fbc1191a0a52ef" + "f69f2445df4f9b17ad2b417be66c3710");
		var ct = com_hurlant_util_Hex.toArray("4f021db243bc633d7178183a9fa071e8" + "b4d9ada9ad7dedf4e5e738763f69145a" + "571b242012fb7ae07fa9baac3df102e0" + "08b0e27988598881d920a9e64f5615cd");
		var cbc = new com_hurlant_crypto_symmetric_CBCMode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		cbc.set_IV(com_hurlant_util_Hex.toArray("000102030405060708090a0b0c0d0e0f"));
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		cbc.encrypt(src);
		var a = com_hurlant_util_Hex.fromArray(src);
		var b = com_hurlant_util_Hex.fromArray(ct);
		if(b == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		cbc.decrypt(src);
		var a1 = com_hurlant_util_Hex.fromArray(src);
		var b1 = com_hurlant_util_Hex.fromArray(pt);
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,test_aes256: function() {
		var key = com_hurlant_util_Hex.toArray("603deb1015ca71be2b73aef0857d7781" + "1f352c073b6108d72d9810a30914dff4");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172a" + "ae2d8a571e03ac9c9eb76fac45af8e51" + "30c81c46a35ce411e5fbc1191a0a52ef" + "f69f2445df4f9b17ad2b417be66c3710");
		var ct = com_hurlant_util_Hex.toArray("f58c4c04d6e5f1ba779eabfb5f7bfbd6" + "9cfc4e967edb808d679f777bc6702c7d" + "39f23369a9d9bacfa530e26304231461" + "b2eb05e2c39be9fcda6c19078c6a9d1b");
		var cbc = new com_hurlant_crypto_symmetric_CBCMode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		cbc.set_IV(com_hurlant_util_Hex.toArray("000102030405060708090a0b0c0d0e0f"));
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		cbc.encrypt(src);
		var a = com_hurlant_util_Hex.fromArray(src);
		var b = com_hurlant_util_Hex.fromArray(ct);
		if(b == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		cbc.decrypt(src);
		var a1 = com_hurlant_util_Hex.fromArray(src);
		var b1 = com_hurlant_util_Hex.fromArray(pt);
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,test_aes: function() {
		var keys = ["00010203050607080A0B0C0D0F101112","14151617191A1B1C1E1F202123242526"];
		var cts = ["D8F532538289EF7D06B506A4FD5BE9C94894C5508A8D8E29AB600DB0261F0555A8FA287B89E65C0973F1F8283E70C72863FE1C8F1F782084CE05626E961A67B3","59AB30F4D4EE6E4FF9907EF65B1FB68C96890CE217689B1BE0C93ED51CF21BB5A0101A8C30714EC4F52DBC9C6F4126067D363F67ABE58463005E679B68F0B496"];
		var pts = ["506812A45F08C889B97F5980038B8359506812A45F08C889B97F5980038B8359506812A45F08C889B97F5980038B8359","5C6D71CA30DE8B8B00549984D2EC7D4B5C6D71CA30DE8B8B00549984D2EC7D4B5C6D71CA30DE8B8B00549984D2EC7D4B"];
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			var key = com_hurlant_util_Hex.toArray(keys[i]);
			var pt = com_hurlant_util_Hex.toArray(pts[i]);
			var cbc = new com_hurlant_crypto_symmetric_CBCMode(new com_hurlant_crypto_symmetric_AESKey(key));
			cbc.set_IV(com_hurlant_util_Hex.toArray("00000000000000000000000000000000"));
			cbc.encrypt(pt);
			var str = com_hurlant_util_Hex.fromArray(pt).toUpperCase();
			var a = cts[i];
			if(str == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,str,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
			cbc.decrypt(pt);
			str = com_hurlant_util_Hex.fromArray(pt).toUpperCase();
			var a1 = pts[i];
			if(str == null) {
				this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a1,str,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,test_xtea: function() {
		var keys = ["00000000000000000000000000000000","2b02056806144976775d0e266c287843"];
		var cts = ["2dc7e8d3695b0538d8f1640d46dca717790af2ab545e11f3b08e798eb3f17b1744299d4d20b534aa","790958213819878370eb8251ffdac371081c5a457fc42502c63910306fea150be8674c3b8e675516"];
		var pts = ["0000000000000000000000000000000000000000000000000000000000000000","74657374206d652e74657374206d652e74657374206d652e74657374206d652e"];
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			var key = com_hurlant_util_Hex.toArray(keys[i]);
			var pt = com_hurlant_util_Hex.toArray(pts[i]);
			var cbc = new com_hurlant_crypto_symmetric_CBCMode(new com_hurlant_crypto_symmetric_XTeaKey(key));
			cbc.set_IV(com_hurlant_util_Hex.toArray("0000000000000000"));
			cbc.encrypt(pt);
			var str = com_hurlant_util_Hex.fromArray(pt);
			var a = cts[i];
			if(str == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,str,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
			cbc.decrypt(pt);
			str = com_hurlant_util_Hex.fromArray(pt);
			var a1 = pts[i];
			if(str == null) {
				this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a1,str,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,__class__: com_hurlant_tests_crypto_symmetric_CBCModeTest
});
var com_hurlant_tests_crypto_symmetric_CFB8ModeTest = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_symmetric_CFB8ModeTest.__name__ = ["com","hurlant","tests","crypto","symmetric","CFB8ModeTest"];
com_hurlant_tests_crypto_symmetric_CFB8ModeTest.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_symmetric_CFB8ModeTest.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	aes128: function() {
		var key = com_hurlant_util_Hex.toArray("2b7e151628aed2a6abf7158809cf4f3c");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172aae2d");
		var ct = com_hurlant_util_Hex.toArray("3b79424c9c0dd436bace9e0ed4586a4f32b9");
		var cfb8 = new com_hurlant_crypto_symmetric_CFB8Mode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		cfb8.set_IV(com_hurlant_util_Hex.toArray("000102030405060708090a0b0c0d0e0f"));
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		cfb8.encrypt(src);
		var a = com_hurlant_util_Hex.fromArray(src);
		var b = com_hurlant_util_Hex.fromArray(ct);
		if(b == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		cfb8.decrypt(src);
		var a1 = com_hurlant_util_Hex.fromArray(src);
		var b1 = com_hurlant_util_Hex.fromArray(pt);
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,aes192: function() {
		var key = com_hurlant_util_Hex.toArray("8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172aae2d");
		var ct = com_hurlant_util_Hex.toArray("cda2521ef0a905ca44cd057cbf0d47a0678a");
		var cfb8 = new com_hurlant_crypto_symmetric_CFB8Mode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		cfb8.set_IV(com_hurlant_util_Hex.toArray("000102030405060708090a0b0c0d0e0f"));
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		cfb8.encrypt(src);
		var a = com_hurlant_util_Hex.fromArray(src);
		var b = com_hurlant_util_Hex.fromArray(ct);
		if(b == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		cfb8.decrypt(src);
		var a1 = com_hurlant_util_Hex.fromArray(src);
		var b1 = com_hurlant_util_Hex.fromArray(pt);
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,aes256: function() {
		var key = com_hurlant_util_Hex.toArray("603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172aae2d");
		var ct = com_hurlant_util_Hex.toArray("dc1f1a8520a64db55fcc8ac554844e889700");
		var cfb8 = new com_hurlant_crypto_symmetric_CFB8Mode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		cfb8.set_IV(com_hurlant_util_Hex.toArray("000102030405060708090a0b0c0d0e0f"));
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		cfb8.encrypt(src);
		var a = com_hurlant_util_Hex.fromArray(src);
		var b = com_hurlant_util_Hex.fromArray(ct);
		if(b == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		cfb8.decrypt(src);
		var a1 = com_hurlant_util_Hex.fromArray(src);
		var b1 = com_hurlant_util_Hex.fromArray(pt);
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,__class__: com_hurlant_tests_crypto_symmetric_CFB8ModeTest
});
var com_hurlant_tests_crypto_symmetric_CFBModeTest = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_symmetric_CFBModeTest.__name__ = ["com","hurlant","tests","crypto","symmetric","CFBModeTest"];
com_hurlant_tests_crypto_symmetric_CFBModeTest.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_symmetric_CFBModeTest.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_aes128: function() {
		var key = com_hurlant_util_Hex.toArray("2b7e151628aed2a6abf7158809cf4f3c");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172a" + "ae2d8a571e03ac9c9eb76fac45af8e51" + "30c81c46a35ce411e5fbc1191a0a52ef" + "f69f2445df4f9b17ad2b417be66c3710");
		var ct = com_hurlant_util_Hex.toArray("3b3fd92eb72dad20333449f8e83cfb4a" + "c8a64537a0b3a93fcde3cdad9f1ce58b" + "26751f67a3cbb140b1808cf187a4f4df" + "c04b05357c5d1c0eeac4c66f9ff7f2e6");
		var cfb = new com_hurlant_crypto_symmetric_CFBMode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		cfb.set_IV(com_hurlant_util_Hex.toArray("000102030405060708090a0b0c0d0e0f"));
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		cfb.encrypt(src);
		var a = com_hurlant_util_Hex.fromArray(src);
		var b = com_hurlant_util_Hex.fromArray(ct);
		if(b == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		cfb.decrypt(src);
		var a1 = com_hurlant_util_Hex.fromArray(src);
		var b1 = com_hurlant_util_Hex.fromArray(pt);
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,test_aes192: function() {
		var key = com_hurlant_util_Hex.toArray("8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172a" + "ae2d8a571e03ac9c9eb76fac45af8e51" + "30c81c46a35ce411e5fbc1191a0a52ef" + "f69f2445df4f9b17ad2b417be66c3710");
		var ct = com_hurlant_util_Hex.toArray("cdc80d6fddf18cab34c25909c99a4174" + "67ce7f7f81173621961a2b70171d3d7a" + "2e1e8a1dd59b88b1c8e60fed1efac4c9" + "c05f9f9ca9834fa042ae8fba584b09ff");
		var cfb = new com_hurlant_crypto_symmetric_CFBMode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		cfb.set_IV(com_hurlant_util_Hex.toArray("000102030405060708090a0b0c0d0e0f"));
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		cfb.encrypt(src);
		var a = com_hurlant_util_Hex.fromArray(src);
		var b = com_hurlant_util_Hex.fromArray(ct);
		if(b == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		cfb.decrypt(src);
		var a1 = com_hurlant_util_Hex.fromArray(src);
		var b1 = com_hurlant_util_Hex.fromArray(pt);
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,test_aes256: function() {
		var key = com_hurlant_util_Hex.toArray("603deb1015ca71be2b73aef0857d7781" + "1f352c073b6108d72d9810a30914dff4");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172a" + "ae2d8a571e03ac9c9eb76fac45af8e51" + "30c81c46a35ce411e5fbc1191a0a52ef" + "f69f2445df4f9b17ad2b417be66c3710");
		var ct = com_hurlant_util_Hex.toArray("dc7e84bfda79164b7ecd8486985d3860" + "39ffed143b28b1c832113c6331e5407b" + "df10132415e54b92a13ed0a8267ae2f9" + "75a385741ab9cef82031623d55b1e471");
		var cfb = new com_hurlant_crypto_symmetric_CFBMode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		cfb.set_IV(com_hurlant_util_Hex.toArray("000102030405060708090a0b0c0d0e0f"));
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		cfb.encrypt(src);
		var a = com_hurlant_util_Hex.fromArray(src);
		var b = com_hurlant_util_Hex.fromArray(ct);
		if(b == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		cfb.decrypt(src);
		var a1 = com_hurlant_util_Hex.fromArray(src);
		var b1 = com_hurlant_util_Hex.fromArray(pt);
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,__class__: com_hurlant_tests_crypto_symmetric_CFBModeTest
});
var com_hurlant_tests_crypto_symmetric_CTRModeTest = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_symmetric_CTRModeTest.__name__ = ["com","hurlant","tests","crypto","symmetric","CTRModeTest"];
com_hurlant_tests_crypto_symmetric_CTRModeTest.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_symmetric_CTRModeTest.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_aes128: function() {
		var key = com_hurlant_util_Hex.toArray("2b7e151628aed2a6abf7158809cf4f3c");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172a" + "ae2d8a571e03ac9c9eb76fac45af8e51" + "30c81c46a35ce411e5fbc1191a0a52ef" + "f69f2445df4f9b17ad2b417be66c3710");
		var ct = com_hurlant_util_Hex.toArray("874d6191b620e3261bef6864990db6ce" + "9806f66b7970fdff8617187bb9fffdff" + "5ae4df3edbd5d35e5b4f09020db03eab" + "1e031dda2fbe03d1792170a0f3009cee");
		var ctr = new com_hurlant_crypto_symmetric_CTRMode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		ctr.set_IV(com_hurlant_util_Hex.toArray("f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff"));
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		ctr.encrypt(src);
		var hsrc = com_hurlant_util_Hex.fromArray(src);
		var hct = com_hurlant_util_Hex.fromArray(ct);
		if(hct == null) {
			this.assertEquals(hsrc,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(hsrc,hct,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		ctr.decrypt(src);
		hsrc = com_hurlant_util_Hex.fromArray(src);
		var hpt = com_hurlant_util_Hex.fromArray(pt);
		if(hpt == null) {
			this.assertEquals(hsrc,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(hsrc,hpt,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,test_aes192: function() {
		var key = com_hurlant_util_Hex.toArray("8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172a" + "ae2d8a571e03ac9c9eb76fac45af8e51" + "30c81c46a35ce411e5fbc1191a0a52ef" + "f69f2445df4f9b17ad2b417be66c3710");
		var ct = com_hurlant_util_Hex.toArray("1abc932417521ca24f2b0459fe7e6e0b" + "090339ec0aa6faefd5ccc2c6f4ce8e94" + "1e36b26bd1ebc670d1bd1d665620abf7" + "4f78a7f6d29809585a97daec58c6b050");
		var ctr = new com_hurlant_crypto_symmetric_CTRMode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		ctr.set_IV(com_hurlant_util_Hex.toArray("f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff"));
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		ctr.encrypt(src);
		var hsrc = com_hurlant_util_Hex.fromArray(src);
		var hct = com_hurlant_util_Hex.fromArray(ct);
		if(hct == null) {
			this.assertEquals(hsrc,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(hsrc,hct,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		ctr.decrypt(src);
		hsrc = com_hurlant_util_Hex.fromArray(src);
		var hpt = com_hurlant_util_Hex.fromArray(pt);
		if(hpt == null) {
			this.assertEquals(hsrc,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(hsrc,hpt,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,test_aes256: function() {
		var key = com_hurlant_util_Hex.toArray("603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172a" + "ae2d8a571e03ac9c9eb76fac45af8e51" + "30c81c46a35ce411e5fbc1191a0a52ef" + "f69f2445df4f9b17ad2b417be66c3710");
		var ct = com_hurlant_util_Hex.toArray("601ec313775789a5b7a7f504bbf3d228" + "f443e3ca4d62b59aca84e990cacaf5c5" + "2b0930daa23de94ce87017ba2d84988d" + "dfc9c58db67aada613c2dd08457941a6");
		var ctr = new com_hurlant_crypto_symmetric_CTRMode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		ctr.set_IV(com_hurlant_util_Hex.toArray("f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff"));
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		ctr.encrypt(src);
		var hsrc = com_hurlant_util_Hex.fromArray(src);
		var hct = com_hurlant_util_Hex.fromArray(ct);
		if(hct == null) {
			this.assertEquals(hsrc,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(hsrc,hct,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		ctr.decrypt(src);
		hsrc = com_hurlant_util_Hex.fromArray(src);
		var hpt = com_hurlant_util_Hex.fromArray(pt);
		if(hpt == null) {
			this.assertEquals(hsrc,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(hsrc,hpt,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,__class__: com_hurlant_tests_crypto_symmetric_CTRModeTest
});
var com_hurlant_tests_crypto_symmetric_DESKeyTest = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_symmetric_DESKeyTest.__name__ = ["com","hurlant","tests","crypto","symmetric","DESKeyTest"];
com_hurlant_tests_crypto_symmetric_DESKeyTest.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_symmetric_DESKeyTest.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_ecb: function() {
		var keys = ["3b3898371520f75e","10316E028C8F3B4A","0101010101010101","0101010101010101","0101010101010101","0101010101010101","0101010101010101","0101010101010101","0101010101010101","0101010101010101","0101010101010101","8001010101010101","4001010101010101","2001010101010101","1001010101010101","0801010101010101","0401010101010101","0201010101010101","0180010101010101","0140010101010101"];
		var pts = ["0000000000000000","0000000000000000","8000000000000000","4000000000000000","2000000000000000","1000000000000000","0800000000000000","0400000000000000","0200000000000000","0100000000000000","0080000000000000","0000000000000000","0000000000000000","0000000000000000","0000000000000000","0000000000000000","0000000000000000","0000000000000000","0000000000000000","0000000000000000"];
		var cts = ["83A1E814889253E0","82DCBAFBDEAB6602","95F8A5E5DD31D900","DD7F121CA5015619","2E8653104F3834EA","4BD388FF6CD81D4F","20B9E767B2FB1456","55579380D77138EF","6CC5DEFAAF04512F","0D9F279BA5D87260","D9031B0271BD5A0A","95A8D72813DAA94D","0EEC1487DD8C26D5","7AD16FFB79C45926","D3746294CA6A6CF3","809F5F873C1FD761","C02FAFFEC989D1FC","4615AA1D33E72F10","2055123350C00858","DF3B99D6577397C8"];
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			var key = com_hurlant_util_Hex.toArray(keys[i]);
			var pt = com_hurlant_util_Hex.toArray(pts[i]);
			var des = new com_hurlant_crypto_symmetric_DESKey(key);
			des.encrypt(pt);
			var out = com_hurlant_util_Hex.fromArray(pt).toUpperCase();
			var a = cts[i];
			if(out == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,out,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
			des.decrypt(pt);
			out = com_hurlant_util_Hex.fromArray(pt).toUpperCase();
			var a1 = pts[i];
			if(out == null) {
				this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a1,out,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,__class__: com_hurlant_tests_crypto_symmetric_DESKeyTest
});
var com_hurlant_tests_crypto_symmetric_ECBModeTest = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_symmetric_ECBModeTest.__name__ = ["com","hurlant","tests","crypto","symmetric","ECBModeTest"];
com_hurlant_tests_crypto_symmetric_ECBModeTest.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_symmetric_ECBModeTest.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_aes128: function() {
		var key = com_hurlant_util_Hex.toArray("2b7e151628aed2a6abf7158809cf4f3c");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172a" + "ae2d8a571e03ac9c9eb76fac45af8e51" + "30c81c46a35ce411e5fbc1191a0a52ef" + "f69f2445df4f9b17ad2b417be66c3710");
		var ct = com_hurlant_util_Hex.toArray("3ad77bb40d7a3660a89ecaf32466ef97" + "f5d3d58503b9699de785895a96fdbaaf" + "43b1cd7f598ece23881b00e3ed030688" + "7b0c785e27e8ad3f8223207104725dd4");
		var ecb = new com_hurlant_crypto_symmetric_ECBMode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		ecb.encrypt(src);
		var a = com_hurlant_util_Hex.fromArray(src);
		var b = com_hurlant_util_Hex.fromArray(ct);
		if(b == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		ecb.decrypt(src);
		var a1 = com_hurlant_util_Hex.fromArray(src);
		var b1 = com_hurlant_util_Hex.fromArray(pt);
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,test_aes192: function() {
		var key = com_hurlant_util_Hex.toArray("8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172a" + "ae2d8a571e03ac9c9eb76fac45af8e51" + "30c81c46a35ce411e5fbc1191a0a52ef" + "f69f2445df4f9b17ad2b417be66c3710");
		var ct = com_hurlant_util_Hex.toArray("bd334f1d6e45f25ff712a214571fa5cc" + "974104846d0ad3ad7734ecb3ecee4eef" + "ef7afd2270e2e60adce0ba2face6444e" + "9a4b41ba738d6c72fb16691603c18e0e");
		var ecb = new com_hurlant_crypto_symmetric_ECBMode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		ecb.encrypt(src);
		var a = com_hurlant_util_Hex.fromArray(src);
		var b = com_hurlant_util_Hex.fromArray(ct);
		if(b == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		ecb.decrypt(src);
		var a1 = com_hurlant_util_Hex.fromArray(src);
		var b1 = com_hurlant_util_Hex.fromArray(pt);
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,test_aes256: function() {
		var key = com_hurlant_util_Hex.toArray("603deb1015ca71be2b73aef0857d7781" + "1f352c073b6108d72d9810a30914dff4");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172a" + "ae2d8a571e03ac9c9eb76fac45af8e51" + "30c81c46a35ce411e5fbc1191a0a52ef" + "f69f2445df4f9b17ad2b417be66c3710");
		var ct = com_hurlant_util_Hex.toArray("f3eed1bdb5d2a03c064b5a7e3db181f8" + "591ccb10d410ed26dc5ba74a31362870" + "b6ed21b99ca6f4f9f153e7b1beafed1d" + "23304b7a39f9f3ff067d8d8f9e24ecc7");
		var ecb = new com_hurlant_crypto_symmetric_ECBMode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		ecb.encrypt(src);
		var a = com_hurlant_util_Hex.fromArray(src);
		var b = com_hurlant_util_Hex.fromArray(ct);
		if(b == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		ecb.decrypt(src);
		var a1 = com_hurlant_util_Hex.fromArray(src);
		var b1 = com_hurlant_util_Hex.fromArray(pt);
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,test_aes: function() {
		var keys = ["00010203050607080A0B0C0D0F101112","14151617191A1B1C1E1F202123242526"];
		var pts = ["506812A45F08C889B97F5980038B8359506812A45F08C889B97F5980038B8359506812A45F08C889B97F5980038B8359","5C6D71CA30DE8B8B00549984D2EC7D4B5C6D71CA30DE8B8B00549984D2EC7D4B5C6D71CA30DE8B8B00549984D2EC7D4B"];
		var cts = ["D8F532538289EF7D06B506A4FD5BE9C9D8F532538289EF7D06B506A4FD5BE9C9D8F532538289EF7D06B506A4FD5BE9C96DE5F607AB7EB8202F3957703B04E8B5","59AB30F4D4EE6E4FF9907EF65B1FB68C59AB30F4D4EE6E4FF9907EF65B1FB68C59AB30F4D4EE6E4FF9907EF65B1FB68C2993487785CB1CFDA6BB4F0F345F76C7"];
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			var key = com_hurlant_util_Hex.toArray(keys[i]);
			var pt = com_hurlant_util_Hex.toArray(pts[i]);
			var ecb = new com_hurlant_crypto_symmetric_ECBMode(new com_hurlant_crypto_symmetric_AESKey(key));
			ecb.encrypt(pt);
			var str = com_hurlant_util_Hex.fromArray(pt).toUpperCase();
			var a = cts[i];
			if(str == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,str,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
			ecb.decrypt(pt);
			str = com_hurlant_util_Hex.fromArray(pt).toUpperCase();
			var a1 = pts[i];
			if(str == null) {
				this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a1,str,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,test_xtea: function() {
		var keys = ["00000000000000000000000000000000","2b02056806144976775d0e266c287843"];
		var pts = ["0000000000000000000000000000000000000000000000000000000000000000","74657374206d652e74657374206d652e74657374206d652e74657374206d652e"];
		var cts = ["2dc7e8d3695b05382dc7e8d3695b05382dc7e8d3695b05382dc7e8d3695b053820578a874233632d","79095821381987837909582138198783790958213819878379095821381987830e4dc3c48b2edf32"];
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			var key = com_hurlant_util_Hex.toArray(keys[i]);
			var pt = com_hurlant_util_Hex.toArray(pts[i]);
			var ecb = new com_hurlant_crypto_symmetric_ECBMode(new com_hurlant_crypto_symmetric_XTeaKey(key));
			ecb.encrypt(pt);
			var str = com_hurlant_util_Hex.fromArray(pt);
			var a = cts[i];
			if(str == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,str,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
			ecb.decrypt(pt);
			str = com_hurlant_util_Hex.fromArray(pt);
			var a1 = pts[i];
			if(str == null) {
				this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a1,str,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,__class__: com_hurlant_tests_crypto_symmetric_ECBModeTest
});
var com_hurlant_tests_crypto_symmetric_OFBModeTest = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_symmetric_OFBModeTest.__name__ = ["com","hurlant","tests","crypto","symmetric","OFBModeTest"];
com_hurlant_tests_crypto_symmetric_OFBModeTest.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_symmetric_OFBModeTest.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_aes128: function() {
		var key = com_hurlant_util_Hex.toArray("2b7e151628aed2a6abf7158809cf4f3c");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172a" + "ae2d8a571e03ac9c9eb76fac45af8e51" + "30c81c46a35ce411e5fbc1191a0a52ef" + "f69f2445df4f9b17ad2b417be66c3710");
		var ct = com_hurlant_util_Hex.toArray("3b3fd92eb72dad20333449f8e83cfb4a" + "7789508d16918f03f53c52dac54ed825" + "9740051e9c5fecf64344f7a82260edcc" + "304c6528f659c77866a510d9c1d6ae5e");
		var ofb = new com_hurlant_crypto_symmetric_OFBMode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		ofb.set_IV(com_hurlant_util_Hex.toArray("000102030405060708090a0b0c0d0e0f"));
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		ofb.encrypt(src);
		var a = com_hurlant_util_Hex.fromArray(src);
		var b = com_hurlant_util_Hex.fromArray(ct);
		if(b == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		ofb.decrypt(src);
		var a1 = com_hurlant_util_Hex.fromArray(src);
		var b1 = com_hurlant_util_Hex.fromArray(pt);
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,test_aes192: function() {
		var key = com_hurlant_util_Hex.toArray("8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172a" + "ae2d8a571e03ac9c9eb76fac45af8e51" + "30c81c46a35ce411e5fbc1191a0a52ef" + "f69f2445df4f9b17ad2b417be66c3710");
		var ct = com_hurlant_util_Hex.toArray("cdc80d6fddf18cab34c25909c99a4174" + "fcc28b8d4c63837c09e81700c1100401" + "8d9a9aeac0f6596f559c6d4daf59a5f2" + "6d9f200857ca6c3e9cac524bd9acc92a");
		var ofb = new com_hurlant_crypto_symmetric_OFBMode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		ofb.set_IV(com_hurlant_util_Hex.toArray("000102030405060708090a0b0c0d0e0f"));
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		ofb.encrypt(src);
		var a = com_hurlant_util_Hex.fromArray(src);
		var b = com_hurlant_util_Hex.fromArray(ct);
		if(b == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		ofb.decrypt(src);
		var a1 = com_hurlant_util_Hex.fromArray(src);
		var b1 = com_hurlant_util_Hex.fromArray(pt);
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,test_aes256: function() {
		var key = com_hurlant_util_Hex.toArray("603deb1015ca71be2b73aef0857d7781" + "1f352c073b6108d72d9810a30914dff4");
		var pt = com_hurlant_util_Hex.toArray("6bc1bee22e409f96e93d7e117393172a" + "ae2d8a571e03ac9c9eb76fac45af8e51" + "30c81c46a35ce411e5fbc1191a0a52ef" + "f69f2445df4f9b17ad2b417be66c3710");
		var ct = com_hurlant_util_Hex.toArray("dc7e84bfda79164b7ecd8486985d3860" + "4febdc6740d20b3ac88f6ad82a4fb08d" + "71ab47a086e86eedf39d1c5bba97c408" + "0126141d67f37be8538f5a8be740e484");
		var ofb = new com_hurlant_crypto_symmetric_OFBMode(new com_hurlant_crypto_symmetric_AESKey(key),new com_hurlant_crypto_symmetric_NullPad());
		ofb.set_IV(com_hurlant_util_Hex.toArray("000102030405060708090a0b0c0d0e0f"));
		var src = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeBytes(src,pt);
		ofb.encrypt(src);
		var a = com_hurlant_util_Hex.fromArray(src);
		var b = com_hurlant_util_Hex.fromArray(ct);
		if(b == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		ofb.decrypt(src);
		var a1 = com_hurlant_util_Hex.fromArray(src);
		var b1 = com_hurlant_util_Hex.fromArray(pt);
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,__class__: com_hurlant_tests_crypto_symmetric_OFBModeTest
});
var com_hurlant_tests_crypto_symmetric_TripleDESKeyTest = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_symmetric_TripleDESKeyTest.__name__ = ["com","hurlant","tests","crypto","symmetric","TripleDESKeyTest"];
com_hurlant_tests_crypto_symmetric_TripleDESKeyTest.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_symmetric_TripleDESKeyTest.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_ecb: function() {
		var keys = ["010101010101010101010101010101010101010101010101","dd24b3aafcc69278d650dad234956b01e371384619492ac4"];
		var pts = ["8000000000000000","F36B21045A030303"];
		var cts = ["95F8A5E5DD31D900","E823A43DEEA4D0A4"];
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			var key = com_hurlant_util_Hex.toArray(keys[i]);
			var pt = com_hurlant_util_Hex.toArray(pts[i]);
			var ede = new com_hurlant_crypto_symmetric_TripleDESKey(key);
			ede.encrypt(pt);
			var out = com_hurlant_util_Hex.fromArray(pt).toUpperCase();
			var a = cts[i];
			if(out == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,out,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
			ede.decrypt(pt);
			out = com_hurlant_util_Hex.fromArray(pt).toUpperCase();
			var a1 = pts[i];
			if(out == null) {
				this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a1,out,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,__class__: com_hurlant_tests_crypto_symmetric_TripleDESKeyTest
});
var com_hurlant_tests_crypto_symmetric_XTeaKeyTest = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_crypto_symmetric_XTeaKeyTest.__name__ = ["com","hurlant","tests","crypto","symmetric","XTeaKeyTest"];
com_hurlant_tests_crypto_symmetric_XTeaKeyTest.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_crypto_symmetric_XTeaKeyTest.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_getBlockSize: function() {
		var a = new com_hurlant_crypto_symmetric_XTeaKey(com_hurlant_util_Hex.toArray("deadbabecafebeefdeadbabecafebeef")).getBlockSize();
		this.assertEquals(a,8,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
	}
	,test_vectors: function() {
		var keys = ["00000000000000000000000000000000","2b02056806144976775d0e266c287843"];
		var pts = ["0000000000000000","74657374206d652e"];
		var cts = ["2dc7e8d3695b0538","7909582138198783"];
		var _g1 = 0;
		var _g = keys.length;
		while(_g1 < _g) {
			var i = _g1++;
			var key = com_hurlant_util_Hex.toArray(keys[i]);
			var pt = com_hurlant_util_Hex.toArray(pts[i]);
			var tea = new com_hurlant_crypto_symmetric_XTeaKey(key);
			tea.encrypt(pt);
			var out = com_hurlant_util_Hex.fromArray(pt);
			var a = cts[i];
			if(out == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,out,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
			com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(pt,0);
			tea.decrypt(pt);
			out = com_hurlant_util_Hex.fromArray(pt);
			var a1 = pts[i];
			if(out == null) {
				this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a1,out,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
	}
	,__class__: com_hurlant_tests_crypto_symmetric_XTeaKeyTest
});
var com_hurlant_tests_math_BigIntegerTest = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_math_BigIntegerTest.__name__ = ["com","hurlant","tests","math","BigIntegerTest"];
com_hurlant_tests_math_BigIntegerTest.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_math_BigIntegerTest.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_add: function() {
		var a = com_hurlant_math_BigInteger.nbv(25).add(com_hurlant_math_BigInteger.nbv(1002)).valueOf();
		this.assertEquals(a,1027,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		var p = new com_hurlant_math_BigInteger("e564d8b801a61f47",16,true);
		var xp = new com_hurlant_math_BigInteger("99246db2a3507fa",16,true);
		xp = xp.add(p);
		var a1 = Std.string(xp);
		this.assertEquals(a1,"eef71f932bdb2741",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
	}
	,test_signed: function() {
		var i3 = new com_hurlant_math_BigInteger("1").subtract(new com_hurlant_math_BigInteger("2"));
		var arr_i3 = i3.toByteArray();
		var i4 = new com_hurlant_math_BigInteger(arr_i3);
		var arr_i4 = i4.toByteArray();
		var a = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(arr_i3);
		this.assertEquals(a,1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		var a1 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(arr_i4);
		this.assertEquals(a1,1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		var a2 = i3.equals(i4);
		var b = null;
		if(b == null) {
			this.assertEquals(a2,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a2,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,test_signed2: function() {
		var a = com_hurlant_math_BigInteger.nbv(-13).valueOf();
		this.assertEquals(a,-13,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
	}
	,test_toAndFromString: function() {
		var a = new com_hurlant_math_BigInteger("1",10);
		var a1 = Std.string(a);
		this.assertEquals(a1,"1",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		a = new com_hurlant_math_BigInteger("112374128763487126349871263984761238",10);
		var a2 = Std.string(a);
		this.assertEquals(a2,"112374128763487126349871263984761238",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		a = new com_hurlant_math_BigInteger("0",10);
		var a3 = Std.string(a);
		this.assertEquals(a3,"0",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		a = new com_hurlant_math_BigInteger("-1",10);
		var a4 = Std.string(a);
		this.assertEquals(a4,"-1",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		a = new com_hurlant_math_BigInteger("-987341928347812763498237649812763498172634",10);
		var a5 = Std.string(a);
		this.assertEquals(a5,"-987341928347812763498237649812763498172634",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		a = new com_hurlant_math_BigInteger("0xffff",16,true);
		var a6 = Std.string(a);
		this.assertEquals(a6,"65535",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		var a7 = Std.string(a);
		this.assertEquals(a7,"ffff",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
	}
	,test_compareTo: function() {
		var a;
		var b;
		a = new com_hurlant_math_BigInteger("983741897234",10);
		b = new com_hurlant_math_BigInteger("123981238416",10);
		var a1 = a.compareTo(b) > 0;
		var b1 = null;
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		a = new com_hurlant_math_BigInteger("-1",10);
		b = new com_hurlant_math_BigInteger("1",10);
		var a2 = a.compareTo(b) < 0;
		var b2 = null;
		if(b2 == null) {
			this.assertEquals(a2,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a2,b2,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		a = new com_hurlant_math_BigInteger("1",10);
		b = new com_hurlant_math_BigInteger("-1",10);
		var a3 = a.compareTo(b) > 0;
		var b3 = null;
		if(b3 == null) {
			this.assertEquals(a3,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a3,b3,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		a = new com_hurlant_math_BigInteger("1",10);
		b = new com_hurlant_math_BigInteger("1",10);
		var a4 = a.compareTo(b);
		this.assertEquals(a4,0,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		a = new com_hurlant_math_BigInteger("0",10);
		b = new com_hurlant_math_BigInteger("0",10);
		var a5 = a.compareTo(b);
		this.assertEquals(a5,0,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		a = new com_hurlant_math_BigInteger("-12461273864",10);
		b = new com_hurlant_math_BigInteger("29138479128374",10);
		var a6 = a.compareTo(b) < 0;
		var b4 = null;
		if(b4 == null) {
			this.assertEquals(a6,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a6,b4,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		a = new com_hurlant_math_BigInteger("9223372036854775807",10);
		b = new com_hurlant_math_BigInteger("-9223372036854775808",10);
		var a7 = a.compareTo(b) > 0;
		var b5 = null;
		if(b5 == null) {
			this.assertEquals(a7,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a7,b5,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		a = new com_hurlant_math_BigInteger("-1",10);
		b = new com_hurlant_math_BigInteger("-9223372036854775808",10);
		var a8 = a.compareTo(b) > 0;
		var b6 = null;
		if(b6 == null) {
			this.assertEquals(a8,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a8,b6,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		a = new com_hurlant_math_BigInteger("-1",10);
		b = new com_hurlant_math_BigInteger("9223372036854775807",10);
		var a9 = a.compareTo(b) < 0;
		var b7 = null;
		if(b7 == null) {
			this.assertEquals(a9,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a9,b7,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,test_toAndFromByteArray: function() {
		var a;
		var b;
		a = new com_hurlant_math_BigInteger("0",10);
		b = a.toByteArray();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(b,0);
		var a1 = Std.string(new com_hurlant_math_BigInteger(b,0));
		this.assertEquals(a1,"0",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		a = new com_hurlant_math_BigInteger("1",10);
		b = a.toByteArray();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(b,0);
		var a2 = Std.string(new com_hurlant_math_BigInteger(b,0));
		this.assertEquals(a2,"1",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		a = new com_hurlant_math_BigInteger("-1",10);
		b = a.toByteArray();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(b,0);
		var a3 = Std.string(new com_hurlant_math_BigInteger(b,0));
		this.assertEquals(a3,"-1",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		a = new com_hurlant_math_BigInteger("123469827364987236498234",10);
		b = a.toByteArray();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(b,0);
		var a4 = Std.string(new com_hurlant_math_BigInteger(b,0));
		this.assertEquals(a4,"123469827364987236498234",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		a = new com_hurlant_math_BigInteger("-298471293048701923847",10);
		b = a.toByteArray();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(b,0);
		var a5 = Std.string(new com_hurlant_math_BigInteger(b,0));
		this.assertEquals(a5,"-298471293048701923847",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
	}
	,__class__: com_hurlant_tests_math_BigIntegerTest
});
var com_hurlant_tests_util_ArrayUtilTest = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_util_ArrayUtilTest.__name__ = ["com","hurlant","tests","util","ArrayUtilTest"];
com_hurlant_tests_util_ArrayUtilTest.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_util_ArrayUtilTest.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_equals: function() {
		var a = com_hurlant_util_Hex.toArray("BADA5500");
		var b = com_hurlant_util_Hex.toArray("BADA5500");
		var c = com_hurlant_util_Hex.toArray("B00B00");
		var a1 = com_hurlant_util_ArrayUtil.equals(a,b);
		var b1 = null;
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		var a2 = !com_hurlant_util_ArrayUtil.equals(a,c);
		var b2 = null;
		if(b2 == null) {
			this.assertEquals(a2,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a2,b2,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,__class__: com_hurlant_tests_util_ArrayUtilTest
});
var com_hurlant_tests_util_Base64Test = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_util_Base64Test.__name__ = ["com","hurlant","tests","util","Base64Test"];
com_hurlant_tests_util_Base64Test.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_util_Base64Test.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_vectors: function() {
		var srcs = ["","f","fo","foo","foob","fooba","foobar","pleasure.","leasure.","easure.","asure.","sure.","Man is distinguished, not only by his reason, " + "but by this singular passion from other animals, " + "which is a lust of the mind, that by a perseverance " + "of delight in the continued and indefatigable generation " + "of knowledge, exceeds the short vehemence of any carnal pleasure.","¢€𝇇"];
		var encs = ["","Zg==","Zm8=","Zm9v","Zm9vYg==","Zm9vYmE=","Zm9vYmFy","cGxlYXN1cmUu","bGVhc3VyZS4=","ZWFzdXJlLg==","YXN1cmUu","c3VyZS4=","TWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyByZWFzb24sIGJ1dCBieSB0aGlz" + "IHNpbmd1bGFyIHBhc3Npb24gZnJvbSBvdGhlciBhbmltYWxzLCB3aGljaCBpcyBhIGx1c3Qgb2Yg" + "dGhlIG1pbmQsIHRoYXQgYnkgYSBwZXJzZXZlcmFuY2Ugb2YgZGVsaWdodCBpbiB0aGUgY29udGlu" + "dWVkIGFuZCBpbmRlZmF0aWdhYmxlIGdlbmVyYXRpb24gb2Yga25vd2xlZGdlLCBleGNlZWRzIHRo" + "ZSBzaG9ydCB2ZWhlbWVuY2Ugb2YgYW55IGNhcm5hbCBwbGVhc3VyZS4=","wqLigqzwnYeH"];
		var _g1 = 0;
		var _g = srcs.length;
		while(_g1 < _g) {
			var i = _g1++;
			var a = com_hurlant_util_Base64.encode(srcs[i]);
			var b = encs[i];
			if(b == null) {
				this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
			var a1 = com_hurlant_util_Base64.decode(encs[i]);
			var b1 = srcs[i];
			if(b1 == null) {
				this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
			var src = com_hurlant_util_Hex.toArray(com_hurlant_util_Hex.fromString(srcs[i]));
			var a2 = com_hurlant_util_Base64.encodeByteArray(src);
			var b2 = encs[i];
			if(b2 == null) {
				this.assertEquals(a2,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a2,b2,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
			var a3 = com_hurlant_util_ArrayUtil.equals(com_hurlant_util_Base64.decodeToByteArray(encs[i]),src);
			var b3 = null;
			if(b3 == null) {
				this.assertEquals(a3,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			} else {
				this.assertEquals(a3,b3,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
			}
		}
		var a4 = com_hurlant_util_Base64.decode("Zm9v^^YmFy");
		this.assertEquals(a4,"foo",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		var a5 = com_hurlant_util_ArrayUtil.equals(com_hurlant_util_Base64.decodeToByteArray("Zm9v^^YmFy"),com_hurlant_util_Hex.toArray(com_hurlant_util_Hex.fromString("foo")));
		var b4 = null;
		if(b4 == null) {
			this.assertEquals(a5,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a5,b4,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,__class__: com_hurlant_tests_util_Base64Test
});
var com_hurlant_tests_util_HexTest = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_util_HexTest.__name__ = ["com","hurlant","tests","util","HexTest"];
com_hurlant_tests_util_HexTest.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_util_HexTest.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_toArray: function() {
		var ba = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeByte(ba,0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeByte(ba,186);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeByte(ba,218);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeByte(ba,85);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeByte(ba,0);
		var a = com_hurlant_util_ArrayUtil.equals(com_hurlant_util_Hex.toArray("00bada5500"),ba);
		var b = null;
		if(b == null) {
			this.assertEquals(a,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a,b,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		var a1 = com_hurlant_util_ArrayUtil.equals(com_hurlant_util_Hex.toArray("00BADA5500"),ba);
		var b1 = null;
		if(b1 == null) {
			this.assertEquals(a1,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a1,b1,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		var a2 = com_hurlant_util_ArrayUtil.equals(com_hurlant_util_Hex.toArray("0BADA5500"),ba);
		var b2 = null;
		if(b2 == null) {
			this.assertEquals(a2,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a2,b2,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		var a3 = com_hurlant_util_ArrayUtil.equals(com_hurlant_util_Hex.toArray("0x00BADA5500"),ba);
		var b3 = null;
		if(b3 == null) {
			this.assertEquals(a3,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a3,b3,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		var a4 = com_hurlant_util_ArrayUtil.equals(com_hurlant_util_Hex.toArray("00:BA:DA:55:00"),ba);
		var b4 = null;
		if(b4 == null) {
			this.assertEquals(a4,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a4,b4,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
		var a5 = com_hurlant_util_ArrayUtil.equals(com_hurlant_util_Hex.toArray("00 BA DA 55 00"),ba);
		var b5 = null;
		if(b5 == null) {
			this.assertEquals(a5,true,{ fileName : "BaseTestCase.hx", lineNumber : 11, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		} else {
			this.assertEquals(a5,b5,{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		}
	}
	,test_fromArray: function() {
		var ba = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeByte(ba,0);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeByte(ba,186);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeByte(ba,218);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeByte(ba,85);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeByte(ba,0);
		var a = com_hurlant_util_Hex.fromArray(ba);
		this.assertEquals(a,"00bada5500",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
	}
	,test_toString: function() {
		var a = Std.string(com_hurlant_util_Hex);
		this.assertEquals(a,"as3crypto",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		var a1 = Std.string(com_hurlant_util_Hex);
		this.assertEquals(a1,"⸮",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		var a2 = com_hurlant_util_Hex.toRawString("e2b8ae");
		this.assertEquals(a2,"â¸®",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
	}
	,test_fromString: function() {
		var a = com_hurlant_util_Hex.fromString("as3crypto");
		this.assertEquals(a,"61733363727970746f",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		var a1 = com_hurlant_util_Hex.fromString("⸮");
		this.assertEquals(a1,"e2b8ae",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
		var a2 = com_hurlant_util_Hex.fromRawString("â¸®");
		this.assertEquals(a2,"e2b8ae",{ fileName : "BaseTestCase.hx", lineNumber : 13, className : "com.hurlant.tests.BaseTestCase", methodName : "assert"});
	}
	,__class__: com_hurlant_tests_util_HexTest
});
var com_hurlant_tests_util_Std2Test = function() {
	com_hurlant_tests_BaseTestCase.call(this);
};
com_hurlant_tests_util_Std2Test.__name__ = ["com","hurlant","tests","util","Std2Test"];
com_hurlant_tests_util_Std2Test.__super__ = com_hurlant_tests_BaseTestCase;
com_hurlant_tests_util_Std2Test.prototype = $extend(com_hurlant_tests_BaseTestCase.prototype,{
	test_parseInt: function() {
		this.assertEquals(255,com_hurlant_util_Std2.parseInt("FF",16),{ fileName : "Std2Test.hx", lineNumber : 8, className : "com.hurlant.tests.util.Std2Test", methodName : "test_parseInt"});
		this.assertEquals(-255,com_hurlant_util_Std2.parseInt("-FF",16),{ fileName : "Std2Test.hx", lineNumber : 9, className : "com.hurlant.tests.util.Std2Test", methodName : "test_parseInt"});
	}
	,__class__: com_hurlant_tests_util_Std2Test
});
var com_hurlant_util_ArrayUtil = function() { };
com_hurlant_util_ArrayUtil.__name__ = ["com","hurlant","util","ArrayUtil"];
com_hurlant_util_ArrayUtil.equals = function(a1,a2) {
	if(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(a1) != com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(a2)) {
		return false;
	}
	var _g1 = 0;
	var _g = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(a1);
	while(_g1 < _g) {
		var i = _g1++;
		if(com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(a1,i) != com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(a2,i)) {
			return false;
		}
	}
	return true;
};
var com_hurlant_util_Base64 = function() {
};
com_hurlant_util_Base64.__name__ = ["com","hurlant","util","Base64"];
com_hurlant_util_Base64.encode = function(data) {
	var bytes = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeUTFBytes(bytes,data);
	return com_hurlant_util_Base64.encodeByteArray(bytes);
};
com_hurlant_util_Base64.decode = function(data) {
	var bytes = com_hurlant_util_Base64.decodeToByteArray(data);
	return com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUTFBytes(bytes,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(bytes));
};
com_hurlant_util_Base64.encodeByteArray = function(data) {
	var out = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(out,(2 + com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(data) - (com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(data) + 2) % 3) * 4 / 3 | 0);
	var i = 0;
	var r = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(data) % 3;
	var len = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(data) - r;
	var c;
	var outPos = 0;
	while(i < len) {
		c = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(data,i++) << 16 | com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(data,i++) << 8 | com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(data,i++);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outPos++,com_hurlant_util_Base64._encodeChars[c >>> 18]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outPos++,com_hurlant_util_Base64._encodeChars[c >>> 12 & 63]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outPos++,com_hurlant_util_Base64._encodeChars[c >>> 6 & 63]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outPos++,com_hurlant_util_Base64._encodeChars[c & 63]);
	}
	if(r == 1) {
		c = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(data,i);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outPos++,com_hurlant_util_Base64._encodeChars[c >>> 2]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outPos++,com_hurlant_util_Base64._encodeChars[(c & 3) << 4]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outPos++,61);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outPos++,61);
	} else if(r == 2) {
		c = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(data,i++) << 8 | com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(data,i);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outPos++,com_hurlant_util_Base64._encodeChars[c >>> 10]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outPos++,com_hurlant_util_Base64._encodeChars[c >>> 4 & 63]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outPos++,com_hurlant_util_Base64._encodeChars[(c & 15) << 2]);
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(out,outPos++,61);
	}
	return com_hurlant_util__$ByteArray_ByteArray_$Impl_$.readUTFBytes(out,com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get_length(out));
};
com_hurlant_util_Base64.decodeToByteArray = function(str) {
	var c1;
	var c2;
	var c3;
	var c4;
	var i = 0;
	var len = str.length;
	var byteString = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeUTFBytes(byteString,str);
	var outPos = 0;
	while(i < len) {
		c1 = com_hurlant_util_Base64._decodeChars[com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(byteString,i++)];
		if(c1 == -1) {
			break;
		}
		c2 = com_hurlant_util_Base64._decodeChars[com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(byteString,i++)];
		if(c2 == -1) {
			break;
		}
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(byteString,outPos++,c1 << 2 | (c2 & 48) >> 4);
		c3 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(byteString,i++);
		if(c3 == 61) {
			break;
		}
		c3 = com_hurlant_util_Base64._decodeChars[c3];
		if(c3 == -1) {
			break;
		}
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(byteString,outPos++,(c2 & 15) << 4 | (c3 & 60) >> 2);
		c4 = com_hurlant_util__$ByteArray_ByteArray_$Impl_$.get(byteString,i++);
		if(c4 == 61) {
			break;
		}
		c4 = com_hurlant_util_Base64._decodeChars[c4];
		if(c4 == -1) {
			break;
		}
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set(byteString,outPos++,(c3 & 3) << 6 | c4);
	}
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_length(byteString,outPos);
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(byteString,0);
	return byteString;
};
com_hurlant_util_Base64.decodeToByteArrayB = function(str) {
	return com_hurlant_util_Base64.decodeToByteArray(str);
};
com_hurlant_util_Base64._initEncoreChar = function() {
	var encodeChars = [];
	var _g = 0;
	while(_g < 64) {
		var i = _g++;
		encodeChars[i] = HxOverrides.cca("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i);
	}
	return encodeChars;
};
com_hurlant_util_Base64._initDecodeChar = function() {
	return [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];
};
com_hurlant_util_Base64.prototype = {
	__class__: com_hurlant_util_Base64
};
var com_hurlant_util_Endian = { __ename__ : true, __constructs__ : ["LITTLE_ENDIAN","BIG_ENDIAN"] };
com_hurlant_util_Endian.LITTLE_ENDIAN = ["LITTLE_ENDIAN",0];
com_hurlant_util_Endian.LITTLE_ENDIAN.toString = $estr;
com_hurlant_util_Endian.LITTLE_ENDIAN.__enum__ = com_hurlant_util_Endian;
com_hurlant_util_Endian.BIG_ENDIAN = ["BIG_ENDIAN",1];
com_hurlant_util_Endian.BIG_ENDIAN.toString = $estr;
com_hurlant_util_Endian.BIG_ENDIAN.__enum__ = com_hurlant_util_Endian;
var com_hurlant_util_Memory = function() { };
com_hurlant_util_Memory.__name__ = ["com","hurlant","util","Memory"];
com_hurlant_util_Memory.gc = function() {
};
com_hurlant_util_Memory.get_used = function() {
	return 0;
};
var com_hurlant_util_System = function() { };
com_hurlant_util_System.__name__ = ["com","hurlant","util","System"];
com_hurlant_util_System.getSecureRandomBytes = function(length) {
	var ba = com_hurlant_util__$ByteArray_ByteArray_$Impl_$._new();
	var _g1 = 0;
	while(_g1 < length) {
		++_g1;
		com_hurlant_util__$ByteArray_ByteArray_$Impl_$.writeByte(ba,Std.random(256));
	}
	com_hurlant_util__$ByteArray_ByteArray_$Impl_$.set_position(ba,0);
	return ba;
};
var haxe_StackItem = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.toString = $estr;
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
var haxe_CallStack = function() { };
haxe_CallStack.__name__ = ["haxe","CallStack"];
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			stack.push(haxe_StackItem.FilePos(method,site.getFileName(),site.getLineNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s[1]) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s[2];
		b.b += "module ";
		b.b += m == null?"null":"" + m;
		break;
	case 2:
		var line = s[4];
		var file = s[3];
		var s1 = s[2];
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b += file == null?"null":"" + file;
		b.b += " line ";
		b.b += line == null?"null":"" + line;
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var meth = s[3];
		var cname = s[2];
		b.b += cname == null?"null":"" + cname;
		b.b += ".";
		b.b += meth == null?"null":"" + meth;
		break;
	case 4:
		var n = s[2];
		b.b += "local function #";
		b.b += n == null?"null":"" + n;
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function"?haxe_StackItem.LocalFunction():meth == "Global code"?null:haxe_StackItem.Method(path.join("."),meth),file,line1));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	high: null
	,low: null
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Log = function() { };
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,data: null
	,blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(srcpos == 0 && len == src.length) {
			this.b.set(src.b,pos);
		} else {
			this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
		}
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,setInt32: function(pos,v) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		this.data.setInt32(pos,v,true);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Error = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_FPHelper = function() { };
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
haxe_io_FPHelper.i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) {
		return 0.0;
	}
	return sign * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) {
		return 0;
	}
	var af = f < 0?-f:f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) {
		exp = -127;
	} else if(exp > 128) {
		exp = 128;
	}
	return (f < 0?-2147483648:0) | exp + 127 << 23 | Math.round((af / Math.pow(2,exp) - 1) * 8388608) & 8388607;
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	var sign = 1 - (high >>> 31 << 1);
	var exp = (high >> 20 & 2047) - 1023;
	var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
	if(sig == 0 && exp == -1023) {
		return 0.0;
	}
	return sign * (1.0 + Math.pow(2,-52) * sig) * Math.pow(2,exp);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	if(v == 0) {
		i64.low = 0;
		i64.high = 0;
	} else {
		var av = v < 0?-v:v;
		var exp = Math.floor(Math.log(av) / 0.6931471805599453);
		var sig = Math.round((av / Math.pow(2,exp) - 1) * 4503599627370496.);
		i64.low = sig | 0;
		i64.high = (v < 0?-2147483648:0) | exp + 1023 << 20 | (sig / 4294967296.0 | 0);
	}
	return i64;
};
var haxe_unit_TestResult = function() {
	this.m_tests = new List();
	this.success = true;
};
haxe_unit_TestResult.__name__ = ["haxe","unit","TestResult"];
haxe_unit_TestResult.prototype = {
	m_tests: null
	,success: null
	,add: function(t) {
		this.m_tests.add(t);
		if(!t.success) {
			this.success = false;
		}
	}
	,toString: function() {
		var buf_b = "";
		var failures = 0;
		var _g_head = this.m_tests.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			if(val.success == false) {
				buf_b += "* ";
				buf_b += val.classname == null?"null":"" + val.classname;
				buf_b += "::";
				buf_b += val.method == null?"null":"" + val.method;
				buf_b += "()";
				buf_b += "\n";
				buf_b += "ERR: ";
				if(val.posInfos != null) {
					buf_b += Std.string(val.posInfos.fileName);
					buf_b += ":";
					buf_b += Std.string(val.posInfos.lineNumber);
					buf_b += "(";
					buf_b += Std.string(val.posInfos.className);
					buf_b += ".";
					buf_b += Std.string(val.posInfos.methodName);
					buf_b += ") - ";
				}
				buf_b += val.error == null?"null":"" + val.error;
				buf_b += "\n";
				if(val.backtrace != null) {
					buf_b += val.backtrace == null?"null":"" + val.backtrace;
					buf_b += "\n";
				}
				buf_b += "\n";
				++failures;
			}
		}
		buf_b += "\n";
		if(failures == 0) {
			buf_b += "OK ";
		} else {
			buf_b += "FAILED ";
		}
		buf_b += Std.string(this.m_tests.length);
		buf_b += " tests, ";
		buf_b += failures == null?"null":"" + failures;
		buf_b += " failed, ";
		buf_b += Std.string(this.m_tests.length - failures);
		buf_b += " success";
		buf_b += "\n";
		return buf_b;
	}
	,__class__: haxe_unit_TestResult
};
var haxe_unit_TestRunner = function() {
	this.result = new haxe_unit_TestResult();
	this.cases = new List();
};
haxe_unit_TestRunner.__name__ = ["haxe","unit","TestRunner"];
haxe_unit_TestRunner.print = function(v) {
	var msg = js_Boot.__string_rec(v,"");
	var d;
	var tmp;
	if(typeof(document) != "undefined") {
		d = document.getElementById("haxe:trace");
		tmp = d != null;
	} else {
		tmp = false;
	}
	if(tmp) {
		msg = StringTools.htmlEscape(msg).split("\n").join("<br/>");
		d.innerHTML += msg + "<br/>";
	} else if(typeof process != "undefined" && process.stdout != null && process.stdout.write != null) {
		process.stdout.write(msg);
	} else if(typeof console != "undefined" && console.log != null) {
		console.log(msg);
	}
};
haxe_unit_TestRunner.customTrace = function(v,p) {
	haxe_unit_TestRunner.print(p.fileName + ":" + p.lineNumber + ": " + Std.string(v) + "\n");
};
haxe_unit_TestRunner.prototype = {
	result: null
	,cases: null
	,add: function(c) {
		this.cases.add(c);
	}
	,run: function() {
		this.result = new haxe_unit_TestResult();
		var _g_head = this.cases.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			this.runCase(val);
		}
		haxe_unit_TestRunner.print(this.result.toString());
		return this.result.success;
	}
	,runCase: function(t) {
		var old = haxe_Log.trace;
		haxe_Log.trace = haxe_unit_TestRunner.customTrace;
		var cl = t == null?null:js_Boot.getClass(t);
		var fields = Type.getInstanceFields(cl);
		haxe_unit_TestRunner.print("Class: " + Type.getClassName(cl) + " ");
		var _g = 0;
		while(_g < fields.length) {
			var f = fields[_g];
			++_g;
			var field = Reflect.field(t,f);
			if(StringTools.startsWith(f,"test") && Reflect.isFunction(field)) {
				t.currentTest = new haxe_unit_TestStatus();
				t.currentTest.classname = Type.getClassName(cl);
				t.currentTest.method = f;
				t.setup();
				try {
					field.apply(t,[]);
					if(t.currentTest.done) {
						t.currentTest.success = true;
						haxe_unit_TestRunner.print(".");
					} else {
						t.currentTest.success = false;
						t.currentTest.error = "(warning) no assert";
						haxe_unit_TestRunner.print("W");
					}
				} catch( $e0 ) {
					haxe_CallStack.lastException = $e0;
					if ($e0 instanceof js__$Boot_HaxeError) $e0 = $e0.val;
					if( js_Boot.__instanceof($e0,haxe_unit_TestStatus) ) {
						var e = $e0;
						haxe_unit_TestRunner.print("F");
						t.currentTest.backtrace = haxe_CallStack.toString(haxe_CallStack.exceptionStack());
					} else {
					var e1 = $e0;
					haxe_unit_TestRunner.print("E");
					if(e1.message != null) {
						t.currentTest.error = "exception thrown : " + Std.string(e1) + " [" + Std.string(e1.message) + "]";
					} else {
						t.currentTest.error = "exception thrown : " + Std.string(e1);
					}
					t.currentTest.backtrace = haxe_CallStack.toString(haxe_CallStack.exceptionStack());
					}
				}
				this.result.add(t.currentTest);
				t.tearDown();
			}
		}
		haxe_unit_TestRunner.print("\n");
		haxe_Log.trace = old;
	}
	,__class__: haxe_unit_TestRunner
};
var haxe_unit_TestStatus = function() {
	this.done = false;
	this.success = false;
};
haxe_unit_TestStatus.__name__ = ["haxe","unit","TestStatus"];
haxe_unit_TestStatus.prototype = {
	done: null
	,success: null
	,error: null
	,method: null
	,classname: null
	,posInfos: null
	,backtrace: null
	,__class__: haxe_unit_TestStatus
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) this.a[_g1++] = 0;
		this.byteLength = len;
	}
};
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null?null:end - begin);
	var result = new ArrayBuffer(u.byteLength);
	new Uint8Array(result).set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	byteLength: null
	,a: null
	,slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_DataView = function(buffer,byteOffset,byteLength) {
	this.buf = buffer;
	this.offset = byteOffset == null?0:byteOffset;
	this.length = byteLength == null?buffer.byteLength - this.offset:byteLength;
	if(this.offset < 0 || this.length < 0 || this.offset + this.length > buffer.byteLength) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
};
js_html_compat_DataView.__name__ = ["js","html","compat","DataView"];
js_html_compat_DataView.prototype = {
	buf: null
	,offset: null
	,length: null
	,getInt8: function(byteOffset) {
		var v = this.buf.a[this.offset + byteOffset];
		if(v >= 128) {
			return v - 256;
		} else {
			return v;
		}
	}
	,getUint8: function(byteOffset) {
		return this.buf.a[this.offset + byteOffset];
	}
	,getInt16: function(byteOffset,littleEndian) {
		var v = this.getUint16(byteOffset,littleEndian);
		if(v >= 32768) {
			return v - 65536;
		} else {
			return v;
		}
	}
	,getUint16: function(byteOffset,littleEndian) {
		if(littleEndian) {
			return this.buf.a[this.offset + byteOffset] | this.buf.a[this.offset + byteOffset + 1] << 8;
		} else {
			return this.buf.a[this.offset + byteOffset] << 8 | this.buf.a[this.offset + byteOffset + 1];
		}
	}
	,getInt32: function(byteOffset,littleEndian) {
		var p = this.offset + byteOffset;
		var a = this.buf.a[p++];
		var b = this.buf.a[p++];
		var c = this.buf.a[p++];
		var d = this.buf.a[p++];
		if(littleEndian) {
			return a | b << 8 | c << 16 | d << 24;
		} else {
			return d | c << 8 | b << 16 | a << 24;
		}
	}
	,getUint32: function(byteOffset,littleEndian) {
		var v = this.getInt32(byteOffset,littleEndian);
		if(v < 0) {
			return v + 4294967296.;
		} else {
			return v;
		}
	}
	,getFloat32: function(byteOffset,littleEndian) {
		return haxe_io_FPHelper.i32ToFloat(this.getInt32(byteOffset,littleEndian));
	}
	,getFloat64: function(byteOffset,littleEndian) {
		var a = this.getInt32(byteOffset,littleEndian);
		var b = this.getInt32(byteOffset + 4,littleEndian);
		return haxe_io_FPHelper.i64ToDouble(littleEndian?a:b,littleEndian?b:a);
	}
	,setInt8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value < 0?value + 128 & 255:value & 255;
	}
	,setUint8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setInt16: function(byteOffset,value,littleEndian) {
		this.setUint16(byteOffset,value < 0?value + 65536:value,littleEndian);
	}
	,setUint16: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
		} else {
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p] = value & 255;
		}
	}
	,setInt32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,value,littleEndian);
	}
	,setUint32: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >>> 24;
		} else {
			this.buf.a[p++] = value >>> 24;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value & 255;
		}
	}
	,setFloat32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,haxe_io_FPHelper.floatToI32(value),littleEndian);
	}
	,setFloat64: function(byteOffset,value,littleEndian) {
		var i64 = haxe_io_FPHelper.doubleToI64(value);
		if(littleEndian) {
			this.setUint32(byteOffset,i64.low);
			this.setUint32(byteOffset,i64.high);
		} else {
			this.setUint32(byteOffset,i64.high);
			this.setUint32(byteOffset,i64.low);
		}
	}
	,__class__: js_html_compat_DataView
};
var js_html_compat_Uint8Array = function() { };
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
if(Array.prototype.indexOf) {
	HxOverrides.indexOf = function(a,o,i) {
		return Array.prototype.indexOf.call(a,o,i);
	};
}
String.prototype.__class__ = String;
String.__name__ = ["String"];
Array.__name__ = ["Array"];
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var DataView = $global.DataView || js_html_compat_DataView;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
com_hurlant_crypto_hash_MD2.HASH_SIZE = 16;
com_hurlant_crypto_hash_MD2.S = [41,46,67,201,162,216,124,1,61,54,84,161,236,240,6,19,98,167,5,243,192,199,115,140,152,147,43,217,188,76,130,202,30,155,87,60,253,212,224,22,103,66,111,24,138,23,229,18,190,78,196,214,218,158,222,73,160,251,245,142,187,47,238,122,169,104,121,145,21,178,7,63,148,194,16,137,11,34,95,33,128,127,93,154,90,144,50,39,53,62,204,231,191,247,151,3,255,25,48,179,72,165,181,209,215,94,146,42,172,86,170,198,79,184,56,210,150,164,125,182,118,252,107,226,156,116,4,241,69,157,112,89,100,113,135,32,134,91,207,101,230,45,168,2,27,96,37,173,174,176,185,246,28,70,97,105,52,64,126,15,85,71,163,35,221,81,175,58,195,92,249,206,186,197,234,38,44,83,13,110,133,40,132,9,211,223,205,244,65,129,77,82,106,220,55,200,108,193,171,250,36,225,123,8,12,189,177,74,120,136,149,139,227,99,232,109,233,203,213,254,59,0,29,57,242,239,183,14,102,88,208,228,166,119,114,248,235,117,75,10,49,68,80,180,143,237,31,26,219,153,141,51,159,17,131,20];
com_hurlant_crypto_hash_MD5.HASH_SIZE = 16;
com_hurlant_crypto_hash_SHA1.HASH_SIZE = 20;
com_hurlant_crypto_hash_SHA256.k = [1116352408,1899447441,-1245643825,-373957723,961987163,1508970993,-1841331548,-1424204075,-670586216,310598401,607225278,1426881987,1925078388,-2132889090,-1680079193,-1046744716,-459576895,-272742522,264347078,604807628,770255983,1249150122,1555081692,1996064986,-1740746414,-1473132947,-1341970488,-1084653625,-958395405,-710438585,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,-2117940946,-1838011259,-1564481375,-1474664885,-1035236496,-949202525,-778901479,-694614492,-200395387,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,-2067236844,-1933114872,-1866530822,-1538233109,-1090935817,-965641998];
com_hurlant_crypto_prng_ARC4.psize = 256;
com_hurlant_crypto_symmetric_AESKey.Nb = 4;
com_hurlant_crypto_symmetric_AESKey._Sbox = [99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22];
com_hurlant_crypto_symmetric_AESKey._InvSbox = [82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125];
com_hurlant_crypto_symmetric_AESKey._Xtime2Sbox = [198,248,238,246,255,214,222,145,96,2,206,86,231,181,77,236,143,31,137,250,239,178,142,251,65,179,95,69,35,83,228,155,117,225,61,76,108,126,245,131,104,81,209,249,226,171,98,42,8,149,70,157,48,55,10,47,14,36,27,223,205,78,127,234,18,29,88,52,54,220,180,91,164,118,183,125,82,221,94,19,166,185,0,193,64,227,121,182,212,141,103,114,148,152,176,133,187,197,79,237,134,154,102,17,138,233,4,254,160,120,37,75,162,93,128,5,63,33,112,241,99,119,175,66,32,229,253,191,129,24,38,195,190,53,136,46,147,85,252,122,200,186,50,230,192,25,158,163,68,84,59,11,140,199,107,40,167,188,22,173,219,100,116,20,146,12,72,184,159,189,67,196,57,49,211,242,213,139,110,218,1,177,156,73,216,172,243,207,202,244,71,16,111,240,74,92,56,87,115,151,203,161,232,62,150,97,13,15,224,124,113,204,144,6,247,28,194,106,174,105,23,153,58,39,217,235,43,34,210,169,7,51,45,60,21,201,135,170,80,165,3,89,9,26,101,215,132,208,130,41,90,30,123,168,109,44];
com_hurlant_crypto_symmetric_AESKey._Xtime3Sbox = [165,132,153,141,13,189,177,84,80,3,169,125,25,98,230,154,69,157,64,135,21,235,201,11,236,103,253,234,191,247,150,91,194,28,174,106,90,65,2,79,92,244,52,8,147,115,83,63,12,82,101,94,40,161,15,181,9,54,155,61,38,105,205,159,27,158,116,46,45,178,238,251,246,77,97,206,123,62,113,151,245,104,0,44,96,31,200,237,190,70,217,75,222,212,232,74,107,42,229,22,197,215,85,148,207,16,6,129,240,68,186,227,243,254,192,138,173,188,72,4,223,193,117,99,48,26,14,109,76,20,53,47,225,162,204,57,87,242,130,71,172,231,43,149,160,152,209,127,102,126,171,131,202,41,211,60,121,226,29,118,59,86,78,30,219,10,108,228,93,110,239,166,168,164,55,139,50,67,89,183,140,100,210,224,180,250,7,37,175,142,233,24,213,136,111,114,36,241,199,81,35,124,156,33,221,220,134,133,144,66,196,170,216,5,1,18,163,95,249,208,145,88,39,185,56,19,179,51,187,112,137,167,182,34,146,32,73,255,120,122,143,248,128,23,218,49,198,184,195,176,119,17,203,252,214,58];
com_hurlant_crypto_symmetric_AESKey._Xtime2 = [0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,252,254,27,25,31,29,19,17,23,21,11,9,15,13,3,1,7,5,59,57,63,61,51,49,55,53,43,41,47,45,35,33,39,37,91,89,95,93,83,81,87,85,75,73,79,77,67,65,71,69,123,121,127,125,115,113,119,117,107,105,111,109,99,97,103,101,155,153,159,157,147,145,151,149,139,137,143,141,131,129,135,133,187,185,191,189,179,177,183,181,171,169,175,173,163,161,167,165,219,217,223,221,211,209,215,213,203,201,207,205,195,193,199,197,251,249,255,253,243,241,247,245,235,233,239,237,227,225,231,229];
com_hurlant_crypto_symmetric_AESKey._Xtime9 = [0,9,18,27,36,45,54,63,72,65,90,83,108,101,126,119,144,153,130,139,180,189,166,175,216,209,202,195,252,245,238,231,59,50,41,32,31,22,13,4,115,122,97,104,87,94,69,76,171,162,185,176,143,134,157,148,227,234,241,248,199,206,213,220,118,127,100,109,82,91,64,73,62,55,44,37,26,19,8,1,230,239,244,253,194,203,208,217,174,167,188,181,138,131,152,145,77,68,95,86,105,96,123,114,5,12,23,30,33,40,51,58,221,212,207,198,249,240,235,226,149,156,135,142,177,184,163,170,236,229,254,247,200,193,218,211,164,173,182,191,128,137,146,155,124,117,110,103,88,81,74,67,52,61,38,47,16,25,2,11,215,222,197,204,243,250,225,232,159,150,141,132,187,178,169,160,71,78,85,92,99,106,113,120,15,6,29,20,43,34,57,48,154,147,136,129,190,183,172,165,210,219,192,201,246,255,228,237,10,3,24,17,46,39,60,53,66,75,80,89,102,111,116,125,161,168,179,186,133,140,151,158,233,224,251,242,205,196,223,214,49,56,35,42,21,28,7,14,121,112,107,98,93,84,79,70];
com_hurlant_crypto_symmetric_AESKey._XtimeB = [0,11,22,29,44,39,58,49,88,83,78,69,116,127,98,105,176,187,166,173,156,151,138,129,232,227,254,245,196,207,210,217,123,112,109,102,87,92,65,74,35,40,53,62,15,4,25,18,203,192,221,214,231,236,241,250,147,152,133,142,191,180,169,162,246,253,224,235,218,209,204,199,174,165,184,179,130,137,148,159,70,77,80,91,106,97,124,119,30,21,8,3,50,57,36,47,141,134,155,144,161,170,183,188,213,222,195,200,249,242,239,228,61,54,43,32,17,26,7,12,101,110,115,120,73,66,95,84,247,252,225,234,219,208,205,198,175,164,185,178,131,136,149,158,71,76,81,90,107,96,125,118,31,20,9,2,51,56,37,46,140,135,154,145,160,171,182,189,212,223,194,201,248,243,238,229,60,55,42,33,16,27,6,13,100,111,114,121,72,67,94,85,1,10,23,28,45,38,59,48,89,82,79,68,117,126,99,104,177,186,167,172,157,150,139,128,233,226,255,244,197,206,211,216,122,113,108,103,86,93,64,75,34,41,52,63,14,5,24,19,202,193,220,215,230,237,240,251,146,153,132,143,190,181,168,163];
com_hurlant_crypto_symmetric_AESKey._XtimeD = [0,13,26,23,52,57,46,35,104,101,114,127,92,81,70,75,208,221,202,199,228,233,254,243,184,181,162,175,140,129,150,155,187,182,161,172,143,130,149,152,211,222,201,196,231,234,253,240,107,102,113,124,95,82,69,72,3,14,25,20,55,58,45,32,109,96,119,122,89,84,67,78,5,8,31,18,49,60,43,38,189,176,167,170,137,132,147,158,213,216,207,194,225,236,251,246,214,219,204,193,226,239,248,245,190,179,164,169,138,135,144,157,6,11,28,17,50,63,40,37,110,99,116,121,90,87,64,77,218,215,192,205,238,227,244,249,178,191,168,165,134,139,156,145,10,7,16,29,62,51,36,41,98,111,120,117,86,91,76,65,97,108,123,118,85,88,79,66,9,4,19,30,61,48,39,42,177,188,171,166,133,136,159,146,217,212,195,206,237,224,247,250,183,186,173,160,131,142,153,148,223,210,197,200,235,230,241,252,103,106,125,112,83,94,73,68,15,2,21,24,59,54,33,44,12,1,22,27,56,53,34,47,100,105,126,115,80,93,74,71,220,209,198,203,232,229,242,255,180,185,174,163,128,141,154,151];
com_hurlant_crypto_symmetric_AESKey._XtimeE = [0,14,28,18,56,54,36,42,112,126,108,98,72,70,84,90,224,238,252,242,216,214,196,202,144,158,140,130,168,166,180,186,219,213,199,201,227,237,255,241,171,165,183,185,147,157,143,129,59,53,39,41,3,13,31,17,75,69,87,89,115,125,111,97,173,163,177,191,149,155,137,135,221,211,193,207,229,235,249,247,77,67,81,95,117,123,105,103,61,51,33,47,5,11,25,23,118,120,106,100,78,64,82,92,6,8,26,20,62,48,34,44,150,152,138,132,174,160,178,188,230,232,250,244,222,208,194,204,65,79,93,83,121,119,101,107,49,63,45,35,9,7,21,27,161,175,189,179,153,151,133,139,209,223,205,195,233,231,245,251,154,148,134,136,162,172,190,176,234,228,246,248,210,220,206,192,122,116,102,104,66,76,94,80,10,4,22,24,50,60,46,32,236,226,240,254,212,218,200,198,156,146,128,142,164,170,184,182,12,2,16,30,52,58,40,38,124,114,96,110,68,74,88,86,55,57,43,37,15,1,19,29,71,73,91,85,127,113,99,109,215,217,203,197,239,225,243,253,167,169,187,181,159,145,131,141];
com_hurlant_crypto_symmetric_AESKey._Rcon = [0,1,2,4,8,16,32,64,128,27,54];
com_hurlant_crypto_symmetric_BlowFishKey.KP = [608135816,-2052912941,320440878,57701188,-1542899678,698298832,137296536,-330404727,1160258022,953160567,-1101764913,887688300,-1062458953,-914599715,1065670069,-1253635817,-1843997223,-1988494565];
com_hurlant_crypto_symmetric_BlowFishKey.KS0 = [-785314906,-1730169428,805139163,-803545161,-1193168915,1780907670,-1166241723,-248741991,614570311,-1282315017,134345442,-2054226922,1667834072,1901547113,-1537671517,-191677058,227898511,1921955416,1904987480,-2112533778,2069144605,-1034266187,-1674521287,720527379,-976113629,677414384,-901678824,-1193592593,-1904616272,1614419982,1822297739,-1340175810,-686458943,-1120842969,2024746970,1432378464,-430627341,-1437226092,1464375394,1676153920,1439316330,715854006,-1261675468,289532110,-1588296017,2087905683,-1276242927,1668267050,732546397,1947742710,-832815594,-1685613794,-1344882125,1814351708,2050118529,680887927,999245976,1800124847,-994056165,1713906067,1641548236,-81679983,1216130144,1575780402,-276538019,-377129551,-601480446,-345695352,596196993,-745100091,258830323,-2081144263,772490370,-1534844924,1774776394,-1642095778,566650946,-152474470,1728879713,-1412200208,1783734482,-665571480,-1777359064,-1420741725,1861159788,326777828,-1170476976,2130389656,-1578015459,967770486,1724537150,-2109534584,-1930525159,1164943284,2105845187,998989502,-529566248,-2050940813,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,-804646328,-619713837,1240580251,122909385,-2137449605,634681816,-152510729,-469872614,-1233564613,-1754472259,79693498,-1045868618,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,-1691314900,-863943356,-1352745719,-1092366332,-567063811,1712269319,422464435,-1060394921,1170764815,-771006663,-1177289765,1434042557,442511882,-694091578,1076654713,1738483198,-81812532,-1901729288,-617471240,1014306527,-43947243,793779912,-1392160085,842905082,-48003232,1395751752,1040244610,-1638115397,-898659168,445077038,-552113701,-717051658,679411651,-1402522938,-1940957837,1767581616,-1144366904,-503340195,-1192226400,284835224,-48135240,1258075500,768725851,-1705778055,-1225243291,-762426948,1274779536,-505548070,-1530167757,1660621633,-823867672,-283063590,913787905,-797008130,737222580,-1780753843,-1366257256,-357724559,1804850592,-795946544,-1345903136,-1908647121,-1904896841,-1879645445,-233690268,-2004305902,-1878134756,1336762016,1754252060,-774901359,-1280786003,791618072,-1106372745,-361419266,-1962795103,-442446833,-1250986776,413987798,-829824359,-1264037920,-49028937,2093235073,-760370983,375366246,-2137688315,-1815317740,555357303,-424861595,2008414854,-950779147,-73583153,-338841844,2067696032,-700376109,-1373733303,2428461,544322398,577241275,1471733935,610547355,-267798242,1432588573,1507829418,2025931657,-648391809,545086370,48609733,-2094660746,1653985193,298326376,1316178497,-1287180854,2064951626,458293330,-1705826027,-703637697,-1130641692,727753846,-2115603456,146436021,1461446943,-224990101,705550613,-1235000031,-407242314,-13368018,-981117340,1404054877,-1449160799,146425753,1854211946];
com_hurlant_crypto_symmetric_BlowFishKey.KS1 = [1266315497,-1246549692,-613086930,-1004984797,-1385257296,1235738493,-1662099272,-1880247706,-324367247,1771706367,1449415276,-1028546847,422970021,1963543593,-1604775104,-468174274,1062508698,1531092325,1804592342,-1711849514,-1580033017,-269995787,1294809318,-265986623,1289560198,-2072974554,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,-1214491899,-1437595849,1040679964,2145300060,-1904392980,1461121720,-1338320329,-263189491,-266592508,33600511,-1374882534,1018524850,629373528,-603381315,-779021319,2091462646,-1808644237,586499841,988145025,935516892,-927631820,-1695294041,-1455136442,265290510,-322386114,-1535828415,-499593831,1005194799,847297441,406762289,1314163512,1332590856,1866599683,-167115585,750260880,613907577,1450815602,-1129346641,-560302305,-644675568,-1282691566,-590397650,1427272223,778793252,1343938022,-1618686585,2052605720,1946737175,-1130390852,-380928628,-327488454,-612033030,1661551462,-1000029230,-283371449,840292616,-582796489,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,-2119403562,1594956187,70604529,-677132437,1007753275,1495573769,-225450259,-1745748998,-1631928532,504708206,-2031925904,-353800271,-2045878774,1514023603,1998579484,1312622330,694541497,-1712906993,-2143385130,1382467621,776784248,-1676627094,-971698502,-1797068168,-1510196141,503983604,-218673497,907881277,423175695,432175456,1378068232,-149744970,-340918674,-356311194,-474200683,-1501837181,-1317062703,26017576,-1020076561,-1100195163,1700274565,1756076034,-288447217,-617638597,720338349,1533947780,354530856,688349552,-321042571,1637815568,332179504,-345916010,53804574,-1442618417,-1250730864,1282449977,-711025141,-877994476,-288586052,1617046695,-1666491221,-1292663698,1686838959,431878346,-1608291911,1700445008,1080580658,1009431731,832498133,-1071531785,-1688990951,-2023776103,-1778935426,1648197032,-130578278,-1746719369,300782431,375919233,238389289,-941219882,-1763778655,2019080857,1475708069,455242339,-1685863425,448939670,-843904277,1395535956,-1881585436,1841049896,1491858159,885456874,-30872223,-293847949,1565136089,-396052509,1108368660,540939232,1173283510,-1549095958,-613658859,-87339056,-951913406,-278217803,1699691293,1103962373,-669091426,-2038084153,-464828566,1031889488,-815619598,1535977030,-58162272,-1043876189,2132092099,1774941330,1199868427,1452454533,157007616,-1390851939,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,-1919713727,-698356495,1814182875,2094937945,-873565088,1082520231,-831049106,-1509457788,435703966,-386934699,1641649973,-1452693590,-989067582,1510255612,-2146710820,-1639679442,-1018874748,-36346107,236887753,-613164077,274041037,1734335097,-479771840,-976997275,1899903192,1026095262,-244449504,356393447,-1884275382,-421290197,-612127241];
com_hurlant_crypto_symmetric_BlowFishKey.KS2 = [-381855128,-1803468553,-162781668,-1805047500,1091903735,1979897079,-1124832466,-727580568,-737663887,857797738,1136121015,1342202287,507115054,-1759230650,337727348,-1081374656,1301675037,-1766485585,1895095763,1721773893,-1078195732,62756741,2142006736,835421444,-1762973773,1442658625,-635090970,-1412822374,676362277,1392781812,170690266,-373920261,1759253602,-683120384,1745797284,664899054,1329594018,-393761396,-1249058810,2062866102,-1429332356,-751345684,-830954599,1080764994,553557557,-638351943,-298199125,991055499,499776247,1265440854,648242737,-354183246,980351604,-581221582,1749149687,-898096901,-83167922,-654396521,1161844396,-1169648345,1431517754,545492359,-26498633,-795437749,1437099964,-1592419752,-861329053,-1713251533,-1507177898,1060185593,1593081372,-1876348548,-34019326,69676912,-2135222948,86519011,-1782508216,-456757982,1220612927,-955283748,133810670,1090789135,1078426020,1569222167,845107691,-711212847,-222510705,1091646820,628848692,1613405280,-537335645,526609435,236106946,48312990,-1352249391,-892239595,1797494240,859738849,992217954,-289490654,-2051890674,-424014439,-562951028,765654824,-804095931,-1783130883,1685915746,-405998096,1414112111,-2021832454,-1013056217,-214004450,172450625,-1724973196,980381355,-185008841,-1475158944,-1578377736,-1726226100,-613520627,-964995824,1835478071,660984891,-590288892,-248967737,-872349789,-1254551662,1762651403,1719377915,-824476260,-1601057013,-652910941,-1156370552,1364962596,2073328063,1983633131,926494387,-871278215,-2144935273,-198299347,1749200295,-966120645,309677260,2016342300,1779581495,-1215147545,111262694,1274766160,443224088,298511866,1025883608,-488520759,1145181785,168956806,-653464466,-710153686,1689216846,-628709281,-1094719096,1692713982,-1648590761,-252198778,1618508792,1610833997,-771914938,-164094032,2001055236,-684262196,-2092799181,-266425487,-1333771897,1006657119,2006996926,-1108824540,1430667929,-1084739999,1314452623,-220332638,-193663176,-2021016126,1399257539,-927756684,-1267338667,1190975929,2062231137,-1960976508,-2073424263,-1856006686,1181637006,548689776,-1932175983,-922558900,-1190417183,-1149106736,296247880,1970579870,-1216407114,-525738999,1714227617,-1003338189,-396747006,166772364,1251581989,493813264,448347421,195405023,-1584991729,677966185,-591930749,1463355134,-1578971493,1338867538,1343315457,-1492745222,-1610435132,233230375,-1694987225,2000651841,-1017099258,1638401717,-266896856,-1057650976,6314154,819756386,300326615,590932579,1405279636,-1027467724,-1144263082,-1866680610,-335774303,-833020554,1862657033,1266418056,963775037,2089974820,-2031914401,1917689273,448879540,-744572676,-313240200,150775221,-667058989,1303187396,508620638,-1318983944,-1568336679,1817252668,1876281319,1457606340,908771278,-574175177,-677760460,-1838972398,1729034894,1080033504];
com_hurlant_crypto_symmetric_BlowFishKey.KS3 = [976866871,-738527793,-1413318857,1522871579,1555064734,1336096578,-746444992,-1715692610,-720269667,-1089506539,-701686658,-956251013,-1215554709,564236357,-1301368386,1781952180,1464380207,-1131123079,-962365742,1699332808,1393555694,1183702653,-713881059,1288719814,691649499,-1447410096,-1399511320,-1101077756,-1577396752,1781354906,1676643554,-1702433246,-1064713544,1126444790,-1524759638,-1661808476,-2084544070,-1679201715,-1880812208,-1167828010,673620729,-1489356063,1269405062,-279616791,-953159725,-145557542,1057255273,2012875353,-2132498155,-2018474495,-1693849939,993977747,-376373926,-1640704105,753973209,36408145,-1764381638,25011837,-774947114,2088578344,530523599,-1376601957,1524020338,1518925132,-534139791,-535190042,1202760957,-309069157,-388774771,674977740,-120232407,2031300136,2019492241,-311074731,-141160892,-472686964,352677332,-1997247046,60907813,90501309,-1007968747,1016092578,-1759044884,-1455814870,457141659,509813237,-174299397,652014361,1966332200,-1319764491,55981186,-1967506245,676427537,-1039476232,-1412673177,-861040033,1307055953,942726286,933058658,-1826555503,-361066302,-79791154,1361170020,2001714738,-1464409218,-1020707514,1222529897,1679025792,-1565652976,-580013532,1770335741,151462246,-1281735158,1682292957,1483529935,471910574,1539241949,458788160,-858652289,1807016891,-576558466,978976581,1043663428,-1129001515,1927990952,-94075717,-1922690386,-1086558393,-761535389,1412390302,-1362987237,-162634896,1947078029,-413461673,-126740879,-1353482915,1077988104,1320477388,886195818,18198404,-508558296,-1785185763,112762804,-831610808,1866414978,891333506,18488651,661792760,1628790961,-409780260,-1153795797,876946877,-1601685023,1372485963,791857591,-1608533303,-534984578,-1127755274,-822013501,-1578587449,445679433,-732971622,-790962485,-720709064,54117162,-963561881,-1913048708,-525259953,-140617289,1140177722,-220915201,668550556,-1080614356,367459370,261225585,-1684794075,-85617823,-826893077,-1029151655,314222801,-1228863650,-486184436,282218597,-888953790,-521376242,379116347,1285071038,846784868,-1625320142,-523005217,-744475605,-1989021154,453669953,1268987020,-977374944,-1015663912,-550133875,-1684459730,-435458233,266596637,-447948204,517658769,-832407089,-851542417,370717030,-47440635,-2070949179,-151313767,-182193321,-1506642397,-1817692879,1456262402,-1393524382,1517677493,1846949527,-1999473716,-560569710,-2118563376,1280348187,1908823572,-423180355,846861322,1172426758,-1007518822,-911584259,1655181056,-1155153950,901632758,1897031941,-1308360158,-1228157060,-847864789,1393639104,373351379,950779232,625454576,-1170726756,-146354570,2007998917,544563296,-2050228658,-1964470824,2058025392,1291430526,424198748,50039436,29584100,-689184263,-1865090967,-1503863136,1057563949,-1039604065,-1219600078,-831004069,1469046755,985887462];
com_hurlant_crypto_symmetric_BlowFishKey.ROUNDS = 16;
com_hurlant_crypto_symmetric_BlowFishKey.BLOCK_SIZE = 8;
com_hurlant_crypto_symmetric_BlowFishKey.SBOX_SK = 256;
com_hurlant_crypto_symmetric_BlowFishKey.P_SZ = 18;
com_hurlant_crypto_symmetric_DESKey.Df_Key = [1,35,69,103,137,171,205,239,254,220,186,152,118,84,50,16,137,171,205,239,1,35,69,103];
com_hurlant_crypto_symmetric_DESKey.bytebit = [128,64,32,16,8,4,2,1];
com_hurlant_crypto_symmetric_DESKey.bigbyte = [8388608,4194304,2097152,1048576,524288,262144,131072,65536,32768,16384,8192,4096,2048,1024,512,256,128,64,32,16,8,4,2,1];
com_hurlant_crypto_symmetric_DESKey.pc1 = [56,48,40,32,24,16,8,0,57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,60,52,44,36,28,20,12,4,27,19,11,3];
com_hurlant_crypto_symmetric_DESKey.totrot = [1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28];
com_hurlant_crypto_symmetric_DESKey.pc2 = [13,16,10,23,0,4,2,27,14,5,20,9,22,18,11,3,25,7,15,6,26,19,12,1,40,51,30,36,46,54,29,39,50,44,32,47,43,48,38,55,33,52,45,41,49,35,28,31];
com_hurlant_crypto_symmetric_DESKey.SP1 = [16843776,0,65536,16843780,16842756,66564,4,65536,1024,16843776,16843780,1024,16778244,16842756,16777216,4,1028,16778240,16778240,66560,66560,16842752,16842752,16778244,65540,16777220,16777220,65540,0,1028,66564,16777216,65536,16843780,4,16842752,16843776,16777216,16777216,1024,16842756,65536,66560,16777220,1024,4,16778244,66564,16843780,65540,16842752,16778244,16777220,1028,66564,16843776,1028,16778240,16778240,0,65540,66560,0,16842756];
com_hurlant_crypto_symmetric_DESKey.SP2 = [-2146402272,-2147450880,32768,1081376,1048576,32,-2146435040,-2147450848,-2147483616,-2146402272,-2146402304,-2147483648,-2147450880,1048576,32,-2146435040,1081344,1048608,-2147450848,0,-2147483648,32768,1081376,-2146435072,1048608,-2147483616,0,1081344,32800,-2146402304,-2146435072,32800,0,1081376,-2146435040,1048576,-2147450848,-2146435072,-2146402304,32768,-2146435072,-2147450880,32,-2146402272,1081376,32,32768,-2147483648,32800,-2146402304,1048576,-2147483616,1048608,-2147450848,-2147483616,1048608,1081344,0,-2147450880,32800,-2147483648,-2146435040,-2146402272,1081344];
com_hurlant_crypto_symmetric_DESKey.SP3 = [520,134349312,0,134348808,134218240,0,131592,134218240,131080,134217736,134217736,131072,134349320,131080,134348800,520,134217728,8,134349312,512,131584,134348800,134348808,131592,134218248,131584,131072,134218248,8,134349320,512,134217728,134349312,134217728,131080,520,131072,134349312,134218240,0,512,131080,134349320,134218240,134217736,512,0,134348808,134218248,131072,134217728,134349320,8,131592,131584,134217736,134348800,134218248,520,134348800,131592,8,134348808,131584];
com_hurlant_crypto_symmetric_DESKey.SP4 = [8396801,8321,8321,128,8396928,8388737,8388609,8193,0,8396800,8396800,8396929,129,0,8388736,8388609,1,8192,8388608,8396801,128,8388608,8193,8320,8388737,1,8320,8388736,8192,8396928,8396929,129,8388736,8388609,8396800,8396929,129,0,0,8396800,8320,8388736,8388737,1,8396801,8321,8321,128,8396929,129,1,8192,8388609,8193,8396928,8388737,8193,8320,8388608,8396801,128,8388608,8192,8396928];
com_hurlant_crypto_symmetric_DESKey.SP5 = [256,34078976,34078720,1107296512,524288,256,1073741824,34078720,1074266368,524288,33554688,1074266368,1107296512,1107820544,524544,1073741824,33554432,1074266112,1074266112,0,1073742080,1107820800,1107820800,33554688,1107820544,1073742080,0,1107296256,34078976,33554432,1107296256,524544,524288,1107296512,256,33554432,1073741824,34078720,1107296512,1074266368,33554688,1073741824,1107820544,34078976,1074266368,256,33554432,1107820544,1107820800,524544,1107296256,1107820800,34078720,0,1074266112,1107296256,524544,33554688,1073742080,524288,0,1074266112,34078976,1073742080];
com_hurlant_crypto_symmetric_DESKey.SP6 = [536870928,541065216,16384,541081616,541065216,16,541081616,4194304,536887296,4210704,4194304,536870928,4194320,536887296,536870912,16400,0,4194320,536887312,16384,4210688,536887312,16,541065232,541065232,0,4210704,541081600,16400,4210688,541081600,536870912,536887296,16,541065232,4210688,541081616,4194304,16400,536870928,4194304,536887296,536870912,16400,536870928,541081616,4210688,541065216,4210704,541081600,0,541065232,16,16384,541065216,4210704,16384,4194320,536887312,0,541081600,536870912,4194320,536887312];
com_hurlant_crypto_symmetric_DESKey.SP7 = [2097152,69206018,67110914,0,2048,67110914,2099202,69208064,69208066,2097152,0,67108866,2,67108864,69206018,2050,67110912,2099202,2097154,67110912,67108866,69206016,69208064,2097154,69206016,2048,2050,69208066,2099200,2,67108864,2099200,67108864,2099200,2097152,67110914,67110914,69206018,69206018,2,2097154,67108864,67110912,2097152,69208064,2050,2099202,69208064,2050,67108866,69208066,69206016,2099200,0,2,69208066,0,2099202,69206016,2048,67108866,67110912,2048,2097154];
com_hurlant_crypto_symmetric_DESKey.SP8 = [268439616,4096,262144,268701760,268435456,268439616,64,268435456,262208,268697600,268701760,266240,268701696,266304,4096,64,268697600,268435520,268439552,4160,266240,262208,268697664,268701696,4160,0,0,268697664,268435520,268439552,266304,262144,266304,262144,268701696,4096,64,268697664,4096,266304,268439552,64,268435520,268697600,268697664,268435456,262144,268439616,0,268701760,262208,268435520,268697600,268439552,268439616,0,268701760,266240,266240,4160,4160,262208,268435456,268701696];
com_hurlant_util_Std2._C0 = HxOverrides.cca("0",0);
com_hurlant_util_Std2._C9 = HxOverrides.cca("9",0);
com_hurlant_util_Std2._Cla = HxOverrides.cca("a",0);
com_hurlant_util_Std2._Clz = HxOverrides.cca("z",0);
com_hurlant_util_Std2._UA = HxOverrides.cca("A",0);
com_hurlant_util_Std2._UZ = HxOverrides.cca("Z",0);
js_Boot.__toStr = {}.toString;
com_hurlant_math_BigInteger.DB = 30;
com_hurlant_math_BigInteger.DV = 1073741824;
com_hurlant_math_BigInteger.DM = com_hurlant_math_BigInteger.DV - 1;
com_hurlant_math_BigInteger.BI_FP = 52;
com_hurlant_math_BigInteger.FV = Math.pow(2,52);
com_hurlant_math_BigInteger.F1 = 22;
com_hurlant_math_BigInteger.F2 = 8;
com_hurlant_math_BigInteger.ZERO = com_hurlant_math_BigInteger.nbv(0);
com_hurlant_math_BigInteger.ONE = com_hurlant_math_BigInteger.nbv(1);
com_hurlant_math_BigInteger.lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];
com_hurlant_math_BigInteger.lplim = 67108864 / com_hurlant_math_BigInteger.lowprimes[com_hurlant_math_BigInteger.lowprimes.length - 1] | 0;
com_hurlant_util_Base64._encodeChars = com_hurlant_util_Base64._initEncoreChar();
com_hurlant_util_Base64._decodeChars = com_hurlant_util_Base64._initDecodeChar();
haxe_io_FPHelper.i64tmp = new haxe__$Int64__$_$_$Int64(0,0);
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
com_hurlant_tests_HaxeCryptoTests.main();
})(typeof console != "undefined" ? console : {log:function(){}}, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
